{"version":3,"sources":["./src/app/views/account/forgot-password/forgot-password.component.html","./src/app/views/account/loginuserlist/loginuserlist.component.html","./src/app/views/account/resetpassword/resetpassword.component.html","./src/app/views/account/setpassword/setpassword.component.html","./src/app/views/account/account-routing.module.ts","./src/app/views/account/account.module.ts","./src/app/views/account/forgot-password/forgot-password.component.scss","./src/app/views/account/forgot-password/forgot-password.component.ts","./src/app/views/account/loginuserlist/loginuserlist.component.scss","./src/app/views/account/loginuserlist/loginuserlist.component.ts","./src/app/views/account/resetpassword/resetpassword.component.ts","./src/app/views/account/setpassword/setpassword.component.ts"],"names":[],"mappings":"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","file":"views-account-account-module.js","sourcesContent":["export default \"<div class=\\\"login-container\\\">\\r\\n  <div class=\\\"login-main\\\">\\r\\n    <!--<a href=\\\"javascript:void(0);\\\"><img src=\\\"assets/default-theme/imagesNew/login-logo.png\\\" /></a>-->\\r\\n    <img src=\\\"{{siteimage}}\\\" />\\r\\n    <div class=\\\"login-box\\\">\\r\\n      <h2>FORGOT PASSWORD?</h2>\\r\\n      <form [formGroup]=\\\"ForgotPswForm\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"login-box-fields\\\" [ngClass]=\\\"{'disabled':loadSave}\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" formControlName='email'>\\r\\n            <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\" class=\\\"alert-danger p-1\\\">\\r\\n              <div *ngIf=\\\"email.errors.required\\\" class=\\\"alert-danger p-1\\\">Email is required.</div>\\r\\n              <div *ngIf=\\\"email.errors.pattern && !email.errors.required\\\" class=\\\"alert-danger p-1\\\">Please enter valid Email Address.</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"max-width: 49%; margin-right: 2%; margin-top: 5px;\\\" (click)=\\\"SendForgotPasswordMail()\\\">SUBMIT</button>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" style=\\\"max-width: 49%;\\\" (click)=\\\"Back()\\\">CANCEL</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader-login\\\"></app-loader>\\r\\n\"","export default \"<div class=\\\"login-container\\\">\\r\\n  <div class=\\\"login-main\\\">\\r\\n    <a href=\\\"javascript:void(0);\\\"><img src=\\\"assets/default-theme/imagesNew/logo.png\\\" /></a>\\r\\n    <div class=\\\"login-box\\\">\\r\\n      <h2>Associated Companies</h2>\\r\\n      <div class=\\\"login-box-fields\\\" [ngClass]=\\\"{'disabled':loadSave}\\\">\\r\\n        <div class=\\\"card border-0\\\">\\r\\n          <ul class=\\\"list-group list-group-flush multicompanylogin\\\">\\r\\n            <li class=\\\"list-group-item\\\" *ngFor=\\\"let comp of lstheadercompany\\\">\\r\\n              <a href=\\\"javascript:void(0);\\\" title=\\\"Switch Company\\\" (click)=\\\"LoginUserForCompany(comp.CompanyId,comp.Email,comp.CompanyName)\\\">\\r\\n                <img src=\\\"{{comp.CompanyLogo}}\\\" style=\\\"height:50px;width:60px;\\\" />\\r\\n                <span>{{comp.CompanyName}}</span>\\r\\n              </a>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader-login\\\"></app-loader>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<div class=\\\"login-container\\\">\\r\\n  <div class=\\\"login-main\\\">\\r\\n    <!--<a href=\\\"javascript:void(0);\\\"><img src=\\\"assets/default-theme/imagesNew/login-logo.png\\\" /></a>-->\\r\\n    <img src=\\\"{{siteimage}}\\\" />\\r\\n    <div class=\\\"login-box\\\">\\r\\n      <h2>RESET PASSWORD</h2>\\r\\n      <form [formGroup]=\\\"resetPasswordForm\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"login-box-fields\\\" [ngClass]=\\\"{'disabled':loadSave}\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" (change)=\\\"change()\\\"\\r\\n                 passwordToggle placeholder=\\\"Please enter password\\\" formControlName=\\\"password\\\" required>\\r\\n          <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\" class=\\\" alert-\\\">\\r\\n            <div *ngIf=\\\"password.errors.required\\\" class=\\\" alert-danger p-1\\\">Password is required</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" (change)=\\\"change()\\\"\\r\\n                 passwordToggle placeholder=\\\"Please enter confirm password\\\" formControlName=\\\"confirmPassword\\\" required>\\r\\n          <div *ngIf=\\\"confirmPassword.invalid && (confirmPassword.dirty || confirmPassword.touched)\\\" class=\\\" alert-\\\">\\r\\n            <div *ngIf=\\\"confirmPassword.errors.required\\\" class=\\\" alert-danger p-1\\\">Confirm password is required</div>\\r\\n            <div *ngIf=\\\"confirmPassword.errors.confirmedValidator\\\" class=\\\" alert-danger p-1\\\">Confirm password does not match</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-12 p-0\\\">\\r\\n          <p class=\\\"alert-warning p-2\\\">Note: Password must be a combination of lower case, upper case, numeric and special character.</p>\\r\\n        </div>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"resetPassword()\\\">Submit</button>\\r\\n          </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader-login\\\"></app-loader>\\r\\n\"","export default \"<div class=\\\"login-container\\\">\\r\\n  <div class=\\\"login-main\\\">\\r\\n    <!--<a href=\\\"javascript:void(0);\\\"><img src=\\\"assets/default-theme/imagesNew/login-logo.png\\\" /></a>-->\\r\\n    <img src=\\\"{{siteimage}}\\\" />\\r\\n    <div class=\\\"login-box\\\">\\r\\n      <h2>SET PASSWORD</h2>\\r\\n      <form [formGroup]=\\\"setPasswordForm\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'disabled':loadSave}\\\">\\r\\n          <input type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Please enter password\\\" passwordToggle class=\\\"form-control\\\">\\r\\n          <!--<div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\">\\r\\n            <div *ngIf=\\\"password.errors.required\\\" class=\\\"alert alert-danger p-1\\\">Password is required</div>\\r\\n          </div>-->\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-12 p-0 mb-3\\\" *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\" style=\\\" margin-top: -13px;\\\">\\r\\n          <div *ngIf=\\\"password.errors.required\\\" class=\\\"alert alert-danger p-1  text-left\\\">Password is required</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" passwordToggle placeholder=\\\"Please enter confirm password\\\" class=\\\"form-control\\\" />\\r\\n          <!--<div *ngIf=\\\"confirmPassword.invalid && (confirmPassword.dirty || confirmPassword.touched)\\\">\\r\\n      <div *ngIf=\\\"confirmPassword.errors.required\\\" class=\\\"alert-danger p-1\\\">Confirm password is required</div>\\r\\n      <div *ngIf=\\\"confirmPassword.errors.mismatched\\\" class=\\\"alert-danger p-1\\\">Confirm password does not match</div>\\r\\n    </div>-->\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-12 p-0 mb-3\\\" *ngIf=\\\"confirmPassword.invalid && (confirmPassword.dirty || confirmPassword.touched)\\\" style=\\\" margin-top: -13px;\\\">\\r\\n          <div *ngIf=\\\"confirmPassword.errors.required\\\" class=\\\"alert-danger p-1 text-left\\\">Confirm password is required</div>\\r\\n          <div *ngIf=\\\"confirmPassword.errors.mismatched\\\" class=\\\"alert-danger p-1  text-left\\\">Confirm password does not match</div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-12 p-0\\\">\\r\\n          <p class=\\\"alert-warning p-2\\\">Note: Password should be combination of lower case, upper case, numeric and special character.</p>\\r\\n        </div>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"setPassword()\\\">SUBMIT</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader-login\\\"></app-loader>\\r\\n\\r\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\r\nimport { SetpasswordComponent } from './setpassword/setpassword.component';\r\nimport { ForgotPasswordComponent } from '../account/forgot-password/forgot-password.component';\r\nimport { ResetpasswordComponent } from './resetpassword/resetpassword.component';\r\nimport { UserProfile } from '../shared/user.service';\r\nimport { LoginuserlistComponent } from './loginuserlist/loginuserlist.component';\r\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'setpassword', component: SetpasswordComponent } ,\n  { path: 'forgot-password', component: ForgotPasswordComponent }, \n  { path: 'resetpassword', component: ResetpasswordComponent },\n  { path: 'multipleuserlogin', component: LoginuserlistComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AccountRoutingModule } from './account-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SetpasswordComponent } from './setpassword/setpassword.component';\nimport { ForgotPasswordComponent } from '../account/forgot-password/forgot-password.component';\nimport { ResetpasswordComponent } from './resetpassword/resetpassword.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { LoginuserlistComponent } from './loginuserlist/loginuserlist.component';\r\n\r\n@NgModule({\n \n  declarations: [\n    ForgotPasswordComponent, SetpasswordComponent, ResetpasswordComponent, LoginuserlistComponent\n  ],\n  imports: [\n    CommonModule,\n    AccountRoutingModule, \n    ReactiveFormsModule,\n    SharedModule\n  ]\n})\nexport class AccountModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2FjY291bnQvZm9yZ290LXBhc3N3b3JkL2ZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, EmailValidator } from '@angular/forms';\nimport { UserService, ForgotPassword } from '../../shared/user.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { CommonService } from '../../shared/common.service';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  emailPattern: RegExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  ForgotPswForm: FormGroup;\n  loadSave = false;\n  siteimage: string;\n  url: string = \"\";\n  urldata: any;\n  sitetitle: string = '';\n  siteURL: string = \"\";\n  siteCompanyURL: string = \"\";\n  siteCompanyID:number=0;\n  forgotPswModel: ForgotPassword = new ForgotPassword();\n  constructor(private fb: FormBuilder\n    , private userService: UserService\n    , private router: Router\n    , private toaster: ToastrService\n    , private commonService: CommonService, private titleService: Title) { }\n\n  ngOnInit() {\n    this.ForgotPswForm = this.fb.group({\n      email: [null, [Validators.required, Validators.pattern(this.emailPattern)]],\n    });\n\n    this.url = window.location.href;\n\n\n    this.url = this.url.slice(9, 19);\n    //---setting Logo on basis of URL\n\n    this.userService.GetSiteURl(this.url).subscribe((result: any) => {\n\n      console.log('dataa', result);\n      this.urldata = JSON.parse(result);\n\n      if (result != null) {\n        this.siteimage = this.urldata[0].SiteLoginLogo;\n        this.sitetitle = this.urldata[0].SiteTitle;\n        this.siteCompanyURL = this.urldata[0].SiteUrl;\n        this.siteCompanyID = this.urldata[0].CompanyId;\n        \n        this.setTitle(this.sitetitle);\n      }\n      else {\n        this.sitetitle = 'SolgenOne'\n        this.setTitle(this.sitetitle);\n        this.siteimage = 'assets/default-theme/imagesNew/login-logo-solgen.png';\n      }\n    });\n\n    if (this.router.url.indexOf('app.loanhomi') > 0) {\n      this.siteURL = \"loanhomi\";\n    }\n    else if (this.router.url.indexOf('app.solgenone') > 0) {\n      this.siteURL = \"solgenone\";\n    }\n    else if (this.router.url.indexOf('solgen.zorbis') > 0) {\n      this.siteURL = \"solgenone\";\n    }\n  }\n\n\n  setTitle(newTitle: string) {\n\n    this.titleService.setTitle(newTitle);\n  }\n\n  SendForgotPasswordMail() {\n    if (this.ForgotPswForm.valid) {\n      this.loadSave = true;\n      this.forgotPswModel.email = this.ForgotPswForm.value.email;\n      this.forgotPswModel.siteTitle = this.sitetitle;\n      this.forgotPswModel.siteImg = this.siteimage\n      this.forgotPswModel.siteCompanyURL = this.siteCompanyURL\n      this.forgotPswModel.siteCompanyID = this.siteCompanyID\n      this.userService.ForgotPsw(this.forgotPswModel).subscribe((res: any) => {\n        if (res) {\n          if (res.statusCode == 200) {\n            this.toaster.success(res.responseMessage);\n            this.router.navigateByUrl('/account');\n            setTimeout(() => { this.loadSave = false; }, 3000);\n          }\n          else {\n            this.loadSave = false;\n            this.toaster.error(res.responseMessage);\n          }\n        }\n      }, error => {\n        this.loadSave = false;\n      });\n    }\n    else {\n      this.commonService.validateAllFormFields(this.ForgotPswForm);\n    }\n  }\n  Back() {\n    this.router.navigateByUrl(\"/account\");\n  }\n  get email() {\n    return this.ForgotPswForm.get('email');\n  }\n  get emailp() { return this.ForgotPswForm.get('emailp'); }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2FjY291bnQvbG9naW51c2VybGlzdC9sb2dpbnVzZXJsaXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserService, Login } from '../../shared/user.service';\nimport { CommonService } from '../../shared/common.service';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { DeviceDetectorService } from 'ngx-device-detector';\n\n@Component({\n  selector: 'app-loginuserlist',\n  templateUrl: './loginuserlist.component.html',\n  styleUrls: ['./loginuserlist.component.scss']\n})\nexport class LoginuserlistComponent implements OnInit {\n  @Output() passwordData: any;\n  lstheadercompany: any;\n  userId: any;\n  loadSave = false;\n  deviceInfo = null;\n  Browser: any;\n  BrowserVersion: any;\n  IPAddress: any;\n  isChecked = false;\n  OS: string\n  OSVersion: string;\n  loginModel: Login = new Login();\n  constructor(private routerService: Router, private fb: FormBuilder, private toaster: ToastrService, private userService: UserService,\n    private commonService: CommonService, private router: Router, private activeRoute: ActivatedRoute, private deviceService: DeviceDetectorService) {\n  }\n  loginForm = this.fb.group({\n    userName: ['', Validators.required],\n    password: ['', Validators.required],\n    rememberMe: ['']\n  });\n  ngOnInit() {\n    this.activeRoute.queryParams.subscribe(params => {\n      let values = params['UserId'];\n      this.GeHeaderCompanyList(values);\n    });\n    \n  }\n\n  LoginUserForCompany(company, userName, CompanyName) {\n    //if (this.loginForm.valid) {\n      this.loadSave = true;\n      this.loginModel.userName = userName;\n      this.loginModel.password = '';\n      this.loginModel.browser = this.Browser + \" \" + this.BrowserVersion;\n      this.loginModel.os = this.OS + \" \" + this.OSVersion;\n      this.loginModel.iPAddress = this.IPAddress;\n    this.loginModel.isMutipleUser = true;\n    this.loginModel.isLoginForMutipleUserCredential = true;\n    this.loginModel.CompanyId = company;\n    this.loginModel.CompanyName = CompanyName;\n      this.userService.login(this.loginModel).subscribe((res: any) => {\n\n        if (res) {\n          if (res.status == 200) {\n            localStorage.setItem(\"access_token\", res.token);\n            localStorage.setItem(\"usertype\", res.usertype);\n            this.commonService.getCurrentUserDetail();\n            this.commonService.getLoggedInName.subscribe((userdetail: any) => {\n            });\n            setTimeout(() => {\n              this.commonService.getLoggedInName.subscribe((userdetail: any) => {\n                \n                this.commonService.getUserModulePermissions(false).subscribe((m: any) => {\n                  localStorage.removeItem('moduleList');\n\n                  localStorage.setItem('moduleList', m);\n                  //  this.router.navigateByUrl('/dashboard');\n                  window.location.href = \"dashboard\";\n                });\n              });\n            }, 2000);\n\n            setTimeout(() => { this.loadSave = false; }, 2000);\n          }\n          else if (res.status == 204) {\n            window.location.href = \"account/multipleuserlogin?UserId=\" + res.userId;\n          }\n          else if (res.status == 201) {//deleted/inactive user\n            this.loadSave = false;\n            this.toaster.error(res.token);\n          }\n\n          else if (res.status == 501) {\n            this.loadSave = false;\n            this.toaster.error(\"Your Account is Blocked for 30 minutes because you have entered wrong username/password\");\n          }\n          else {\n            this.loadSave = false;\n            this.toaster.error(\"Invalid username/password!\");\n          }\n        }\n      }, error => {\n        this.loadSave = false;\n      });\n\n    //}\n    //else {\n    //  this.commonService.validateAllFormFields(this.loginForm);\n    //}\n  }\n  GeHeaderCompanyList(values) {\n    this.commonService.GeHeaderCompanyList(values).subscribe((data: any) => {\n      this.lstheadercompany = data;\n    })\n  }\n\n  epicFunction() {\n    this.deviceInfo = this.deviceService.getDeviceInfo();\n    this.Browser = this.deviceInfo.browser;\n    this.BrowserVersion = this.deviceInfo.browser_version;\n    this.OS = \"\";\n    this.OSVersion = this.deviceInfo.os_version;\n  }\n\n  Back() {\n    this.router.navigateByUrl(\"/account\");\n  }\n}\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService, ResetPassword } from '../../shared/user.service';\r\nimport { CommonService } from '../../shared/common.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { EqualValidator } from '../../shared/custom-validation/equal-validator';\r\nimport { Title } from '@angular/platform-browser';\r\n//import { ConfirmedValidator } from './confirmed.validator';\r\n\n@Component({\n  selector: 'app-resetpassword',\n  templateUrl: './resetpassword.component.html',\n})\nexport class ResetpasswordComponent implements OnInit {\n  @Output() onChange: EventEmitter<any> = new EventEmitter<any>();\n  resetPasswordForm: FormGroup;\n  resetPasswordModel: ResetPassword = new ResetPassword();\n  userId: any;\n  resetToken: any;\n  result = null;\n  tmp = [];\n  loadSave = false;\n  siteURL: string = \"\";\n  url: string = \"\";\n  urldata: any;\n  siteimage: string;\n  sitetitle: string = '';\n  constructor(private route: ActivatedRoute\n    , private userService: UserService\n    , private router: Router, private titleService: Title\n    , private fb: FormBuilder\n    , private commonService: CommonService\n    , private toaster: ToastrService) {\n\n  }\n  ngOnInit() {\n    this.resetPasswordForm = this.fb.group({\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required]\n    },\n      {\n        validator: EqualValidator.ConfirmedValidator('password', 'confirmPassword'),\n        //validator: EqualValidator.matchingPasswords('password', 'confirmPassword')\n      });\n    this.userId = this.findGetParameter(\"userId\");\n    this.resetToken = this.findGetParameter(\"token\");\n    this.url = window.location.href;\n\n    console.log('this.urlbefore', this.url)\n    this.url = this.url.slice(9, 19);\n    //---setting Logo on basis of URL\n    console.log('this.urlafter', this.url)\n    this.userService.GetSiteURl(this.url).subscribe((result: any) => {\n\n      console.log('dataa', result);\n      this.urldata = JSON.parse(result);\n\n      if (result != null) {\n        this.siteimage = this.urldata[0].SiteLoginLogo;\n\n        this.sitetitle = this.urldata[0].SiteTitle;\n\n        this.setTitle(this.sitetitle);\n      }\n      else {\n        this.sitetitle = 'SolgenOne'\n        this.setTitle(this.sitetitle);\n        this.siteimage = 'assets/default-theme/imagesNew/login-logo-solgen.png';\n      }\n\n    })\n\n    console.log(this.router.url);\n    if (this.router.url.indexOf('app.loanhomi') > 0) {\n      this.siteURL = \"loanhomi\";\n    }\n    else if (this.router.url.indexOf('app.solgenone') > 0) {\n      this.siteURL = \"solgenone\";\n    }\n    else if (this.router.url.indexOf('solgen.zorbis') > 0) {\n      this.siteURL = \"solgenone\";\n    }\n\n  }\n  setTitle(newTitle: string) {\n\n    this.titleService.setTitle(newTitle);\n  }\n\n  get password() { return this.resetPasswordForm.get('password'); }\n  get confirmPassword() { return this.resetPasswordForm.get('confirmPassword'); }\n\n  resetPassword() {\n    this.loadSave = true;\n    if (this.resetPasswordForm.valid) {\n      this.resetPasswordModel.password = this.resetPasswordForm.value.password;\n      this.resetPasswordModel.confirmPassword = this.resetPasswordForm.value.confirmPassword;\n      this.resetPasswordModel.userId = this.userId;\n      this.resetPasswordModel.resetToken = this.resetToken;\n      this.userService.resetPassword(this.resetPasswordModel).subscribe((res: any) => {\n        if (res) {\n          if (res.statusCode == 200) {\n            this.toaster.success(\"Your password has been reset successfully.\");\n            this.resetPasswordForm.reset();\n            this.router.navigateByUrl('/account');\n            this.loadSave = false;\n          }\n          else {\n            this.toaster.error(res.responseMessage);\n            this.loadSave = false;\n          }\n        }\n      });\n    }\n    else {\n      this.commonService.validateAllFormFields(this.resetPasswordForm);\n      this.loadSave = false;\n    }\n  }\n\n  findGetParameter(parameterName) {\n    this.result = null,\n      this.tmp = [];\n    var items = location.search.substr(1).split(\"&\");\n    for (var index = 0; index < items.length; index++) {\n      this.tmp = items[index].split(\"=\");\n      if (this.tmp[0] === parameterName) this.result = decodeURIComponent(this.tmp[1]);\n    }\n    return this.result;\n  }\n  change() {\n    if (this.resetPasswordForm.dirty && this.resetPasswordForm.valid) {\n      this.onChange.emit(this.password.value);\n    } else {\n      this.onChange.emit(null);\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService, SetPassword } from '../../shared/user.service';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CommonService, UserDetails } from '../../shared/common.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { EqualValidator } from '../../shared/custom-validation/equal-validator';\nimport { Title } from '@angular/platform-browser';\n@Component({\n  selector: 'app-setpassword',\n  templateUrl: './setpassword.component.html',\n  styles: []\n})\nexport class SetpasswordComponent implements OnInit {\n  LoginUser: UserDetails = new UserDetails();\n  result = null;\n  tmp = [];\n  token: any;\n  siteURL: string = \"\";\n  url: string = \"\";\n  urldata: any;\n  siteimage: string;\n  sitetitle: string = '';\n  setPasswordModel: SetPassword = new SetPassword();\n  userId: any;\n  loadSave = false;\n  constructor(private userService: UserService\n    , private router: Router\n    , private fb: FormBuilder, private titleService: Title \n    , private commonService: CommonService\n    , private toaster: ToastrService) {  }\n  \n  setPasswordForm = this.fb.group({\n    password: ['', Validators.required],\n    confirmPassword: ['', Validators.required]\n  },\n    {\n      validator: EqualValidator.matchingPasswords('password', 'confirmPassword')\n    });\n\n  ngOnInit() {\n    const userid = this.findGetParameter(\"userId\");\n    this.token = this.findGetParameter(\"token\");\n    if (userid) {\n      this.userService.confirmEmail(userid, this.token).subscribe((res: any) => {\n        if (res.statusCode == 500) {\n          this.router.navigateByUrl('/common/unauthorized');\n        }\n        else {\n          this.userId = res.result;\n        }\n      });\n    }\n    this.url = window.location.href;\n\n    console.log('this.urlbefore', this.url)\n    this.url = this.url.slice(9, 19);\n    //---setting Logo on basis of URL\n    console.log('this.urlafter', this.url)\n    this.userService.GetSiteURl(this.url).subscribe((result: any) => {\n\n      console.log('dataa', result);\n      this.urldata = JSON.parse(result);\n\n      if (result != null) {\n        this.siteimage = this.urldata[0].SiteLoginLogo;\n\n        this.sitetitle = this.urldata[0].SiteTitle;\n\n        this.setTitle(this.sitetitle);\n      }\n      else {\n        this.sitetitle = 'SolgenOne'\n        this.setTitle(this.sitetitle);\n        this.siteimage = 'assets/default-theme/imagesNew/login-logo-solgen.png';\n      }\n\n    })\n\n    console.log(this.router.url);\n    if (this.router.url.indexOf('app.loanhomi') > 0) {\n      this.siteURL = \"loanhomi\";\n    }\n    else if (this.router.url.indexOf('app.solgenone') > 0) {\n      this.siteURL = \"solgenone\";\n    }\n    else if (this.router.url.indexOf('solgen.zorbis') > 0) {\n      this.siteURL = \"solgenone\";\n    }\n  }\n\n  setTitle(newTitle: string) {\n\n    this.titleService.setTitle(newTitle);\n  }\n  get password() { return this.setPasswordForm.get('password'); }\n  get confirmPassword() { return this.setPasswordForm.get('confirmPassword'); }\n\n  setPassword() {\n    this.loadSave = true;\n    if (this.setPasswordForm.valid) {\n      this.setPasswordModel.password = this.setPasswordForm.value.password;\n      this.setPasswordModel.confirmPassword = this.setPasswordForm.value.confirmPassword;\n      this.setPasswordModel.userId = this.userId;\n      this.setPasswordModel.token = this.token;\n      this.userService.setPassword(this.setPasswordModel).subscribe((res: any) => {\n        if (res.statusCode === 200) {\n          localStorage.removeItem(\"access_token\");\n          localStorage.removeItem(\"usertype\");\n          localStorage.removeItem(\"moduleList\");\n          localStorage.removeItem(\"userinfo\");\n          this.LoginUser = new UserDetails();\n          this.toaster.success(\"Your account password has been set successfully. Please login.\");\n          this.router.navigateByUrl('/account');\n          this.loadSave = false;\n        }\n        else { \n          this.toaster.error(res.responseMessage);\n          this.loadSave = false;\n        }\n      });\n    }\n    else {\n      this.commonService.validateAllFormFields(this.setPasswordForm);\n      this.loadSave = false;\n    }\n  }\n\n  findGetParameter(parameterName) {\n    this.result = null,\n      this.tmp = [];\n    var items = location.search.substr(1).split(\"&\");\n    for (var index = 0; index < items.length; index++) {\n      this.tmp = items[index].split(\"=\");\n      if (this.tmp[0] === parameterName) this.result = decodeURIComponent(this.tmp[1]);\n    }\n    return this.result;\n  }\n}\n"],"sourceRoot":"webpack:///"}