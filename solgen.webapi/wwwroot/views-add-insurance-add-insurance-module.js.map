{"version":3,"sources":["./src/app/views/add-insurance/add-insurance.component.html","./src/app/views/add-insurance/add-insurance-routing.module.ts","./src/app/views/add-insurance/add-insurance.component.scss","./src/app/views/add-insurance/add-insurance.component.ts","./src/app/views/add-insurance/add-insurance.module.ts","./src/app/views/add-insurance/add-insurance.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,8/BAA+7B,oBAAoB,omBAAomB,mHAAmH,i/BAAi/B,wHAAwH,2tBAA2tB,4IAA4I,moBAAmoB,gJAAgJ,6iCAA6iC,mHAAmH,kmBAAkmB,gIAAgI,grBAAgrB,wHAAwH,ymBAAymB,kIAAkI,oyBAAoyB,kIAAkI,mxBAAmxB,sJAAsJ,+X;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvlT;AACc;AACW;AAElE,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,8EAAqB,EAAE;CAC/C,CAAC;AAMF;IAAA;IAAyC,CAAC;IAA7B,yBAAyB;QAJrC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,yBAAyB,CAAI;IAAD,gCAAC;CAAA;AAAJ;;;;;;;;;;;;;ACZtC;AAAe,6GAA8C,uK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AACkB;AACC;AACP;AACnB;AAO3C;IASE,+BAAoB,EAAe,EAAU,aAA4B,EAC/D,YAAiC,EAAU,OAAsB;QADvD,OAAE,GAAF,EAAE,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QAC/D,iBAAY,GAAZ,YAAY,CAAqB;QAAU,YAAO,GAAP,OAAO,CAAe;QAR3E,aAAQ,GAAG,KAAK,CAAC;IAQ8D,CAAC;IAEhF,wCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,UAAC,UAAe;YAC3D,KAAI,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE,CAAC;YAC5B,KAAI,CAAC,kBAAkB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,oCAAI,GAAJ;QAAA,iBAoCC;QAnCC,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,SAAS,IAAI,EAAE,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE;eACrF,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,OAAO,IAAI,EAAE,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE;eACnF,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,MAAM,IAAI,EAAE,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI;eACrF,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,OAAO,IAAI,EAAE,EAAE;YAC9C,kBAAkB;YAClB,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,EAAE;gBAC1C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;gBAC1D,OAAO,KAAK,CAAC;aACd;iBACI,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,UAAU,IAAI,EAAE,EAAE;gBACrD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAC;gBACzD,OAAO,KAAK,CAAC;aACd;SACF;QACD,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,UAAU,IAAI,EAAE,EAAE;YAC1F,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;YAC1D,OAAO,KAAK,CAAC;SACd;aACI,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,UAAU,IAAI,EAAE,EAAE;YAC/F,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAC;YACzD,OAAO,KAAK,CAAC;SACd;QAEC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAC,MAAW;YACrF,IAAI,MAAM,CAAC,UAAU,IAAI,GAAG,EAAE;gBAC5B,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;gBAC7C,UAAU,CAAC,cAAQ,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;aACpD;iBACI;gBACH,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;aAC5C;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC,CAAC;IACN,CAAC;IAEO,wCAAQ,GAAhB;QACE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACpC,WAAW,EAAE,CAAC,IAAI,CAAC;YACnB,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC;YACpC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC;YACvC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC;YACpC,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,aAAa,CAAC;YACvC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,aAAa,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAClE,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC;YACrC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC;YACzC,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,aAAa,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YAC9D,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,aAAa,CAAC;SACvC,CAAC,CAAC;IACL,CAAC;IAED,kDAAkB,GAAlB,UAAmB,MAAc;QAAjC,iBAUC;QATC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,MAAM,CAAC;aACzC,SAAS,CAAC,UAAC,QAAQ;YAClB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,KAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;YACpC,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC,EACD,UAAC,KAAU;YACT,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,sDAAsB,GAAtB,UAAuB,QAAQ;QAC7B,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC;YAC/B,IAAI,EAAE,QAAQ,CAAC,IAAI;YACnB,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,IAAI,EAAE,QAAQ,CAAC,IAAI;YACnB,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,SAAS,EAAE,QAAQ,CAAC,SAAS;YAC7B,UAAU,EAAE,QAAQ,CAAC,UAAU;YAC/B,MAAM,EAAE,QAAQ,CAAC,MAAM;SACxB,CAAC,CAAC;IACL,CAAC;IAED,iDAAiB,GAAjB;QAAA,iBAIC;QAHC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,aAAG;YAC9C,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,uCAAI;aAAR,cAAa,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACxD,sBAAI,0CAAO;aAAX,cAAgB,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAC9D,sBAAI,uCAAI;aAAR,cAAa,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACxD,sBAAI,wCAAK;aAAT,cAAc,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAC1D,sBAAI,0CAAO;aAAX,cAAgB,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAC9D,sBAAI,wCAAK;aAAT,cAAc,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAC1D,sBAAI,4CAAS;aAAb,cAAkB,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAClE,sBAAI,6CAAU;aAAd,cAAmB,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACpE,sBAAI,yCAAM;aAAV,cAAe,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;;;OAAA;;gBA1GpC,0DAAW;gBAAyB,oEAAa;gBACjD,0EAAmB;gBAAmB,wDAAa;;IAVhE,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,2MAA6C;;SAE9C,CAAC;yCAUwB,0DAAW,EAAyB,oEAAa;YACjD,0EAAmB,EAAmB,wDAAa;OAVhE,qBAAqB,CAoHjC;IAAD,4BAAC;CAAA;AApHiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXO;AACM;AACmB;AACS;AACpB;AAUvD;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAR9B,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,8EAAqB,CAAC;YACrC,OAAO,EAAE;gBACP,4DAAY;gBACZ,uFAAyB;gBACzB,kEAAY;aACb;SACF,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdY;AACO;AAES;AAM3D;IAEE,6BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAD7B,uBAAkB,GAAM,wEAAW,CAAC,aAAa,oBAAiB,CAAC;IAClC,CAAC;IAEzC,gDAAkB,GAAlB,UAAmB,MAAc;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,kBAAkB,+CAA0C,MAAQ,CAAC;IACpG,CAAC;IACD,iDAAmB,GAAnB,UAAoB,eAAmC;QAErD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,kBAAkB,yBAAsB,EAAE,eAAe,CAAC,CAAC;IAC3F,CAAC;;gBARyB,+DAAU;;IAFzB,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU;OAFzB,mBAAmB,CAW/B;IAAD,0BAAC;CAAA;AAX+B;AAahC;IAWE;QACE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACnB,CAAC;IACH,yBAAC;AAAD,CAAC","file":"views-add-insurance-add-insurance-module.js","sourcesContent":["export default \"<div class=\\\"page\\\">\\r\\n  <div class=\\\"breadcrumb-holder\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12 mt-3\\\">\\r\\n          <span class=\\\"dash\\\">Manage Insurance Co.</span>\\r\\n          <ul class=\\\"breadcrumb\\\">\\r\\n            <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/dashboard\\\">Dashboard</a></li>\\r\\n            <li class=\\\"breadcrumb-item active\\\">Manage Insurance Co.</li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <section class=\\\"dashboard-header section-padding\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row d-flex align-items-md-stretch\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <div class=\\\"bg-white border rounded pb-4\\\">\\r\\n            <div class=\\\"col-md-12 mt-4\\\">\\r\\n              <form [formGroup]=\\\"addInsuranceForm\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"emailTemplate-box\\\" [ngClass]=\\\"{'disabled':loadSave}\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n\\r\\n                    <div class=\\\"col-12 col-md-12 col-lg-12\\\">\\r\\n                      <label class=\\\"m-label-s\\\">Insurance Information:</label>\\r\\n                      <hr size=\\\"4\\\" class=\\\"mt-0 border-secondary\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                      <label>Insurance Company Name:</label>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" maxlength=\\\"200\\\" [ngClass]=\\\"{'is-invalid': (name.invalid && (name.dirty || name.touched) && (name.errors?.required || name.errors?.maxlength)) }\\\">\\r\\n                        <small *ngIf=\\\"addInsuranceForm.get('name').touched && addInsuranceForm.get('name').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                          Insurance Company Name is required\\r\\n                        </small>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                      <label>Insurance Phone:</label>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <p-inputMask styleClass=\\\"form-control\\\" mask=\\\"(999) 999-9999\\\" formControlName=\\\"phone\\\" placeholder=\\\"(___) ___-____\\\">\\r\\n                        </p-inputMask>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <!--<div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n    <label>Insurance Phone:</label>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"phone\\\" maxlength=\\\"100\\\" [ngClass]=\\\"{'is-invalid': (phone.invalid && (phone.dirty || phone.touched) && (phone.errors?.required || phone.errors?.maxlength)) }\\\">\\r\\n      <small *ngIf=\\\"addInsuranceForm.get('phone').touched && addInsuranceForm.get('phone').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n        Insurance Phone is required\\r\\n      </small>\\r\\n      <small *ngIf=\\\"addInsuranceForm.get('phone').touched && addInsuranceForm.get('phone').errors?.pattern\\\"\\r\\n             class=\\\"text-danger\\\">Please enter valid phone<br /></small>\\r\\n    </div>\\r\\n  </div>-->\\r\\n\\r\\n                    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                      <label>Insurance Agent Name:</label>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"agentName\\\" maxlength=\\\"200\\\" [ngClass]=\\\"{'is-invalid': (agentName.invalid && (agentName.dirty || agentName.touched) && (agentName.errors?.required || agentName.errors?.maxlength)) }\\\">\\r\\n                        <small *ngIf=\\\"addInsuranceForm.get('agentName').touched && addInsuranceForm.get('agentName').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                          Insurance Agent Name is required\\r\\n                        </small>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                      <label>Insurance Agent Email:</label>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"agentEmail\\\" maxlength=\\\"200\\\" [ngClass]=\\\"{'is-invalid': (agentEmail.invalid && (agentEmail.dirty || agentName.touched) && (agentEmail.errors?.required || agentEmail.errors?.maxlength)) }\\\">\\r\\n                        <small *ngIf=\\\"addInsuranceForm.get('agentEmail').touched && addInsuranceForm.get('agentEmail').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                          Insurance Agent Email is required\\r\\n                        </small>\\r\\n                        <small *ngIf=\\\"addInsuranceForm.get('agentEmail').touched && addInsuranceForm.get('agentEmail').errors?.email\\\" class=\\\"text-danger\\\">Please enter valid Email</small>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-12 col-md-12 col-lg-12\\\">\\r\\n                      <label class=\\\"m-label-s\\\">Insurance Address:</label>\\r\\n                      <hr size=\\\"4\\\" class=\\\"mt-0 border-secondary\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                      <label>City:</label>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"city\\\" maxlength=\\\"200\\\" [ngClass]=\\\"{'is-invalid': (city.invalid && (city.dirty || city.touched) && (city.errors?.required || city.errors?.maxlength)) }\\\">\\r\\n                        <small *ngIf=\\\"addInsuranceForm.get('city').touched && addInsuranceForm.get('city').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                          City is required\\r\\n                        </small>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                      <label>Insurance Agent County:</label>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"county\\\" maxlength=\\\"100\\\" [ngClass]=\\\"{'is-invalid': (county.invalid && (county.dirty || agentName.touched) && (county.errors?.required || county.errors?.maxlength)) }\\\">\\r\\n                        <small *ngIf=\\\"addInsuranceForm.get('county').touched && addInsuranceForm.get('county').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                          Insurance Agent County is required\\r\\n                        </small>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                      <label>State:</label>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <ng-select [items]=\\\"states\\\"\\r\\n                                   placeholder=\\\"Select State\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\" formControlName=\\\"state\\\" [ngClass]=\\\"{'is-invalid': (state.invalid && (state.dirty || state.touched) && (state.errors?.required || state.errors?.maxlength)) }\\\">\\r\\n                        </ng-select>\\r\\n                        <small *ngIf=\\\"addInsuranceForm.get('state').touched && addInsuranceForm.get('state').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                          State is required\\r\\n                        </small>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                      <label>Zip:</label>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"zipCode\\\" [ngClass]=\\\"{'is-invalid': (zipCode.invalid && (zipCode.dirty || zipCode.touched) && (zipCode.errors?.required || zipCode.errors?.maxlength)) }\\\">\\r\\n                        <small *ngIf=\\\"addInsuranceForm.get('zipCode').touched && addInsuranceForm.get('zipCode').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                          Zip is required\\r\\n                        </small>\\r\\n                        <small *ngIf=\\\"zipCode.invalid && (zipCode.dirty || zipCode.touched) && zipCode.errors?.maxlength\\\"\\r\\n                               class=\\\"text-danger\\\">Zip can not be greater than 5 characters.</small>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                      <label>Address</label>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <textarea class=\\\"form-control\\\" formControlName=\\\"address\\\" [ngClass]=\\\"{'is-invalid': (address.invalid && (address.dirty || address.touched) && (address.errors?.required || address.errors?.maxlength)) }\\\"></textarea>\\r\\n                        <small *ngIf=\\\"addInsuranceForm.get('address').touched && addInsuranceForm.get('address').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                          Insurance Address is required\\r\\n                        </small>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-12 col-md-12 col-lg-12\\\">\\r\\n                      <div class=\\\"alert alert-info mt-2\\\">Insurance Company Name and Insurance Agent Email are required to fill if you enter insurance address details</div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n              </form>\\r\\n              <div class=\\\"col-12 p-0\\\">\\r\\n                <a href=\\\"javascript:void(0);\\\" class=\\\"btn btn-primary form-btns\\\" (click)=\\\"save()\\\"><i class=\\\"fa fa-save\\\"></i> Submit</a>\\r\\n                <!--<a href=\\\"javascript:void(0);\\\" class=\\\"btn btn-danger form-btns\\\" (click)=\\\"close()\\\"><i class=\\\"fa fa-times\\\"></i> Cancel</a>-->\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </section>\\r\\n  <app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader\\\"></app-loader>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddInsuranceComponent } from './add-insurance.component';\r\n\nconst routes: Routes = [\n  { path: '', component: AddInsuranceComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AddInsuranceRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2FkZC1pbnN1cmFuY2UvYWRkLWluc3VyYW5jZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CommonService, ModuleList } from '../shared/common.service';\r\nimport { AddInsuranceService } from './add-insurance.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-add-insurance',\r\n  templateUrl: './add-insurance.component.html',\r\n  styleUrls: ['./add-insurance.component.scss']\r\n})\r\nexport class AddInsuranceComponent implements OnInit {\r\n  addInsuranceForm: FormGroup;\r\n  loadSave = false;\r\n  UserId: any;\r\n  addOrUpdatePermission: boolean;\r\n  modulePermission: ModuleList;\r\n  states: any;\r\n\r\n\r\n  constructor(private fb: FormBuilder, private commonService: CommonService,\r\n    private addInsurance: AddInsuranceService, private toaster: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.commonService.getLoggedInName.subscribe((userdetail: any) => {\r\n      this.UserId = userdetail.id;\r\n      this.getInsuranceDetail(this.UserId);\r\n    });\r\n\r\n    this.loadStateDropdown();\r\n    this.initForm();\r\n  }\r\n\r\n  save() {\r\n    if (this.addInsuranceForm.value.agentName != '' || this.addInsuranceForm.value.phone != ''\r\n      || this.addInsuranceForm.value.address != '' || this.addInsuranceForm.value.city != ''\r\n      || this.addInsuranceForm.value.county != '' || this.addInsuranceForm.value.state != null\r\n      || this.addInsuranceForm.value.zipCode != '') {\r\n      /// alert('error')\r\n      if (this.addInsuranceForm.value.name == '') {\r\n        this.toaster.error(\"Please Enter Insurance Company name\");\r\n        return false;\r\n      }\r\n      else if (this.addInsuranceForm.value.agentEmail == '') {\r\n        this.toaster.error(\"Please Enter Insurance Agent Email\");\r\n        return false;\r\n      }\r\n    }\r\n    if (this.addInsuranceForm.value.name == '' && this.addInsuranceForm.value.agentEmail != '') {\r\n      this.toaster.error(\"Please Enter Insurance Company name\");\r\n      return false;\r\n    }\r\n    else if (this.addInsuranceForm.value.name != '' && this.addInsuranceForm.value.agentEmail == '') {\r\n      this.toaster.error(\"Please Enter Insurance Agent Email\");\r\n      return false;\r\n    }\r\n   \r\n      this.loadSave = true;\r\n    this.addInsurance.saveInsuranceDetail(this.addInsuranceForm.value).subscribe((result: any) => {\r\n        if (result.statusCode == 200) {\r\n          this.toaster.success(result.responseMessage);\r\n          setTimeout(() => { this.loadSave = false; }, 3000);\r\n        }\r\n        else {\r\n          this.toaster.error(result.responseMessage);\r\n        }\r\n      }, error => {\r\n        this.loadSave = false;\r\n      })\r\n  }\r\n\r\n  private initForm() {\r\n    this.addInsuranceForm = this.fb.group({\r\n      insuranceId: [null],\r\n      name: ['', Validators.nullValidator],\r\n      address: ['', Validators.nullValidator],\r\n      city: ['', Validators.nullValidator],\r\n      state: [null, Validators.nullValidator],\r\n      zipCode: ['', [Validators.nullValidator, Validators.maxLength(5)]],\r\n      phone: ['', Validators.nullValidator],\r\n      agentName: ['', Validators.nullValidator],\r\n      agentEmail: ['', [Validators.nullValidator, Validators.email]],\r\n      county: ['', Validators.nullValidator],\r\n    });\r\n  }\r\n\r\n  getInsuranceDetail(userId: string) {\r\n    this.addInsurance.getInsuranceDetail(userId)\r\n      .subscribe((response) => {\r\n        this.loadSave = true;\r\n        this.displayInsuranceDetail(response);\r\n          this.loadSave = false;\r\n        },\r\n        (error: any) => {\r\n          this.loadSave = false;\r\n        });\r\n  }\r\n\r\n  displayInsuranceDetail(reposnse): void {\r\n    this.addInsuranceForm.patchValue({\r\n      name: reposnse.name,\r\n      address: reposnse.address,\r\n      city: reposnse.city,\r\n      state: reposnse.state,\r\n      zipCode: reposnse.zipCode,\r\n      phone: reposnse.phone,\r\n      agentName: reposnse.agentName,\r\n      agentEmail: reposnse.agentEmail,\r\n      county: reposnse.county,\r\n    });\r\n  }\r\n\r\n  loadStateDropdown() {\r\n    this.commonService.getStatesList().subscribe(res => {\r\n      this.states = this.commonService.states;\r\n    });\r\n  }\r\n\r\n  get name() { return this.addInsuranceForm.get('name'); }\r\n  get address() { return this.addInsuranceForm.get('address'); }\r\n  get city() { return this.addInsuranceForm.get('city'); }\r\n  get state() { return this.addInsuranceForm.get('state'); }\r\n  get zipCode() { return this.addInsuranceForm.get('zipCode'); }\r\n  get phone() { return this.addInsuranceForm.get('phone'); }\r\n  get agentName() { return this.addInsuranceForm.get('agentName'); }\r\n  get agentEmail() { return this.addInsuranceForm.get('agentEmail'); }\r\n  get county() { return this.addInsuranceForm.get('county'); } \r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddInsuranceComponent } from './add-insurance.component';\nimport { AddInsuranceRoutingModule } from './add-insurance-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\n@NgModule({\n  declarations: [AddInsuranceComponent],\n  imports: [\n    CommonModule,\n    AddInsuranceRoutingModule,\n    SharedModule\n  ]\n})\nexport class AddInsuranceModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddInsuranceService {\n  public manageInsuranceUri = `${environment.WebApiBaseUrl}ManageInsurance`;\n  constructor(private http: HttpClient) { }\n\n  getInsuranceDetail(userId: string) {\n    return this.http.get(`${this.manageInsuranceUri}/GetInsuranceDetail?insuranceContactId=${userId}`)\n  }\n  saveInsuranceDetail(insuranceDetail: AddInsuranceDetail) {\n   \n    return this.http.post(`${this.manageInsuranceUri}/SaveInsuranceDetail`, insuranceDetail);\r\n  }\n}\n\nexport class AddInsuranceDetail {\r\n  insuranceId: string;\r\n  name: string;\r\n  address: string;\r\n  city: string;\r\n  state: string;\r\n  zipCode: string;\r\n  phone: string;\r\n  agentName: string;\r\n  agentEmail: string;\r\n  county: string;\r\n  constructor() {\r\n    this.insuranceId = \"\";\r\n    this.name = \"\";\r\n    this.address = \"\";\r\n    this.city = \"\";\r\n    this.state = \"\";\r\n    this.zipCode = \"\";\r\n    this.phone = \"\";\r\n    this.agentEmail = \"\";\r\n    this.agentName = \"\";\r\n    this.county = \"\";\r\n  }\r\n}\n"],"sourceRoot":"webpack:///"}