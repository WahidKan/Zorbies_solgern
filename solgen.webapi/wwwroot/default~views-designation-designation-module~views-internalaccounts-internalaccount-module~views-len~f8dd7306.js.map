{"version":3,"sources":["./src/app/views/internalaccounts/accountservice.service.ts"],"names":[],"mappings":"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","file":"default~views-designation-designation-module~views-internalaccounts-internalaccount-module~views-len~f8dd7306.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountserviceService {\n\n  public baseUri = `${environment.WebApiBaseUrl}`;\n  pagedData: any;\n  editPage: any;\n  customFieldsList: any;\n  constructor(private http: HttpClient) { }\n\n  GetAccountsList(listFilter: string, sortColumn: string, page: number, pageSize: number, sortDir: string, loginuserid: string, moduleName: string, submoduleName: string, companyId: number, custom_view_id: string, isCheckboxTick: any): Observable<any> {\n    if (typeof listFilter == \"undefined\" || listFilter == null) { listFilter = null; }\n    else { listFilter = encodeURIComponent((listFilter)); }\n    return this.http.get(`${this.baseUri}Bank/GetAccountsList?nameSearch=${listFilter}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${page}&pageSize=${pageSize}&userId=${loginuserid}&moduleName=${moduleName}&submoduleName=${submoduleName}&companyId=${companyId}&custom_view_id=${custom_view_id}&isAllRecords=${isCheckboxTick}`)\n  }\n  GetAccountsListByBank(listFilter: string, sortColumn: string, page: number, pageSize: number, sortDir: string, loginuserid: string, moduleName: string, submoduleName: string, companyId: number, custom_view_id: string): Observable<any> {\n    if (typeof listFilter == \"undefined\" || listFilter == null) { listFilter = null; }\n    else { listFilter = encodeURIComponent((listFilter)); }\n    return this.http.get(`${this.baseUri}Bank/GetBankListNew?nameSearch=${listFilter}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${page}&pageSize=${pageSize}&userId=${loginuserid}&moduleName=${moduleName}&submoduleName=${submoduleName}&companyId=${companyId}&custom_view_id=${custom_view_id}`)\n  }\n\n  GetAccountDetails(id: any, moduleName: any, submoduleName: any, companyId: number, userId: string) {\n    return this.http.get(this.baseUri + `common/GetAccountById?id=${id}&moduleName=${moduleName}&submoduleName=${submoduleName}&companyId=${companyId}&userId=${userId}`)\n      .pipe(\n        map((response: any) => {\n          this.editPage = response;\n          return true;\n        })\n      );\n  }\n  CheckUserDuplicateORAssociate(email: any, uid: any) {\n    return this.http.get(this.baseUri + `Dashboard/CheckUserDuplicateORAssociate?emailID=${email}&uid=${uid}`);\n  }\n  AssociateUserWithCompany(email: any, uid: any, RoleID: any, userTypeId: any, PrimaryKey: any) {\n    return this.http.post(this.baseUri + `Dashboard/AssociateUserWithCompany?emailID=${email}&uid=${uid}&RoleID=${RoleID}&userTypeId=${userTypeId}&PrimaryKey=${PrimaryKey}`, null);\n  }\n  GetCustomFieldsList(modulename: any, submoduleName: any, companyId: any, Id: any, displayType: string) {\n    return this.http.get(`${this.baseUri}vendor/GetCustomFields?moduleName=${modulename}&strType=${submoduleName}&companyId=${companyId}&PrimaryId=${Id}&displayCode=${displayType}`)\n      .pipe(\n        map((response: any) => {\n          this.customFieldsList = response;\n          return true;\n        })\n      );\n  }\n\n  DeleteRecords(deleteId: any, tableName: any, ) {\r\n    return this.http.get(this.baseUri + `common/DeleteRecords?primaryKey=${deleteId}&tableName=${tableName}`)\r\n      .pipe(\r\n        map((response: any) => {\r\n          this.editPage = response;\r\n          return true;\r\n        })\r\n      );\r\n  }\n  AppeoveAccount(deleteId: any, tableName: any) {\n    return this.http.get(this.baseUri + `common/ApproveAccount?primaryKey=${deleteId}&tableName=${tableName}`)\r\n      .pipe(\r\n        map((response: any) => {\r\n          this.editPage = response;\r\n          return true;\r\n        })\r\n      );\r\n  }\n  getViewList(name: string, userType: string, sortColumn: string, sortDir, page: number, pageSize: number, ModuleName: any, SubModuleName: any, companyId: number) {\n\n    return this.http.get(this.baseUri + `Common/GetCustomViewName?nameSearch=${name}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${page}&pageSize=${pageSize}&ModuleName=${ModuleName}&SubModuleName=${SubModuleName}&companyId=${companyId}`)\n      .pipe(\n        map((response: any) => {\n          this.pagedData = response;\n          return true;\n        })\n      );\n  }\n\n  DisabledAccount(deleteId: any, tableName: any) {\n    return this.http.get(this.baseUri + `common/DisabledAccount?primaryKey=${deleteId}&tableName=${tableName}`)\r\n      .pipe(\r\n        map((response: any) => {\r\n          this.editPage = response;\r\n          return true;\r\n        })\r\n      );\r\n  }\n  //addEditForm(JsonData: JsonData) {\n  //  return this.http.post(this.baseUri + `Lease/AddEditAccount`, JsonData);\n  //}\n  addEditForm(JsonData: FormData) {\n    return this.http.post(this.baseUri + `Lease/AddEditAccount`, JsonData);\n  }\n  GetFileUploadSource(file:any) {\n    return this.http.get(this.baseUri + `Lease/GetFileUploadSource?file=${file}`);\n\n  }\n  CheckDealerCompanyName( accountid:any, delarcompanyName:any) {\n    return this.http.get(this.baseUri + `Lease/CheckDealerCompanyName?accountid=${accountid}&dealerCompanyName=${delarcompanyName}`);\n  }\n  GetAccounDetails(id: any) {\n    return this.http.get(this.baseUri + `Dashboard/GetAccounDetails?Id=${id}`)\n  }\n  getRoleListForEnableLogin(accountId) {\n    return this.http.get(this.baseUri + `Dashboard/GetRoleListForEnableLogin?accountId=${accountId}`)\r\n  }\n  ContactList(listFilter: any, sortColumn: any, sortDir: any, page: any, pageSizeValue: any, loginuserid: any, accountId: any) {\n    return this.http.get(this.baseUri + `Dashboard/GetContactList?listFilte=${listFilter}&sortColumn=${sortColumn}&sortDir=${sortDir}&page=${page}&pageSize=${pageSizeValue}&userId=${loginuserid}&accountId=${accountId}`);\r\n  }\n\n  RelatedContactList(listFilter: any, sortColumn: any, sortDir: any, page: any, pageSizeValue: any, loginuserid: any, accountId: any) {\n    return this.http.get(this.baseUri + `Dashboard/GetRelatedContactList?listFilter=${listFilter}&sortColumn=${sortColumn}&sortDir=${sortDir}&page=${page}&pageSize=${pageSizeValue}&userId=${loginuserid}&accountId=${accountId}`)\r\n     .pipe(\n       map((response: any) => {\n         this.pagedData = response;\n         return true;\n       })\n     );\n  }\n  addOrUpdateManageStatusForAccountDetails(loanproductModel: FormData, accountId:any) {\n    return this.http.post(this.baseUri + `Dashboard/AddUpdateEnableLogin`, loanproductModel, accountId);\n\n  }\n  ClickToDownload(recaodingPath:any,accountId:any) {\n    return this.http.get(this.baseUri + `Account/DownloadRingCentralRecaoding?recaodingPath=${recaodingPath}&accountId=${accountId}`, { responseType: 'blob' });\r\n  }\n  getFile(uri: string) {\r\n    //const options = { responseType: 'blob' }; there is no use of this\r\n    //let uri = '/your/uri';\r\n    return this.http.get(uri);\r\n  }\n  GetAccountsOppoutunityList(accountId, sortColumn, sortDir, pageIndex, pageSize): Observable<any> {\n    return this.http.get(this.baseUri + `Account/GetAccountOppoutunitiesList?accountId=${accountId}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${pageIndex}&pageSize=${pageSize}`);\r\n  }\n\n  GetAccountsCommunicationList(accountId, sortColumn, sortDir, pageIndex, pageSize): Observable<any> {\n    return this.http.get(this.baseUri + `Account/GetAccountsCommunicationList?accountId=${accountId}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${pageIndex}&pageSize=${pageSize}`);\r\n  }\n  GetAccountsContractList(accountId, sortColumn, sortDir, pageIndex, pageSize): Observable<any> {\n    return this.http.get(this.baseUri + `Account/GetAccountContractsList?accountId=${accountId}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${pageIndex}&pageSize=${pageSize}`);\r\n  }\n  GetAccountsContactList(accountId, sortColumn, sortDir, pageIndex, pageSize): Observable<any> {\n    return this.http.get(this.baseUri + `Account/GetAccountContactsList?accountId=${accountId}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${pageIndex}&pageSize=${pageSize}`);\r\n  }\n  GetAccountsProposalsList(accountId, sortColumn, sortDir, pageIndex, pageSize): Observable<any> {\n    return this.http.get(this.baseUri + `Account/GetAccountProposalsList?accountId=${accountId}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${pageIndex}&pageSize=${pageSize}`);\r\n  }\n  GetAccountsWorkOrderList(accountId, sortColumn, sortDir, pageIndex, pageSize): Observable<any> {\n    return this.http.get(this.baseUri + `Account/GetAccountWorkOrdersList?accountId=${accountId}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${pageIndex}&pageSize=${pageSize}`);\r\n  }\n  GetAccountsServiceAppointmentsList(accountId, sortColumn, sortDir, pageIndex, pageSize): Observable<any> {\n    return this.http.get(this.baseUri + `Account/GetAccountServiceAppointmentsList?accountId=${accountId}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${pageIndex}&pageSize=${pageSize}`);\r\n  }\n  GetAccountsJurisdictionList(accountId, sortColumn, sortDir, pageIndex, pageSize): Observable<any> {\n    return this.http.get(this.baseUri + `Account/GetAccountsJurisdictionList?accountId=${accountId}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${pageIndex}&pageSize=${pageSize}`);\r\n  }\n  GetAccountsProductsList(accountId, sortColumn, sortDir, pageIndex, pageSize): Observable<any> {\n    return this.http.get(this.baseUri + `Account/GetAccountsProductsList?accountId=${accountId}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${pageIndex}&pageSize=${pageSize}`);\r\n  }\n\n\n}\nexport class CheckboxData {\n  controlname: string;\n  controlvalues: string;\n  constructor() {\n    this.controlname = \"\";\n    this.controlvalues = \"\";\r\n  }\n}\nexport class JsonData {\n  Id: string;\n  FormJsonData: string;\n  moduleCode: string;\n  subModuleCode: string;\n  companyId: string;\n  userId: string;\n  constructor() {\n    this.Id = \"\";\n    this.FormJsonData = \"\";\n    this.moduleCode = \"\";\n    this.subModuleCode = \"\";\n    this.companyId = \"\";\n    this.userId = \"\";\n  }\n}\n"],"sourceRoot":"webpack:///"}