{"version":3,"sources":["./src/app/views/task/addedittask.component.html","./src/app/views/task/tasklist.component.html","./src/app/views/bank/bank.service.ts","./src/app/views/task/addedittask.component.scss","./src/app/views/task/addedittask.component.ts","./src/app/views/task/task-routing.module.ts","./src/app/views/task/task.module.ts","./src/app/views/task/tasklist.component.scss","./src/app/views/task/tasklist.component.ts","./src/app/views/task/tasklist.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,8JAA+F,SAAS,qRAAqR,WAAW,smBAAsmB,oKAAoK,+vBAA+vB,6JAA6J,0rBAA0rB,6JAA6J,2wBAA2wB,sLAAsL,+9BAA+9B,0JAA0J,69CAA69C,kMAAkM,sS;;;;;;;;;;;;ACA7mN;AAAe,4mCAA6iC,uKAAuK,2JAA2J,2TAA2T,6aAA6a,s7CAAs7C,YAAY,6nCAA6nC,gLAAgL,4HAA4H,yvBAAyvB,UAAU,wGAAwG,mBAAmB,qFAAqF,YAAY,uBAAuB,0yC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA55L;AACgB;AACT;AACO;AACpB;AAKrC;IAIE,qBAAoB,IAAgB,EAAU,aAA4B;QAAtD,SAAI,GAAJ,IAAI,CAAY;QAAU,kBAAa,GAAb,aAAa,CAAe;QAHnE,YAAO,GAAG,KAAG,wEAAW,CAAC,aAAe,CAAC;IAG8B,CAAC;IAE/E,qCAAqC;IACrC,iCAAW,GAAX,UAAY,IAAS,EAAE,UAAkB,EAAE,OAAO,EAAE,IAAY,EAAE,QAAgB,EAAE,MAAc;QAAlG,iBAUC;QATC,IAAI,OAAO,IAAI,IAAI,WAAW,IAAI,IAAI,IAAI,IAAI,EAAE;YAAE,IAAI,GAAG,IAAI,CAAC;SAAE;aAC3D;YAAE,IAAI,GAAG,kBAAkB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;SAAE;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,IAAG,iCAA+B,IAAI,oBAAe,UAAU,iBAAY,OAAO,mBAAc,IAAI,kBAAa,QAAQ,gBAAW,MAAQ,EAAC;aAC3K,IAAI,CACH,0DAAG,CAAC,UAAC,QAAa;YAChB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,qDAAqD;IACrD,mCAAa,GAAb,UAAc,SAAc,EAAE,UAAe,EAAE,MAAW,EAAE,UAAe,EAAE,UAAe;QAC1F,OAAO,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;IAClG,CAAC;IAED,yCAAyC;IACzC,mCAAa,GAAb,UAAc,EAAO;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,IAAG,mCAAiC,EAAI,EAAC;IAC5E,CAAC;IAED,qCAAqC;IACrC,gCAAU,GAAV,UAAW,SAAc,EAAC,SAAe,EAAE,UAAe;QACxD,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;IACrE,CAAC;IAED,qCAAqC;IACrC,iCAAW,GAAX,UAAY,SAAoB;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAkB,EAAE,SAAS,CAAC,CAAC;IACtE,CAAC;IAED,sCAAgB,GAAhB,UAAiB,IAAY,EAAE,QAAgB,EAAC,MAAc;QAA9D,iBASC;QAPC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,IAAG,qCAAmC,IAAI,kBAAa,QAAQ,gBAAW,MAAQ,EAAC;aACjH,IAAI,CACH,0DAAG,CAAC,UAAC,QAAa;YAChB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,yCAAmB,GAAnB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,OAAO,yBAAsB,CAAC,CAAC;IAC9D,CAAC;;gBAhDyB,+DAAU;gBAAyB,oEAAa;;IAJ/D,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK0B,+DAAU,EAAyB,oEAAa;OAJ/D,WAAW,CAsDvB;IAAD,kBAAC;CAAA;AAtDuB;AAwDxB;IAUE;QACE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IACH,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACtFD;AAAe,6GAA8C,2J;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAU;AACd;AACW;AACC;AAClB;AACR;AACc;AAEE;AAS3D;IAgBE,8BAAoB,EAAe,EACzB,aAA4B,EAC5B,WAAwB,EACxB,MAAc,EACd,OAAsB,EAEtB,KAAqB,EAAU,eAAgC;QANrD,OAAE,GAAF,EAAE,CAAa;QACzB,kBAAa,GAAb,aAAa,CAAe;QAC5B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAe;QAEtB,UAAK,GAAL,KAAK,CAAgB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAnBzE,cAAS,GAAS,IAAI,sDAAI,EAAE,CAAC;QAC7B,WAAM,GAAW,IAAI,CAAC;QACtB,aAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAEtB,YAAO,GAAG,UAAU,CAAC;QACrB,cAAS,GAAS,UAAU;QAM5B,aAAQ,GAAW,KAAK,CAAC;QASvB,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;QACvD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IAEvE,CAAC;IAED,uCAAQ,GAAR;QAAA,iBAwBC;QAvBC,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,gBAAM;YACrC,0BAA0B;YAC1B,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,CAAC;YACxB,IAAI,KAAI,CAAC,MAAM,EAAE;gBACf,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;aAChC;iBAAM;gBACL,KAAI,CAAC,qBAAqB,GAAG,KAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC;aACtE;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,UAAC,MAAW;YAE5D,KAAI,CAAC,eAAe,GAAG,MAAM,CAAC;QAEhC,CAAC,CAAC;QACF,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,UAAC,MAAW;YACxE,+BAA+B;YAC/B,mDAAmD;YACnD,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QAC9C,CAAC,CAAC;IACJ,CAAC;IAED,6CAAc,GAAd,UAAe,EAAE;QAAjB,iBAsBC;QArBC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC;QACxE,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,SAAS,CAAC,WAAC;YACtD,KAAI,CAAC,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC;YACrB,IAAI,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC3C,KAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,KAAI,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YAChC,wBAAwB;YACxB,KAAI,CAAC,SAAS,GAAG,aAAa,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;YAClD,KAAI,CAAC,OAAO,GAAG,WAAW,CAAC;YAC3B,KAAI,CAAC,OAAO,CAAC,UAAU,CACrB;gBACE,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO;gBAEzB,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,YAAY;gBACnC,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS;gBAC7B,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO;gBACzB,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM;gBACvB,OAAO,EAAE,KAAI,CAAC,EAAE;gBAChB,OAAO,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;aACpC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAO,GAAP;QAAA,iBAiDC;QAhDC,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YAGtB,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC;YAC9D,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC;YAC7D,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO;YACnD,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC;YACpD,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC;YACxD,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC;YACpD,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC;YAClD,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,EAAE,CAAC;YAExB,IAAI,CAAC,EAAE,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YAE9C,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC;YAEzE,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;YACxC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,MAAW;gBACxE,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,yCAAyC,CAAC,CAAC;gBAEhE,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YAIrC,CAAC,CAAC,CAAC;SACJ;aACI;YACH,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAExD;QAEC,mFAAmF;QACnF,mCAAmC;QACnC,mDAAmD;QACnD,8CAA8C;QAC9C,yDAAyD;QACzD,KAAK;QACL,UAAU;QACV,4BAA4B;QAC5B,iDAAiD;QACjD,KAAK;QACL,eAAe;QACf,0BAA0B;QAC1B,KAAK;QACP,GAAG;QAGH,qCAAqC;IACvC,CAAC;IAID,qCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAGO,uCAAQ,GAAhB;QAEE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpC,OAAO,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC3C,SAAS,EAAE,CAAC,KAAK,CAAC;YAClB,OAAO,EAAE,CAAC,KAAK,CAAC;YAChB,MAAM,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;IAML,CAAC;IAGD,sBAAI,yCAAO;aAAX,cAAgB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACrD,sBAAI,yCAAO;aAAX,cAAgB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACrD,sBAAI,yCAAO;aAAX,cAAgB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACrD,sBAAI,8CAAY;aAAhB,cAAqB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAC/D,sBAAI,2CAAS;aAAb,cAAkB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACzD,sBAAI,yCAAO;aAAX,cAAgB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACrD,sBAAI,wCAAM;aAAV,cAAe,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;;;OAAA;;gBAjJ3B,0DAAW;gBACV,oEAAa;gBACf,8DAAW;gBAChB,sDAAM;gBACL,wDAAa;gBAEf,8DAAc;gBAA2B,iEAAe;;IArB9B;QAA1C,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;kCAAY,sEAAiB;2DAAC;IAD7D,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,8LAA2C;;SAE5C,CAAC;yCAiBwB,0DAAW;YACV,oEAAa;YACf,8DAAW;YAChB,sDAAM;YACL,wDAAa;YAEf,8DAAc,EAA2B,iEAAe;OAtB9D,oBAAoB,CAwKhC;IAAD,2BAAC;CAAA;AAxKgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBQ;AACc;AACE;AACM;AAC/D,2DAA2D;AAC3D,iEAAiE;AAEjE,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAiB,EAAE;IAC1C,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAoB,EAAE;CAErD,CAAC;AAMF;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QAJ7B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBW;AACM;AACF;AACQ;AACC;AACO;AAC7D,4DAA4D;AAC5D,2DAA2D;AAC3D,iEAAiE;AACV;AAEL;AACO;AACC;AACK;AAS/D;IAAA;IAA0B,CAAC;IAAd,UAAU;QAPtB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,qEAAiB,EAAE,2EAAoB,CAAC;YACvD,OAAO,EAAE;gBACP,4DAAY;gBACZ,sEAAiB,EAAE,0DAAW,EAAE,kEAAmB,EAAE,mEAAc,EAAE,0EAAkB,EAAE,kEAAY,EAAE,+DAAW;aACnH;SACF,CAAC;OACW,UAAU,CAAI;IAAD,iBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACvBvB;AAAe,6GAA8C,uJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AACG;AACiD;AAC7C;AACY;AAC1B;AAO3C;IAkBE,2BAAoB,eAAgC,EAAU,aAAwC,EAC5F,aAA4B,EAAU,MAAc,EACpD,WAA2B,EACzB,OAAsB;QAHlC,iBAcC;QAdmB,oBAAe,GAAf,eAAe,CAAiB;QAAU,kBAAa,GAAb,aAAa,CAA2B;QAC5F,kBAAa,GAAb,aAAa,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QACpD,gBAAW,GAAX,WAAW,CAAgB;QACzB,YAAO,GAAP,OAAO,CAAe;QApBlC,aAAQ,GAAG,KAAK,CAAC;QAEjB,mBAAc,GAAG,EAAE,CAAC;QAGpB,YAAO,GAAG,KAAK,CAAC;QAChB,YAAO,GAAG,MAAM,CAAC;QACjB,eAAU,GAAG,WAAW,CAAC;QACzB,cAAS,GAAQ;YACf,KAAK,EAAE,EAAE;YACT,IAAI,EAAE,EAAE;SACT,CAAC;QACF,eAAU,GAAG,EAAE,CAAC;QAChB,cAAS,GAAG,EAAE,CAAC;QAQb,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,UAAC,MAAW;YACtE,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QAChD,CAAC,CAAC;QACF,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;QAC7D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAErE,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,UAAC,UAAe;YAC3D,KAAI,CAAC,WAAW,GAAG,UAAU,CAAC,EAAE,CAAC;QACnC,CAAC,CAAC,CAAC;IAEL,CAAC;IACD,sCAAU,GAAV,UAAW,EAAU;QACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAEvE,CAAC;IACD,wCAAY,GAAZ,UAAa,MAAW;QAAxB,iBAUC;QATC,IAAM,OAAO,GAAG,uCAAuC,CAAC;QACxD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,mBAAS;YACxE,KAAI,CAAC,eAAe,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,GAAQ;gBAC3D,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,sCAAsC,CAAC,CAAC;gBAE7D,KAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IAEL,CAAC;IACD,oCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,mCAAO,GAAP,UAAQ,CAAC;QACP,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,GAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IACD,mCAAO,GAAP,UAAQ,OAAiB;QAAzB,iBAUC;QAVO,qCAAiB;QACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,wBAAwB;QACxB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAErK,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,eAAe,CAAC,SAAS,CAAC;YAChD,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC;IACJ,CAAC;IAED,wCAAY,GAAZ;QAAA,iBAIC;QAHC,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,UAAC,GAAQ;YACnE,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QAChD,CAAC,CAAC;IACJ,CAAC;IAED,iCAAK,GAAL;QACE,IAAI,CAAC,UAAU,GAAC,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,kCAAM,GAAN;IAEA,CAAC;IACD,wCAAY,GAAZ,UAAa,CAAC;IAEd,CAAC;IACD,kCAAM,GAAN,UAAO,CAAC;IAER,CAAC;IACD,qCAAS,GAAT;IAEA,CAAC;;gBAzEoC,iEAAe;gBAAyB,iHAAyB;gBAC7E,oEAAa;gBAAkB,sDAAM;gBACvC,8DAAc;gBAChB,wDAAa;;IArBvB,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,wLAAwC;;SAEzC,CAAC;yCAmBqC,iEAAe,EAAyB,iHAAyB;YAC7E,oEAAa,EAAkB,sDAAM;YACvC,8DAAc;YAChB,wDAAa;OArBvB,iBAAiB,CA4F7B;IAAD,wBAAC;CAAA;AA5F6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZa;AACqB;AACd;AAEb;AAKrC;IAIE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF7B,YAAO,GAAG,KAAG,qEAAW,CAAC,aAAe,CAAC;IAER,CAAC;IAEzC,qCAAW,GAAX,UAAY,IAAY,EAAE,QAAgB,EAAE,UAAkB,EAAE,OAAO,EAAE,IAAY,EAAE,QAAgB,EAAE,MAAc;QAAvH,iBAWC;QAVC,IAAI,OAAO,IAAI,IAAI,WAAW,IAAI,IAAI,IAAI,IAAI,EAAE;YAAE,IAAI,GAAG,IAAI,CAAC;SAAE;aAC3D;YAAE,IAAI,GAAG,kBAAkB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;SAAE;QAEzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,OAAO,8BAAyB,IAAI,kBAAa,QAAQ,oBAAe,UAAU,iBAAY,OAAO,cAAS,IAAI,kBAAa,QAAQ,gBAAW,MAAQ,CAAC;aACvL,IAAI,CACH,0DAAG,CAAC,UAAC,QAAa;YAChB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IACD,wCAAc,GAAd,UAAe,MAAc;QAE3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,OAAO,kCAA6B,MAAQ,CAAC;aACtE,IAAI,CACH,0DAAG,CAAC,UAAC,QAAa;YAEjB,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IACD,sCAAY,GAAZ,UAAa,MAAc;QAEzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,OAAO,+BAA0B,MAAQ,CAAC;aACpE,IAAI,CACH,0DAAG,CAAC,UAAC,QAAa;YAGhB,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,wCAAc,GAAd,UAAe,IAAU;QACvB,6BAA6B;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAkB,EAAE,IAAI,CAAC,CAAC;IACjE,CAAC;IAED,0CAAgB,GAAhB;QAAA,iBAUC;QARC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,OAAO,8BAA2B,CAAC;aAC7D,IAAI,CACH,0DAAG,CAAC,UAAC,QAAa;YAChB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAE1B,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC,CACH,CAAC;IACN,CAAC;;gBAnDyB,+DAAU;;IAJzB,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK0B,+DAAU;OAJzB,eAAe,CAwD3B;IAAD,sBAAC;CAAA;AAxD2B;AAyD5B;IAUE;QACE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IAErB,CAAC;IAEH,WAAC;AAAD,CAAC","file":"views-task-task-module.js","sourcesContent":["export default \"\\r\\n<div class=\\\"header float-left w-100 mb-2\\\">\\r\\n  <h2 class=\\\"float-left pr-2\\\"><strong>{{Heading}}</strong></h2>\\r\\n  <div class=\\\"breadcrumb-wrapper\\\">\\r\\n    <ol class=\\\"breadcrumb\\\">\\r\\n      <li>\\r\\n        <a routerLink=\\\"/dashboard\\\">Dashboard</a>\\r\\n      </li>\\r\\n      <li>\\r\\n        <a routerLink=\\\"/task\\\">Tasks</a>\\r\\n      </li>\\r\\n      <li class=\\\"active\\\">{{breadcrum}}</li>\\r\\n    </ol>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"clearfix\\\"></div>\\r\\n<div class=\\\"panel\\\">\\r\\n  <div class=\\\"panel-content \\\">\\r\\n    <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"addTask()\\\">\\r\\n      <div class=\\\"bank-box\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n            <label>New Task:*<span class=\\\"text-danger\\\"></span></label>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"newTask\\\" maxlength=\\\"50\\\" placeholder=\\\"Enter new task\\\"\\r\\n                     [ngClass]=\\\"{'is-invalid': (newTask.invalid && (newTask.dirty || newTask.touched) &&\\r\\n                               (newTask.errors?.required || newTask.errors?.maxlength)) }\\\">\\r\\n              <small *ngIf=\\\"newTask.invalid && (newTask.dirty || newTask.touched) && newTask.errors?.required\\\"\\r\\n                     class=\\\"text-danger\\\"> Task is required</small>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n            <label>Due Date:*<span class=\\\"text-danger\\\"></span></label>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <p-calendar formControlName=\\\"dueDate\\\" placeholder=\\\"Select Due Date\\\"\\r\\n                          [showTime]=\\\"false\\\"\\r\\n                          dateFormat=\\\"mm/dd/yy\\\" showButtonBar=\\\"true\\\" [monthNavigator]=\\\"true\\\"\\r\\n                          [yearNavigator]=\\\"true\\\" yearRange=\\\"1919:2030\\\"\\r\\n                          [ngClass]=\\\"{'is-invalid': (dueDate.invalid && (dueDate.dirty || dueDate.touched) &&\\r\\n                        (dueDate.errors?.required || dueDate.errors?.maxlength)) }\\\"> </p-calendar>\\r\\n              <small *ngIf=\\\"dueDate.invalid && (dueDate.dirty || dueDate.touched) && dueDate.errors?.required\\\"\\r\\n                     class=\\\"text-danger\\\"> Date is required</small>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n            <label>Due Time:*<span class=\\\"text-danger\\\"></span></label>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <p-calendar inputStyleClass=\\\"form-control start-date\\\"\\r\\n                          formControlName=\\\"dueTime\\\" placeholder=\\\"Select Due Time\\\"\\r\\n                          [timeOnly]=\\\"true\\\" inputId=\\\"timeonly\\\"\\r\\n                          [ngClass]=\\\"{'is-invalid': (dueTime.invalid && (dueTime.dirty || dueTime.touched) &&\\r\\n                        (dueTime.errors?.required || dueTime.errors?.maxlength)) }\\\"> </p-calendar>\\r\\n              <small *ngIf=\\\"dueTime.invalid && (dueTime.dirty || dueTime.touched) && dueTime.errors?.required\\\"\\r\\n                     class=\\\"text-danger\\\">Time  is required</small>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n            <label>Assigned User:*<span class=\\\"text-danger\\\"></span></label>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <ng-select #clearDrop [items]=\\\"lstActiveStatus\\\"\\r\\n                         placeholder=\\\"Select Assigned User\\\"\\r\\n                         formControlName=\\\"assignedUser\\\"\\r\\n                         bindValue=\\\"value\\\" bindLabel=\\\"text\\\"\\r\\n                         [closeOnSelect]=\\\"true\\\"\\r\\n                         [ngClass]=\\\"{'is-invalid': (assignedUser.invalid && (assignedUser.dirty || assignedUser.touched) &&\\r\\n                        (assignedUser.errors?.required || assignedUser.errors?.maxlength)) }\\\"> </ng-select>\\r\\n              <small *ngIf=\\\"assignedUser.invalid && (assignedUser.dirty || assignedUser.touched) && assignedUser.errors?.required\\\"\\r\\n                     class=\\\"text-danger\\\"> User  is required</small>\\r\\n              <!--<select >\\r\\n        <option value=\\\"volvo\\\">Hector Campus</option>\\r\\n        <option value=\\\"saab\\\">vinny Vek</option>\\r\\n\\r\\n      </select>-->\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n            <label>Status:*<span class=\\\"text-danger\\\"></span></label>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <ng-select #clearDrop [items]=\\\"lstStatus\\\"\\r\\n                         formControlName=\\\"status\\\"\\r\\n                         styleClass=\\\"prime-slider-override form-control\\\"\\r\\n                         placeholder=\\\"Select Status\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\"\\r\\n                         [closeOnSelect]=\\\"true\\\"\\r\\n                         [ngClass]=\\\"{'is-invalid': (status.invalid && (status.dirty || status.touched) &&\\r\\n                          (status.errors?.required || status.errors?.maxlength)) }\\\"> </ng-select>\\r\\n              <small *ngIf=\\\"status.invalid && (status.dirty || status.touched) && status.errors?.required\\\"\\r\\n                     class=\\\"text-danger\\\"> Status  is required</small>\\r\\n              <!--<select >\\r\\n        <option value=\\\"volvo\\\">Hector Campus</option>\\r\\n        <option value=\\\"saab\\\">vinny Vek</option>\\r\\n\\r\\n      </select>-->\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-12 col-md-6 col-lg-2\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Send Email:</label>\\r\\n              <div class=\\\"form-control border-0 px-0\\\">\\r\\n                <label class=\\\"switch\\\">\\r\\n                  <input type=\\\"checkbox\\\" checked=\\\"\\\" id=\\\"address\\\" formControlName=\\\"sendEmail\\\">\\r\\n                  <span class=\\\"slider round\\\"><span>Yes</span></span>\\r\\n                </label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-12 col-md-6 col-lg-2\\\">\\r\\n            <label>Send SMS:</label>\\r\\n            <div class=\\\"form-control border-0 px-0\\\">\\r\\n              <label class=\\\"switch\\\">\\r\\n                <input type=\\\"checkbox\\\" checked=\\\"\\\" id=\\\"zipCode\\\" formControlName=\\\"sendSms\\\">\\r\\n                <span class=\\\"slider round\\\"><span>Yes</span></span>\\r\\n              </label>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-12 col-md-12 col-lg-12 mb-3\\\">\\r\\n            <a *ngIf='addOrUpdatePermission' href=\\\"javascript:void(0);\\\" type=\\\"submit\\\" class=\\\"btn btn-success mr-2\\\" (click)=\\\"addTask()\\\">\\r\\n\\r\\n              <i class=\\\"fa fa-save\\\"></i> Submit\\r\\n            </a>\\r\\n            <a href=\\\"javascript:void(0);\\\" class=\\\"btn btn-danger\\\" (click)=\\\"Cancel()\\\"><i class=\\\"fa fa-times\\\"></i> Cancel</a>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </form>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader\\\"></app-loader>\\r\\n</div>\\r\\n\"","export default \"<!-- Breadcrumb-->\\r\\n<div class=\\\"header float-left w-100 mb-2\\\">\\r\\n  <h2 class=\\\"float-left pr-2\\\"><strong>Tasks</strong></h2>\\r\\n  <div class=\\\"breadcrumb-wrapper\\\">\\r\\n    <ol class=\\\"breadcrumb\\\">\\r\\n      <li>\\r\\n        <a routerLink=\\\"/dashboard\\\">Dashboard</a>\\r\\n      </li>\\r\\n      <li class=\\\"active\\\">Manage Tasks</li>\\r\\n    </ol>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"clearfix\\\"></div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12 portlets\\\">\\r\\n    <div class=\\\"panel\\\">\\r\\n      <div class=\\\"panel-header border-bottom pb-3\\\">\\r\\n        <div class=\\\"row mt-2\\\">\\r\\n\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"row searchfield  mr-1 w-100\\\">\\r\\n              <div class=\\\"col-md-4 float-left\\\">\\r\\n                <input class=\\\"form-control input-sm\\\" type=\\\"text\\\" [(ngModel)]='listFilter' placeholder=\\\"Search By Name\\\" (keyup)='updateFilter($event)'>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-8 float-left\\\">\\r\\n                <a class=\\\"btn btn-success form-btns mr-1\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"search()\\\"><span><i class=\\\"fa fa-search\\\"></i> Search</span></a>\\r\\n                <a class=\\\"btn btn-danger form-btns mr-2\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"reset()\\\"><span><i class=\\\"fa fa-refresh\\\"></i> Reset</span></a>\\r\\n                <a class=\\\"btn btn-white mr-1\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"popUpOpen()\\\"><span><i class=\\\"fa fa-filter\\\"></i> Filter</span></a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"dt-buttons\\\">\\r\\n              <a class=\\\"btn btn-primary form-btns mr-1\\\" href=\\\"javascript:void(0);\\\" ><span><i class=\\\"fa fa-list-alt\\\"></i> Manage View</span></a>\\r\\n              <a *ngIf='modulePermission!==null && modulePermission.roleModuleAddFlag' [routerLink]=\\\"['/task/addtask']\\\" class=\\\"btn btn-success form-btns  mr-1\\\"><i class=\\\"fa fa-plus\\\"></i> Add Task</a>\\r\\n              <a *ngIf='modulePermission!==null && modulePermission.roleModuleDeleteFlag' class=\\\"btn btn-danger form-btns\\\" href=\\\"javascript:void(0);\\\"><span><i class=\\\"fa fa-trash\\\"></i> Delete</span></a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div><!--[rowHeight]=\\\"'auto'\\\"  -->\\r\\n      <div class=\\\"panel-content px-3 pagination2 table-responsive no-padding\\\">\\r\\n        <div class=\\\"table table-striped\\\">\\r\\n          <ngx-datatable #table class=\\\"bootstrap table table-hover table-dynamic\\\"\\r\\n                         [rows]=\\\"pagedData.data\\\"\\r\\n                         [columnMode]=\\\"'force'\\\"\\r\\n                         [scrollbarH]=\\\"true\\\"\\r\\n                       [rowHeight]=\\\"'40'\\\"\\r\\n                         [headerHeight]=\\\"40\\\"\\r\\n                         [footerHeight]=\\\"40\\\"\\r\\n                         \\r\\n                         [externalPaging]=\\\"true\\\"\\r\\n                         [externalSorting]=\\\"true\\\"\\r\\n                         [loadingIndicator]=\\\"loadSave\\\"\\r\\n                         [count]=\\\"pagedData.pager.totalItems\\\"\\r\\n                         [offset]=\\\"pagedData.pager.currentPage\\\"\\r\\n                         [limit]=\\\"pagedData.pager.pageSize\\\"\\r\\n                         (page)='setPage($event)'\\r\\n                         (sort)=\\\"onSort($event)\\\">\\r\\n\\r\\n\\r\\n            <ngx-datatable-column name=\\\"Task ID\\\" prop=\\\"TaskId\\\" [sortable]=\\\"true\\\">\\r\\n              bl\\r\\n\\r\\n\\r\\n              <!--<ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          <a [routerLink]=\\\"['/loanApplication/Detail']\\\">{{row.TaskId}} </a>\\r\\n        </ng-template>-->\\r\\n            </ngx-datatable-column>\\r\\n\\r\\n\\r\\n            <ngx-datatable-column name=\\\"Status\\\" prop=\\\"Status\\\" [sortable]=\\\"true\\\"> </ngx-datatable-column>\\r\\n\\r\\n\\r\\n            <ngx-datatable-column name=\\\"Assigned User\\\" prop=\\\"AssignedUser\\\" [sortable]=\\\"true\\\"></ngx-datatable-column>\\r\\n            <!--<ngx-datatable-column name=\\\"Customer\\\" prop=\\\"Customer\\\" [sortable]=\\\"true\\\"></ngx-datatable-column>\\r\\n      <ngx-datatable-column name=\\\"Creator\\\" prop=\\\"Creator\\\" [sortable]=\\\"true\\\"></ngx-datatable-column>-->\\r\\n            <ngx-datatable-column name=\\\"Task\\\" prop=\\\"Task\\\" [sortable]=\\\"true\\\"></ngx-datatable-column>\\r\\n            <ngx-datatable-column name=\\\"Due Date\\\" prop=\\\"DueDate\\\" [sortable]=\\\"true\\\"></ngx-datatable-column>\\r\\n            <ngx-datatable-column [width]=\\\"80\\\" name=\\\"Action\\\" [sortable]=\\\"false\\\" headerClass=\\\"text-center\\\">\\r\\n              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                <div class=\\\"text-center\\\">\\r\\n                  <a *ngIf='modulePermission!==null && modulePermission.roleModuleReadFlag' href=\\\"javascript:void(0);\\\" class=\\\"btn-edit icon-text-center\\\"><i (click)=\\\"onOpenEdit(row.TaskAutoId)\\\" title=\\\"Click to edit.\\\" class=\\\"fa fa-edit text-success\\\"></i></a>\\r\\n                  &nbsp;\\r\\n                  <a *ngIf='modulePermission!==null && modulePermission.roleModuleDeleteFlag' href=\\\"javascript:void(0);\\\" class=\\\"text-danger icon_tick mx-1\\\"><i (click)=\\\"onDeleteTask(row.TaskAutoId)\\\" title=\\\"Click to delete.\\\" class=\\\"fa fa-trash\\\"></i></a>\\r\\n                </div>\\r\\n\\r\\n              </ng-template>\\r\\n            </ngx-datatable-column>\\r\\n            <ngx-datatable-footer>\\r\\n              <ng-template ngx-datatable-footer-template\\r\\n                           let-rowCount=\\\"rowCount\\\"\\r\\n                           let-pageSize=\\\"pageSize\\\"\\r\\n                           let-selectedCount=\\\"selectedCount\\\"\\r\\n                           let-currentPage=\\\"currentPage\\\"\\r\\n                           let-offset=\\\"offset\\\"\\r\\n                           let-isVisible=\\\"isVisible\\\">\\r\\n                <div class=\\\"page-count\\\">\\r\\n                  {{rowCount}} total\\r\\n                </div>\\r\\n                <div>\\r\\n                  <div style=\\\"color:black; margin-right:10px;\\\" class=\\\"page-size-record\\\">\\r\\n                    <span style=\\\"text-align:right; width:80px;vertical-align: middle;\\\">\\r\\n                      <ng-select [searchable]=\\\"false\\\" [items]=\\\"lstPageSize\\\" appendTo=\\\"body\\\" [(ngModel)]='pageSizeValue' dropzone=\\\"fixed\\\" [clearable]=\\\"false\\\" (change)=\\\"onChange($event)\\\" draggable=\\\"false\\\" [closeOnSelect]=\\\"true\\\"\\r\\n                                 bindLabel=\\\"text\\\" bindValue=\\\"text\\\"></ng-select>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <datatable-pager [pagerLeftArrowIcon]=\\\"'fa fa-angle-double-left'\\\"\\r\\n                                 [pagerRightArrowIcon]=\\\"'fa fa-angle-double-right'\\\"\\r\\n                                 [pagerPreviousIcon]=\\\"'fa fa-angle-left'\\\"\\r\\n                                 [pagerNextIcon]=\\\"'fa fa-angle-right'\\\"\\r\\n                                 [page]=\\\"pagedData.pager.currentPage+1\\\"\\r\\n                                 [size]=\\\"pageSizeValue\\\"\\r\\n                                 [count]=\\\"pagedData.pager.totalItems\\\"\\r\\n                                 [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\r\\n                                 (change)=\\\"setPage($event)\\\">\\r\\n                </datatable-pager>\\r\\n              </ng-template>\\r\\n            </ngx-datatable-footer>\\r\\n          </ngx-datatable>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CommonService } from '../shared/common.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BankService {\r\n  public baseUri = `${environment.WebApiBaseUrl}`;\r\n  pagedData: any;\r\n\r\n  constructor(private http: HttpClient, private commonService: CommonService) { }\r\n\r\n  //function used to fetch list of Bank\r\n  getBankList(name: any, sortColumn: string, sortDir, page: number, pageSize: number, userId: string) {\r\n    if (typeof name == \"undefined\" || name == null) { name = null; }\r\n    else { name = encodeURIComponent((name)); }\r\n    return this.http.get(this.baseUri + `Bank/GetBankList?nameSearch=${name}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${page}&pageSize=${pageSize}&userId=${userId}`)\r\n      .pipe(\r\n        map((response: any) => {\r\n          this.pagedData = response;\r\n          return true;\r\n        })\r\n      );\r\n  }\r\n\r\n  //function used to set active/inactive status of Bank\r\n  setBankStatus(tableName: any, primaryKey: any, status: any, moduleName: any, statusName: any) {\r\n    return this.commonService.ActiveInactive(tableName, primaryKey, status, moduleName, statusName);\r\n  }\r\n\r\n  //function is used to get detail of  user\r\n  getBankDetail(id: any) {\r\n    return this.http.get(this.baseUri + `Bank/GetBankDetailById?Bankid=${id}`)\r\n  }\r\n\r\n  //function is used to delte the  user\r\n  deleteBank(tableName: any,primaryid : any, moduleName: any) {\r\n    return this.commonService.Delete(tableName, primaryid, moduleName);\r\n  }\r\n\r\n  //function is used to add edit vendor\r\n  addEditBank(bankModel: BankModel) {\r\n    return this.http.post(this.baseUri + `Bank/AddEditBank`, bankModel);\r\n  }\r\n\r\n  getusersBankList(page: number, pageSize: number,bankId: string) {\r\n\r\n    return this.http.get(this.baseUri + `Bank/GetUsersBankList?pageIndex=${page}&pageSize=${pageSize}&bankId=${bankId}`)\r\n      .pipe(\r\n        map((response: any) => {\r\n          this.pagedData = response;\r\n          return true;\r\n        })\r\n      );\r\n  }\r\n\r\n  getBankDropdownList() {\r\n    return this.http.get(`${this.baseUri}Bank/GetBankDropList`);\r\n  }\r\n\r\n}\r\n\r\nexport class BankModel {\r\n  id: string;\r\n  bankName: string;\r\n  city: string;\r\n  county: string;\r\n  stateId: string;\r\n  statusId: string;\r\n  phone: string;\r\n  address: string;\r\n  zipCode: string;\r\n  constructor() {\r\n    this.id = \"\";\r\n    this.bankName = \"\";\r\n    this.city = \"\";\r\n    this.county = \"\";\r\n    this.stateId = \"\";\r\n    this.statusId = \"\";\r\n    this.address = \"\";\r\n    this.phone = \"\";\r\n    this.zipCode = \"\";\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3Rhc2svYWRkZWRpdHRhc2suY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild, NgModule } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { CommonService, ModuleList } from '../shared/common.service';\nimport { BankService } from '../bank/bank.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgSelectComponent } from '@ng-select/ng-select';\n\nimport { TasklistService, Task } from './tasklist.service';\nimport { DATE } from 'ngx-bootstrap/chronos/units/constants';\nimport { ThirdPartyDraggable } from '@fullcalendar/interaction';\nimport { CommonModule } from '@angular/common';\n@Component({\n  selector: 'app-addedittask',\n  templateUrl: './addedittask.component.html',\n  styleUrls: ['./addedittask.component.scss']\n})\nexport class AddedittaskComponent implements OnInit {\n  @ViewChild('clearDrop', { static: false }) clearDrop: NgSelectComponent;\n  lstActiveStatus: any;\n  taskmodel: Task = new Task();\n  userId: string = null;\n  dateTime = new Date();\n  activeStatus: any;\n  Heading = 'Add Task';\n  breadcrum: string='Add Task'\n  lstStatus: any;\n  dt: Date;\n  addForm: FormGroup;\n  addOrUpdatePermission: boolean;\n  modulePermission: ModuleList;\n  loadSave:boolean = false;\n\n  constructor(private fb: FormBuilder,\n    private commonService: CommonService,\n    private bankService: BankService,\n    private router: Router,\n    private toaster: ToastrService,\n    \n    private route: ActivatedRoute, private taskListService: TasklistService) {\n    const moduleCode = this.route.snapshot.data.moduleCode;\n    this.modulePermission = this.commonService.getPermission(moduleCode);\n   \n  }\n  d: Date;\n  ngOnInit() {\n    this.addOrUpdatePermission = false;\n    this.initForm();\n\n    this.route.queryParams.subscribe(params => {\n      // console.log(params.id);\n      this.userId = params.id;\n      if (this.userId) {\n        this.getTaskDetails(params.id);\n      } else {\n        this.addOrUpdatePermission = this.modulePermission.roleModuleAddFlag;\n      }\n    });\n    this.taskListService.GetAssignedUsers().subscribe((result: any) => {\n\n      this.lstActiveStatus = result;\n\n    })\n    this.activeStatus = '';\n    this.commonService.getMasterItemsList(\"TaskStatus\").subscribe((result: any) => {\n      // console.log(\"data\", result);\n      // console.log(\"data\", this.commonService.masters);\n      this.lstStatus = this.commonService.masters;\n    })\n  }\n\n  getTaskDetails(id) {\n    this.addOrUpdatePermission = this.modulePermission.roleModuleUpdateFlag;\n    this.taskListService.GetTaskDetails(id + \"\").subscribe(s => {\n      this.dt = new Date();\n      var splitted = s.result.dueTime.split(\":\");\n      this.dt.setHours(splitted[0]);\n      this.dt.setMinutes(splitted[1]);\n      // console.log(this.dt);\n      this.breadcrum = 'Edit User: ' + s.result.newTask;\n      this.Heading = 'Edit Task';\n      this.addForm.patchValue(\n        {\n          newTask: s.result.newTask,\n\n          assignedUser: s.result.assignedUser,\n          sendEmail: s.result.sendEmail,\n          sendSms: s.result.sendSms,\n          status: s.result.status,\n          dueTime: this.dt,\n          dueDate: new Date(s.result.dueDate)\n        });\n    });\n  }\n\n  addTask() {\n    if (this.addForm.valid) {\n\n\n      this.taskmodel.AssignedUser = this.addForm.value.assignedUser;\n      this.taskmodel.DueDate = new Date(this.addForm.value.dueDate)\n      this.taskmodel.DueTime = this.addForm.value.dueTime\n      this.taskmodel.NewTask = this.addForm.value.newTask;\n      this.taskmodel.SendEmail = this.addForm.value.sendEmail;\n      this.taskmodel.SendSms = this.addForm.value.sendSms;\n      this.taskmodel.Status = this.addForm.value.status;\n      this.taskmodel.userId = '';\n\n         this.dt = new Date(this.taskmodel.DueTime);\n\n      this.taskmodel.DueTime = this.dt.getHours() + \":\" + this.dt.getMinutes();\n     \n      this.taskmodel.taskAutoid = this.userId;\n      this.taskListService.UploadTaskData(this.taskmodel).subscribe((result: any) => {\n        this.toaster.success(`Task has been  successfully Submitted..`);\n\n        this.router.navigateByUrl(\"/task\");\n\n\n\n      });\n    }\n    else {\n      this.commonService.validateAllFormFields(this.addForm);\n      \n    }\n    \n      //this.taskmodel.addeditInsurance(this.insuranceModel).subscribe((result: any) => {\n      //  if (result.statusCode == 200) {\n      //    this.toaster.success(result.responseMessage);\n      //    this.router.navigateByUrl(\"/insurance\");\n      //    setTimeout(() => { this.loadSave = false; }, 3000);\n      //  }\n      //  else {\n      //    this.loadSave = false;\n      //    this.toaster.error(result.responseMessage);\n      //  }\n      //}, error => {\n      //  this.loadSave = false;\n      //});\n    //}\n \n\n    //this.router.navigateByUrl(\"/task\");\n  }\n\n\n\n  Cancel() {\n    this.router.navigateByUrl(\"/task\");\n  }\n\n \n  private initForm() {\n\n    this.addForm = this.fb.group({\n      newTask: ['', Validators.required],\n      dueDate: ['', [Validators.required]],\n      dueTime: [null, Validators.required],\n      assignedUser: [null, [Validators.required]],\n      sendEmail: [false],\n      sendSms: [false],\n      status: [null, Validators.required],\n    });\n\n   \n      \n\n    \n  }\n\n\n  get newTask() { return this.addForm.get('newTask'); }\n  get dueDate() { return this.addForm.get('dueDate'); }\n  get dueTime() { return this.addForm.get('dueTime'); }\n  get assignedUser() { return this.addForm.get('assignedUser'); }\n  get sendEmail() { return this.addForm.get('sendEmail'); }\n  get sendSms() { return this.addForm.get('sendSms'); }\n  get status() { return this.addForm.get('status'); }\n \n  \n\n  \n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TasklistComponent } from './tasklist.component';\r\nimport { AddedittaskComponent } from './addedittask.component';\r\n//import { ListbankComponent } from './listbank.component';\n//import { AddeditbankComponent } from './addeditbank.component';\n\nconst routes: Routes = [\n  { path: '', component: TasklistComponent },\n  { path: 'addtask', component: AddedittaskComponent }\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TaskRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n//import { BankRoutingModule } from './bank-routing.module';\n//import { ListbankComponent } from './listbank.component';\n//import { AddeditbankComponent } from './addeditbank.component';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { TasklistComponent } from './tasklist.component';\nimport { TaskRoutingModule } from './task-routing.module';\nimport { AddedittaskComponent } from './addedittask.component';\n\n@NgModule({\n  declarations: [TasklistComponent, AddedittaskComponent],\n  imports: [\n    CommonModule,\n    TaskRoutingModule, FormsModule, ReactiveFormsModule, NgSelectModule, NgxDatatableModule, SharedModule, ModalModule\n  ]\n})\nexport class TaskModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3Rhc2svdGFza2xpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { TasklistService } from './tasklist.service';\r\nimport { ConfirmationDialogService } from '../shared/confirmation-dialog/confirmation-dialog.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CommonService, ModuleList } from '../shared/common.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\n@Component({\n  selector: 'app-tasklist',\n  templateUrl: './tasklist.component.html',\n  styleUrls: ['./tasklist.component.scss']\n})\nexport class TasklistComponent implements OnInit {\n  loadSave = false;\n  lstUserType: any;\n  searchUserType = '';\n  loginuserid: any;\n  modulePermission: ModuleList;\n  loading = false;\n  sortDir = 'desc';\n  sortColumn = 'CreatedOn';\n  pagedData: any = {\n    pager: {},\n    data: []\n  };\n  listFilter = '';\n  searchTxt = '';\n\n  lstPageSize: any\n  pageSizeValue: number;\n  constructor(private tasklistService: TasklistService, private dialogService: ConfirmationDialogService,\n    private commonService: CommonService, private router: Router,\n    private activeRoute: ActivatedRoute\n    , private toaster: ToastrService) {\n    this.commonService.getMasterItemsList(\"usertype\").subscribe((result: any) => {\n      this.lstUserType = this.commonService.masters;\n    })\n    const moduleCode = this.activeRoute.snapshot.data.moduleCode;\n    this.modulePermission = this.commonService.getPermission(moduleCode);\n\n    this.commonService.getLoggedInName.subscribe((userdetail: any) => {\n      this.loginuserid = userdetail.id;\n    });\n\n  }\n  onOpenEdit(id: string) {\n    this.router.navigate(['/task/addtask'], { queryParams: { id: id } });\r\n\r\n  }\n  onDeleteTask(taskId: any) {\n    const message = `Are you sure you want to delete Task?`;\r\n    this.dialogService.confirm('Delete Loanterm', message).subscribe(confirmed => {\r\n      this.tasklistService.onDeleteTask(taskId).subscribe((res: any) => {\n        this.toaster.success(`Task has been deleted successfully..`);\r\n\n        this.refresh();\n      });\r\n    });\n   \r\n  }\n  ngOnInit() {\n    this.pageSizeValue = 10;\n    this.getPageSizes();\n    this.refresh();\n  }\n\n  setPage(e) {\n    this.refresh(e.page-1);\r\n  }\n  refresh(pagenum: number=0) {\n    this.loading = true;\n    // console.log(pagenum);\n    this.tasklistService.GetTaskList(this.listFilter, this.searchUserType, this.sortColumn, this.sortDir, pagenum, this.pageSizeValue, this.loginuserid).subscribe(response => {\n\n      this.pagedData = this.tasklistService.pagedData;\n      this.loading = false;\n    }, error => {\n      this.loading = false;\n    })\n  }\n\n  getPageSizes() {\n    this.commonService.getMasterItemsList(\"PageSize\").subscribe((res: any) => {\n      this.lstPageSize = this.commonService.masters;\n    })\n  }\n\n  reset() {\n    this.listFilter='';\r\n    this.refresh();\r\n  }\n\n  search() {\n\r\n  }\n  updateFilter(e) {\n\r\n  }\n  onSort(e) {\n\r\n  }\n  popUpOpen() {\n\r\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})     \nexport class TasklistService {\n\n  public baseUri = `${environment.WebApiBaseUrl}`;\n  pagedData: any;\n  constructor(private http: HttpClient) { }\n\n  GetTaskList(name: string, userType: string, sortColumn: string, sortDir, page: number, pageSize: number, userId: string): Observable<any> {\n    if (typeof name == \"undefined\" || name == null) { name = null; }\n    else { name = encodeURIComponent((name)); }\n \n      return this.http.get(`${this.baseUri}Bank/GetTaskList?name=${name}&userType=${userType}&sortColumn=${sortColumn}&sortDir=${sortDir}&page=${page}&pageSize=${pageSize}&userId=${userId}`)\n      .pipe(\n        map((response: any) => {\n          this.pagedData = response;\n          return true;\n        })\n      );\n  }\n  GetTaskDetails(taskId: string): Observable<any> {\n  \n    return this.http.get(`${this.baseUri}Task/GetSingleTask?taskID=${taskId}`)\n       .pipe(\n         map((response: any) => {\n          \n          return response;\n        })\n      );\n  }\n  onDeleteTask(taskId: string): Observable<any> {\n\n    return this.http.get(`${this.baseUri}Task/DeleteTask?taskID=${taskId}`)\n      .pipe(\n        map((response: any) => {\n  \n\n          return true;\n        })\n      );\r\n  }\n\n  UploadTaskData(task: Task) {  \n    // console.log('task', task);\r\n    return this.http.post(this.baseUri + `Task/AddEditTask`, task);\r\n  }\n\n  GetAssignedUsers() {\n\n    return this.http.get(`${this.baseUri}Task/TaskGetAssignedUsers`)\n      .pipe(\n        map((response: any) => {\n          this.pagedData = response;\n\n          return response;\n        })\n      );\r\n  }\n}\nexport class Task {\n  NewTask: string;\n  DueDate: Date;\n  DueTime: string;\n  AssignedUser: string;\n  SendEmail: boolean;\n  SendSms: boolean;\n  Status: string;\n  userId: string;\n  taskAutoid: string;\n  constructor() {\n    this.NewTask = '';\r\n    this.DueDate = new Date();\r\n    this.DueTime = '';\r\n    this.AssignedUser = '';\r\n    this.SendEmail = false;\r\n    this.SendSms = false;\r\n    this.Status = '';\r\n    this.taskAutoid = null;\r\n    this.userId = null;\r\n\r\n  }\n\r\n}\r\n"],"sourceRoot":"webpack:///"}