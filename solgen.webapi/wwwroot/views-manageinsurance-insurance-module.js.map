{"version":3,"sources":["./src/app/views/manageinsurance/addeditinsurance.component.html","./src/app/views/manageinsurance/insurancelist.component.html","./src/app/views/manageinsurance/addeditinsurance.component.ts","./src/app/views/manageinsurance/insurance-routing.module.ts","./src/app/views/manageinsurance/insurance.module.ts","./src/app/views/manageinsurance/insurancelist.component.ts"],"names":[],"mappings":"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","file":"views-manageinsurance-insurance-module.js","sourcesContent":["export default \"<div class=\\\"page\\\">\\r\\n  <div class=\\\"breadcrumb-holder\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-9 mt-3\\\">\\r\\n          <span class=\\\"dash\\\">Manage Insurance Company</span>\\r\\n          <ul class=\\\"breadcrumb\\\">\\r\\n            <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/dashboard\\\">Dashboard</a></li>\\r\\n            <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/insurance\\\">Manage Insurance Company</a></li>\\r\\n            <li class=\\\"breadcrumb-item active\\\">{{pageTitle}}</li>\\r\\n          </ul>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3 mt-4 text-right\\\">\\r\\n          <button class=\\\"w-auto sw-100 btn btn-dark\\\" (click)=\\\"Cancel()\\\"><i class=\\\"fa fa-arrow-left\\\"></i>&nbsp;Back</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n   \\r\\n  </div>\\r\\n  <section class=\\\"dashboard-header section-padding\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row d-flex align-items-md-stretch\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <div class=\\\"bg-white border rounded pb-4\\\">\\r\\n            <div class=\\\"col-md-12 mt-4\\\">\\r\\n              <form [formGroup]=\\\"addInsuranceForm\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"Insurance-box\\\" [ngClass]=\\\"{'disabled':loadSave}\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n\\r\\n                    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                      <label>Insurance Company Name:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Insurance Company Name\\\"\\r\\n                               formControlName=\\\"name\\\"\\r\\n                               [ngClass]=\\\"{'is-invalid': (name.invalid && (name.dirty || name.touched) && (name.errors?.required || name.errors?.maxlength)) }\\\">\\r\\n                        <small *ngIf=\\\"name.invalid && (name.dirty || name.touched) && name.errors?.required\\\"\\r\\n                               class=\\\"text-danger\\\">Insurance Company Name is required</small>\\r\\n                        <small *ngIf=\\\"name.invalid && (name.dirty || name.touched) && name.errors?.maxlength\\\"\\r\\n                               class=\\\"text-danger\\\">Insurance Company Name must be less than 500 characters.</small>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                      <label>Insurance Agent Name:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Insurance Company Name\\\"\\r\\n                               formControlName=\\\"agentName\\\"\\r\\n                               [ngClass]=\\\"{'is-invalid': (agentName.invalid && (agentName.dirty || agentName.touched) && (agentName.errors?.required || agentName.errors?.maxlength)) }\\\">\\r\\n                        <small *ngIf=\\\"agentName.invalid && (agentName.dirty || agentName.touched) && agentName.errors?.required\\\"\\r\\n                               class=\\\"text-danger\\\">Insurance Agent Name is required</small>\\r\\n                        <small *ngIf=\\\"agentName.invalid && (agentName.dirty || agentName.touched) && agentName.errors?.maxlength\\\"\\r\\n                               class=\\\"text-danger\\\">Insurance Agent Name must be less than 100 characters.</small>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                      <label>Insurance Agent Email:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"agentEmail\\\" placeholder=\\\"Enter Insurance Agent Email\\\"\\r\\n                               [ngClass]=\\\"{'is-invalid': (agentEmail.invalid && (agentEmail.dirty || agentEmail.touched) && (agentEmail.errors?.required || agentEmail.errors?.email)) }\\\">\\r\\n                        <small *ngIf=\\\"agentEmail.invalid && (agentEmail.dirty || agentEmail.touched) && agentEmail.errors?.required\\\"\\r\\n                               class=\\\"text-danger\\\">Email is required</small>\\r\\n                        <small *ngIf=\\\"agentEmail.invalid && (agentEmail.dirty || agentEmail.touched) && agentEmail.errors?.email\\\"\\r\\n                               class=\\\"text-danger\\\">Please enter valid email address</small>\\r\\n\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                      <label>Insurance Phone:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <p-inputMask styleClass=\\\"form-control\\\" mask=\\\"(999) 999-9999\\\" formControlName=\\\"phone\\\" placeholder=\\\"(___) ___-____\\\" [ngClass]=\\\"{'is-invalid': (phone.invalid && (phone.dirty || phone.touched) && (phone.errors?.required || phone.errors?.pattern)) }\\\">\\r\\n                        </p-inputMask>\\r\\n                        <small *ngIf=\\\"phone.invalid && (phone.dirty || phone.touched) && phone.errors?.required\\\"\\r\\n                               class=\\\"text-danger\\\">Phone is required</small>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <!--<div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n    <label>Insurance Phone:<span class=\\\"text-danger\\\">*</span></label>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"phone\\\" maxlength=\\\"50\\\" placeholder=\\\"Enter Phone Number\\\"\\r\\n             [ngClass]=\\\"{'is-invalid': (phone.invalid && (phone.dirty || phone.touched) && (phone.errors?.required || phone.errors?.pattern)) }\\\" />\\r\\n      <small *ngIf=\\\"phone.invalid && (phone.dirty || phone.touched) && phone.errors?.required\\\"\\r\\n             class=\\\"text-danger\\\">Phone is required</small>\\r\\n      <small *ngIf=\\\"phone.touched && phone.errors?.pattern\\\"\\r\\n             class=\\\"text-danger\\\">Please enter valid Phone number.</small>\\r\\n    </div>\\r\\n  </div>-->\\r\\n\\r\\n\\r\\n\\r\\n                    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                      <label>Status:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <ng-select [items]=\\\"lstStatus\\\"\\r\\n                                   placeholder=\\\"Select Staus\\\" formControlName=\\\"statusId\\\" bindLabel=\\\"text\\\" bindValue=\\\"value\\\"\\r\\n                                   [ngClass]=\\\"{'is-invalid': (statusId.invalid && (statusId.dirty || statusId.touched) && statusId.errors?.required) }\\\"></ng-select>\\r\\n                        <small *ngIf=\\\"statusId.invalid && (statusId.dirty || statusId.touched) && statusId.errors?.required\\\" class=\\\"text-danger\\\">Please select statusId</small>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-12 col-md-12 col-lg-12\\\">\\r\\n                      <label class=\\\"m-label-s\\\">Insurance Company Address:</label>\\r\\n                      <hr size=\\\"4\\\" class=\\\"mt-0 border-secondary\\\">\\r\\n                    </div>\\r\\n\\r\\n\\r\\n\\r\\n                    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                      <label>Address:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <textarea type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\"\\r\\n                                  [ngClass]=\\\"{'is-invalid': (address.invalid && (address.dirty || address.touched) && (address.errors?.required || address.errors?.maxlength)) }\\\"></textarea>\\r\\n                        <small *ngIf=\\\"address.invalid && (address.dirty || address.touched) && address.errors?.required\\\"\\r\\n                               class=\\\"text-danger\\\">Address is required</small>\\r\\n                        <small *ngIf=\\\"address.invalid && (address.dirty || address.touched) && address.errors?.maxlength\\\"\\r\\n                               class=\\\"text-danger\\\">Address must be less than 500 characters.</small>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                      <label>City:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter City\\\" formControlName=\\\"city\\\"\\r\\n                               [ngClass]=\\\"{'is-invalid': (city.invalid && (city.dirty || city.touched) && (city.errors?.required || city.errors?.maxlength)) }\\\">\\r\\n                        <small *ngIf=\\\"city.invalid && (city.dirty || city.touched) && city.errors?.required\\\"\\r\\n                               class=\\\"text-danger\\\">City is required</small>\\r\\n                        <small *ngIf=\\\"city.invalid && (city.dirty || city.touched) && city.errors?.maxlength\\\"\\r\\n                               class=\\\"text-danger\\\">City name must be less than 100 characters.</small>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                      <label>County:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter County\\\"\\r\\n                               formControlName=\\\"county\\\"\\r\\n                               [ngClass]=\\\"{'is-invalid': (county.invalid && (county.dirty || county.touched) && (county.errors?.required || county.errors?.maxlength)) }\\\">\\r\\n                        <small *ngIf=\\\"county.invalid && (county.dirty || county.touched) && county.errors?.required\\\"\\r\\n                               class=\\\"text-danger\\\">County is required</small>\\r\\n                        <small *ngIf=\\\"county.invalid && (county.dirty || county.touched) && county.errors?.maxlength\\\"\\r\\n                               class=\\\"text-danger\\\">County must be less than 100 characters.</small>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                      <label>State:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <ng-select [items]=\\\"states\\\" [loading]=\\\"loadSave\\\" placeholder=\\\"Select State\\\" formControlName=\\\"state\\\"\\r\\n                                   bindLabel=\\\"text\\\" bindValue=\\\"value\\\"\\r\\n                                   [ngClass]=\\\"{'is-invalid': (state.invalid && (state.dirty || state.touched) && state.errors?.required) }\\\"></ng-select>\\r\\n                        <small *ngIf=\\\"state.invalid && (state.dirty || state.touched) && state.errors?.required\\\" class=\\\"text-danger\\\">Please select State</small>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                      <label>Zip Code:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Zip Code\\\" formControlName=\\\"zipCode\\\"\\r\\n                               [ngClass]=\\\"{'is-invalid': (zipCode.invalid && (zipCode.dirty || zipCode.touched) && (zipCode.errors?.required || zipCode.errors?.maxlength)) }\\\">\\r\\n                        <small *ngIf=\\\"zipCode.invalid && (zipCode.dirty || zipCode.touched) && zipCode.errors?.required\\\"\\r\\n                               class=\\\"text-danger\\\">Zip Code is required</small>\\r\\n                        <small *ngIf=\\\"zipCode.invalid && (zipCode.dirty || zipCode.touched) && zipCode.errors?.maxlength\\\"\\r\\n                               class=\\\"text-danger\\\">Zip Code can not be greater than 5 characters.</small>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n              </form>\\r\\n              <div class=\\\"col-12 p-0\\\">\\r\\n                <a href=\\\"javascript:void(0);\\\"  class=\\\"btn btn-primary form-btns\\\" *ngIf=\\\"addOrUpdatePermission\\\" (click)=\\\"addeditInsurance()\\\"><i class=\\\"fa fa-save\\\"></i> Submit</a>\\r\\n                <a href=\\\"javascript:void(0);\\\" class=\\\"btn btn-danger form-btns\\\" (click)=\\\"Cancel()\\\"><i class=\\\"fa fa-times\\\"></i> Cancel</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </section>\\r\\n  <app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader\\\"></app-loader>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","export default \"<div class=\\\"page\\\">\\r\\n  <!-- Breadcrumb-->\\r\\n  <div class=\\\"breadcrumb-holder\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12 mt-3\\\">\\r\\n          <span class=\\\"dash\\\">Manage Insurance Company</span>\\r\\n          <ul class=\\\"breadcrumb\\\">\\r\\n            <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/dashboard\\\">Dashboard</a></li>\\r\\n            <li class=\\\"breadcrumb-item active\\\">Manage Insurance Company</li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>         <!-- Header Section-->\\r\\n  <div class=\\\"dashboard-header section-padding\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row d-flex align-items-md-stretch\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <div class=\\\"bg-white custom-shadow\\\">\\r\\n            <div class=\\\"col-md-12 border-bottom py-3\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12 col-lg-12 col-xl-12\\\">\\r\\n                  <div class=\\\"row mx-0 custom-top-padding\\\">\\r\\n                    <div class=\\\"col-12 col-md-12 col-lg-6 col-xl-4\\\">\\r\\n                      <div class=\\\"form-group mb-xl-0\\\">\\r\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]='listFilter' placeholder=\\\"Search By Name/Agent Email\\\" (keyup)='updateFilter($event)'>\\r\\n                        <input type=\\\"button\\\" class=\\\"btn btn-primary src-icon\\\" (click)=\\\"search()\\\" value=\\\"Search\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-12 col-md-6 col-lg-6 col-xl-2 mr-auto\\\">\\r\\n                      <div class=\\\"form-group mb-xl-0\\\">\\r\\n                       \\r\\n                        <input type=\\\"button\\\" class=\\\"btn btn-danger reset-icon\\\" value=\\\"Reset\\\" (click)=\\\"reset()\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div *ngIf='modulePermission!==null && modulePermission.roleModuleAddFlag' class=\\\"col-12 col-md-6 col-lg-6 col-xl-3 text-md-right float-right\\\"><a routerLink=\\\"/insurance/addinsurance\\\" class=\\\"btn btn-success form-btns\\\"><i class=\\\"fa fa-plus\\\"></i> Add Insurance</a></div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"\\\">\\r\\n              <div class=\\\"table-responsive\\\">\\r\\n                <div class=\\\"table table-striped\\\">\\r\\n                  <ngx-datatable  #table class=\\\"bootstrap table table-hover table-dynamic\\\"\\r\\n                                 [rows]=\\\"pagedData.data\\\"\\r\\n                                 [columnMode]=\\\"'force'\\\"\\r\\n                                 [scrollbarH]=\\\"true\\\"\\r\\n                       [rowHeight]=\\\"'40'\\\"\\r\\n                                 [headerHeight]=\\\"40\\\"\\r\\n                                 [footerHeight]=\\\"40\\\"\\r\\n                                 \\r\\n                                 [externalPaging]=\\\"true\\\"\\r\\n                                 [externalSorting]=\\\"true\\\"\\r\\n                                 [loadingIndicator]=\\\"loadSave\\\"\\r\\n                                 [count]=\\\"pagedData.pager.totalItems\\\"\\r\\n                                 [offset]=\\\"pagedData.pager.currentPage\\\"\\r\\n                                 [limit]=\\\"pagedData.pager.pageSize\\\"\\r\\n                                 (page)='setPage($event)'\\r\\n                                 (sort)=\\\"onSort($event)\\\">\\r\\n                    <ngx-datatable-column name=\\\"Name\\\" prop=\\\"Name\\\" [sortable]=\\\"true\\\"\\r\\n                                          *ngIf='modulePermission!==null && modulePermission.roleModuleReadFlag'>\\r\\n                      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                        <div><a [routerLink]=\\\"['/insurance/editinsurance',row.InsuranceId]\\\">{{row.Name}}</a></div>\\r\\n                      </ng-template>\\r\\n                    </ngx-datatable-column>\\r\\n                    <ngx-datatable-column name=\\\"Name\\\" prop=\\\"Name\\\" [sortable]=\\\"true\\\" *ngIf='modulePermission!==null && !modulePermission.roleModuleReadFlag'></ngx-datatable-column>\\r\\n\\r\\n                    <ngx-datatable-column name=\\\"Agent Email\\\" prop=\\\"AgentEmail\\\" [sortable]=\\\"true\\\">\\r\\n                      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                        <div title=\\\"{{row.AgentEmail}}\\\">\\r\\n                          {{row.AgentEmail | truncate}}\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n                    </ngx-datatable-column>\\r\\n                    <ngx-datatable-column name=\\\"Agent Name\\\" prop=\\\"AgentName\\\" [sortable]=\\\"true\\\" headerClass=\\\"m-min-width115\\\">\\r\\n                      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                        <div title=\\\"{{row.AgentName}}\\\">\\r\\n                          {{row.AgentName | truncate}}\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n                    </ngx-datatable-column>\\r\\n                    <ngx-datatable-column name=\\\"County\\\" prop=\\\"COUNTY\\\" [sortable]=\\\"true\\\"></ngx-datatable-column>\\r\\n                    <ngx-datatable-column name=\\\"State\\\" prop=\\\"State\\\" [sortable]=\\\"true\\\"></ngx-datatable-column>\\r\\n                    <ngx-datatable-column name=\\\"City\\\" prop=\\\"City\\\" [sortable]=\\\"true\\\"></ngx-datatable-column>\\r\\n                    <ngx-datatable-column name=\\\"Zip Code\\\" prop=\\\"ZipCode\\\" [sortable]=\\\"true\\\"></ngx-datatable-column>\\r\\n                    <ngx-datatable-column name=\\\"Address\\\" prop=\\\"Address\\\" [sortable]=\\\"true\\\">\\r\\n                      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                        <div title=\\\"{{row.Address}}\\\">\\r\\n                          {{row.Address | truncate}}\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n                    </ngx-datatable-column>\\r\\n\\r\\n                    <ngx-datatable-column name=\\\"IsActive\\\" [sortable]=\\\"true\\\" headerClass=\\\"text-center\\\"\\r\\n                                          *ngIf='modulePermission!==null &&  modulePermission.roleModuleUpdateFlag'>\\r\\n                      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                        <div class=\\\"icon-text-center\\\">\\r\\n                          <a *ngIf=\\\"row.IsActive == 0 && row.AssociateUser==null\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"enable(row)\\\"><i title=\\\"Click to enable.\\\" class=\\\"fa fa-times text-danger icon_tick\\\"></i></a>\\r\\n                          <a *ngIf=\\\"row.IsActive == 1 && row.AssociateUser==null\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"disable(row)\\\"><i title=\\\"Click to disable.\\\" class=\\\"fa fa-check text-success icon_tick\\\"></i></a>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n                    </ngx-datatable-column>\\r\\n\\r\\n                    <ngx-datatable-column name=\\\"IsActive\\\" [sortable]=\\\"true\\\" headerClass=\\\"text-center\\\"\\r\\n                                          *ngIf='!modulePermission!==null && !modulePermission.roleModuleUpdateFlag'>\\r\\n                      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                        <div class=\\\"icon-text-center\\\" *ngIf=\\\"row.IsActive == 0 && row.AssociateUser==null\\\">\\r\\n                          <span><i class=\\\"fa fa-times text-danger icon_tick\\\"></i></span>\\r\\n                        </div>\\r\\n                        <div class=\\\"icon-text-center\\\" *ngIf=\\\"row.IsActive == 1 && row.AssociateUser==null\\\">\\r\\n                          <span><i class=\\\"fa fa-check text-success icon_tick\\\"></i></span>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n                    </ngx-datatable-column>\\r\\n\\r\\n                    <ngx-datatable-column name=\\\"Delete\\\" [sortable]=\\\"false\\\" headerClass=\\\"text-center\\\"\\r\\n                                          *ngIf='modulePermission!==null && modulePermission.roleModuleDeleteFlag'>\\r\\n                      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                        <div class=\\\"icon-text-center\\\" *ngIf=\\\"row.AssociateUser==null\\\">\\r\\n                          <a href=\\\"javascript:void(0);\\\" (click)=\\\"DeleteInsurance(row)\\\" class=\\\"btn-delete mx-1\\\"><i title=\\\"Click to delete.\\\" class=\\\"fa fa-trash\\\"></i></a>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n                    </ngx-datatable-column>\\r\\n\\r\\n                    <ngx-datatable-footer>\\r\\n                      <ng-template ngx-datatable-footer-template\\r\\n                                   let-rowCount=\\\"rowCount\\\"\\r\\n                                   let-pageSize=\\\"pageSize\\\"\\r\\n                                   let-selectedCount=\\\"selectedCount\\\"\\r\\n                                   let-currentPage=\\\"currentPage\\\"\\r\\n                                   let-offset=\\\"offset\\\"\\r\\n                                   let-isVisible=\\\"isVisible\\\">\\r\\n                        <div class=\\\"page-count\\\">\\r\\n                          {{rowCount}} total\\r\\n                        </div>\\r\\n                        <div>\\r\\n                          <div class=\\\"page-size-record\\\">\\r\\n                            <span style=\\\"text-align:right; width:80px;vertical-align: middle;\\\">\\r\\n                              <ng-select [searchable]=\\\"false\\\" [items]=\\\"lstPageSize\\\" appendTo=\\\"body\\\" [(ngModel)]='pageSizeValue' dropzone=\\\"fixed\\\" [clearable]=\\\"false\\\" (change)=\\\"onChange($event)\\\" draggable=\\\"false\\\" [closeOnSelect]=\\\"true\\\"\\r\\n                                         bindLabel=\\\"text\\\" bindValue=\\\"text\\\"></ng-select>\\r\\n                            </span>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <datatable-pager [pagerLeftArrowIcon]=\\\"'fa fa-angle-double-left'\\\"\\r\\n                                         [pagerRightArrowIcon]=\\\"'fa fa-angle-double-right'\\\"\\r\\n                                         [pagerPreviousIcon]=\\\"'fa fa-angle-left'\\\"\\r\\n                                         [pagerNextIcon]=\\\"'fa fa-angle-right'\\\"\\r\\n                                         [page]=\\\"pagedData.pager.currentPage+1\\\"\\r\\n                                         [size]=\\\"pageSizeValue\\\"\\r\\n                                         [count]=\\\"pagedData.pager.totalItems\\\"\\r\\n                                         [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\r\\n                                         (change)=\\\"setPage($event)\\\">\\r\\n                        </datatable-pager>\\r\\n                      </ng-template>\\r\\n                    </ngx-datatable-footer>\\r\\n                  </ngx-datatable>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit, HostListener } from '@angular/core';\r\n//import { AddEditInsurance, AddeditinsuranceService } from './addeditinsurance.service';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { CommonService, ModuleList } from '../shared/common.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { InsuranceService, AddEditInsurance, state } from './insurance.service';\r\n\r\n@Component({\r\n  selector: 'app-addeditinsurance',\r\n  templateUrl: './addeditinsurance.component.html'\r\n})\r\nexport class AddeditinsuranceComponent implements OnInit {\r\n    \r\n  insuranceModel: AddEditInsurance = new AddEditInsurance();\r\n  states: any;\r\n  loadSave = false;\r\n  addInsuranceForm: FormGroup;\r\n  modulePermission: ModuleList;\r\n  addOrUpdatePermission: boolean;\r\n  pageTitle: string;\r\n  lstStatus: any;\r\n  status: string;\r\n  associateUser: string;\r\n  private sub: Subscription;\r\n  constructor(private fb: FormBuilder,\r\n    private insuranceService: InsuranceService,\r\n    private commonService: CommonService,\r\n    private router: Router,\r\n    private toaster: ToastrService,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    this.commonService.getMasterItemsList(\"status\").subscribe((result: any) => {\r\n      this.lstStatus = this.commonService.masters;\r\n    })\r\n    const moduleCode = this.route.snapshot.data.moduleCode;\r\n    this.modulePermission = this.commonService.getPermission(moduleCode);\r\n  }\r\n  \r\n\r\n  private initForm() {\r\n    this.addInsuranceForm = this.fb.group({\r\n      insuranceId: [''],\r\n      name: ['', [Validators.required, Validators.maxLength(500)]],\r\n      agentName: ['', [Validators.required, Validators.maxLength(100)]],\r\n      agentEmail: ['', [Validators.required, Validators.email, Validators.maxLength(100)]],\r\n      phone: ['', Validators.required],\r\n      city: ['', [Validators.required, Validators.maxLength(100)]],\r\n      state: [null, Validators.required],\r\n      zipCode: ['', [Validators.required, Validators.maxLength(5)]],\r\n      county: ['', [Validators.required, Validators.maxLength(100)]],\r\n      address: ['', [Validators.required, Validators.maxLength(500)]],\r\n      statusId: [null, Validators.required],\r\n    });\r\n  }\r\n\r\n  get name() { return this.addInsuranceForm.get('name'); }\r\n  get county() { return this.addInsuranceForm.get('county'); }\r\n  get state() { return this.addInsuranceForm.get('state'); }\r\n  get agentEmail() { return this.addInsuranceForm.get('agentEmail'); }\r\n  get phone() { return this.addInsuranceForm.get('phone'); }\r\n  get zipCode() { return this.addInsuranceForm.get('zipCode'); }\r\n  get agentName() { return this.addInsuranceForm.get('agentName'); }\r\n  get city() { return this.addInsuranceForm.get('city'); }\r\n  get address() { return this.addInsuranceForm.get('address'); }\r\n  get statusId() { return this.addInsuranceForm.get('statusId'); }\r\n  get insuranceId() { return this.addInsuranceForm.get('insuranceId'); }\r\n\r\n\r\n  ngOnInit() {\r\n    this.addOrUpdatePermission = false;\r\n    const id = this.route.snapshot.paramMap.get('insuranceId');\r\n    if (id) {\r\n      this.loadSave = true;\r\n      this.fillForm(id);\r\n    }\r\n    else {\r\n      this.pageTitle = 'Add Insurance Company';\r\n      this.addOrUpdatePermission = this.modulePermission.roleModuleAddFlag;\r\n    }\r\n    this.initForm();\r\n    this.getState();\r\n   \r\n  }\r\n\r\n  fillForm(id) {\r\n    this.addOrUpdatePermission = this.modulePermission.roleModuleUpdateFlag;\r\n    this.insuranceService.getInsuranceDetail(id).subscribe((result: any) => {\r\n      if (result) {\r\n        this.loadSave = false;\r\n        this.pageTitle = 'Edit Insurance Company: ' + result.name;\r\n        \r\n        this.addInsuranceForm.patchValue({\r\n          insuranceId: result.insuranceId,\r\n          name: result.name,\r\n          address: result.address,\r\n          city: result.city,\r\n          state: result.state,\r\n          zipCode: result.zipCode,\r\n          phone: result.phone,\r\n          agentEmail: result.agentEmail,\r\n          agentName: result.agentName,\r\n          county: result.county,\r\n          statusId: result.statusId.toLowerCase()\r\n        });\r\n        if (result.associateUser != null) {\r\n          this.addInsuranceForm.controls.statusId.disable();\r\n          this.status = result.statusId;\r\n          this.associateUser = result.associateUser;\r\n        }\r\n      }\r\n    },\r\n\r\n      (error: any) => {\r\n        this.loadSave = false;\r\n      })\r\n  }\r\n  \r\n  getState() {\r\n    this.insuranceService.getStateList().subscribe((result: any) => {\r\n      var data = result;\r\n      this.states = data\r\n\r\n    })\r\n  }\r\n\r\n  addeditInsurance() {\r\n    if (this.addInsuranceForm.valid) {\r\n      this.loadSave = true;\r\n\r\n      if (this.addInsuranceForm.value.insuranceId == undefined) {\r\n        this.insuranceModel.insuranceId = null;\r\n        this.insuranceModel.statusId = this.addInsuranceForm.value.statusId;\r\n      }\r\n      else {\r\n        this.insuranceModel.insuranceId = this.addInsuranceForm.value.insuranceId;\r\n\r\n        if (this.associateUser == null) {\r\n          this.insuranceModel.statusId = this.addInsuranceForm.value.statusId;\r\n        } else {\r\n          this.insuranceModel.statusId = this.status;\r\n        }\r\n      }\r\n      this.insuranceModel.Name = this.addInsuranceForm.value.name;\r\n      this.insuranceModel.Address = this.addInsuranceForm.value.address;\r\n      this.insuranceModel.City = this.addInsuranceForm.value.city;\r\n      this.insuranceModel.State = this.addInsuranceForm.value.state;\r\n      this.insuranceModel.ZipCode = this.addInsuranceForm.value.zipCode;\r\n      this.insuranceModel.Phone = this.addInsuranceForm.value.phone;\r\n      this.insuranceModel.AgentEmail = this.addInsuranceForm.value.agentEmail;\r\n      this.insuranceModel.AgentName = this.addInsuranceForm.value.agentName;\r\n      this.insuranceModel.County = this.addInsuranceForm.value.county;\r\n\r\n      this.insuranceService.addeditInsurance(this.insuranceModel).subscribe((result: any) => {\r\n        if (result.statusCode == 200) {         \r\n          this.toaster.success(result.responseMessage);\r\n          this.router.navigateByUrl(\"/insurance\");\r\n          setTimeout(() => { this.loadSave = false; }, 3000);\r\n        }\r\n        else {\r\n          this.loadSave = false;\r\n          this.toaster.error(result.responseMessage);\r\n        }\r\n      }, error => {\r\n        this.loadSave = false;\r\n      });\r\n    }\r\n    else {\r\n      this.commonService.validateAllFormFields(this.addInsuranceForm);\r\n    }\r\n\r\n  }\r\n\r\n  Cancel() {\r\n    this.router.navigateByUrl(\"/insurance\");\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { InsurancelistComponent } from './insurancelist.component';\r\nimport { AddeditinsuranceComponent } from './addeditinsurance.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: InsurancelistComponent },\r\n  { path: 'addinsurance', component: AddeditinsuranceComponent },\r\n  { path: 'editinsurance/:insuranceId', component: AddeditinsuranceComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InsuranceRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { InsurancelistComponent } from './insurancelist.component';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { InsuranceRoutingModule } from './insurance-routing.module';\r\nimport { AddeditinsuranceComponent } from './addeditinsurance.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [InsurancelistComponent, AddeditinsuranceComponent],\r\n  imports: [\r\n    CommonModule,\r\n    InsuranceRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class insuranceModule { }\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Insurance, InsuranceService } from './insurance.service';\r\nimport { Master, CommonService, ModuleList } from '../shared/common.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ConfirmationDialogService } from '../shared/confirmation-dialog/confirmation-dialog.service';\r\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\r\n\r\n@Component({\r\n  selector: 'app-insurancelist',\r\n  templateUrl: './insurancelist.component.html'\r\n})\r\nexport class InsurancelistComponent implements OnInit {\r\n    @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;  \r\n  insuranceList: Insurance[];\r\n  lstUserType: Master[];\r\n  modulePermission: ModuleList;\r\n  loginuserid: any;\r\n  loading = false;\r\n  sortDir = 'asc';\r\n  sortColumn = 'CreatedOn';\r\n  pagedData: any = {\r\n    pager: {},\r\n    data: []\r\n  };\r\n  listFilter = '';\r\n  searchTxt = '';\r\n  lstPageSize: any\r\n  pageSizeValue: number;\r\n  loadSave: boolean = false;\r\n\r\n  constructor(private insuranceService: InsuranceService,\r\n    private commonService: CommonService, private router: Router,\r\n    private toaster: ToastrService, private dialogService: ConfirmationDialogService, private activeRoute: ActivatedRoute) {\r\n    this.commonService.getMasterItemsList(\"usertype\").subscribe((result: any) => {\r\n      this.lstUserType = this.commonService.masters;\r\n    })\r\n    const moduleCode = this.activeRoute.snapshot.data.moduleCode;\r\n    this.modulePermission = this.commonService.getPermission(moduleCode);\r\n    this.commonService.getLoggedInName.subscribe((userdetail: any) => {\r\n      this.loginuserid = userdetail.id;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.pageSizeValue = 10;\r\n    this.getPageSizes();\r\n    this.refresh();\r\n  }\r\n\r\n  updateFilter(event) {\r\n    this.searchTxt = event.target.value;\r\n    let keycode = (event.keyCode ? event.keyCode : event.which);\r\n    if (keycode === 13 || keycode === '13') {\r\n      this.search();\r\n    }\r\n  }\r\n\r\n  getPageSizes() {\r\n    this.commonService.getMasterItemsList(\"PageSize\").subscribe((res: any) => {\r\n      this.lstPageSize = this.commonService.masters;\r\n    })\r\n  }\r\n\r\n  onChange($event) {\r\n    this.loading = true;\r\n    this.insuranceService.getInsuranceList(this.listFilter, this.sortColumn, this.sortDir, 0, this.pageSizeValue, this.loginuserid).subscribe(response => {\r\n      this.pagedData = this.insuranceService.pagedData;\r\n      this.loading = false;\r\n    }, error => {\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n\r\n  search() {\r\n    this.loading = true;\r\n    this.insuranceService.getInsuranceList(this.listFilter, this.sortColumn, this.sortDir, 0, this.pageSizeValue, this.loginuserid).subscribe(response => {\r\n      this.pagedData = this.insuranceService.pagedData;\r\n      this.loading = false;\r\n    }, error => {\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this.table.sorts = [];\r\n    this.loading = true;\r\n    this.listFilter = '';\r\n    this.sortDir = 'asc';\r\n    this.sortColumn = 'CreatedOn';\r\n    this.pageSizeValue = 10;\r\n    this.insuranceService.getInsuranceList(this.listFilter, this.sortColumn, this.sortDir, 0, 10, this.loginuserid).subscribe(response => {\r\n      this.pagedData = this.insuranceService.pagedData;\r\n      this.loading = false;\r\n    }, error => {\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  setPage($event) {\r\n    this.loading = true;\r\n    this.insuranceService.getInsuranceList(this.listFilter, this.sortColumn, this.sortDir, $event.page - 1, this.pageSizeValue, this.loginuserid).subscribe(response => {\r\n      this.pagedData = this.insuranceService.pagedData;\r\n      this.loading = false;\r\n    }, error => {\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  onSort($event) {\r\n    const sort = $event.sorts[0]\r\n    this.sortDir = sort.dir;\r\n    this.sortColumn = sort.prop;\r\n    this.loading = true;\r\n    this.insuranceService.getInsuranceList(this.listFilter, this.sortColumn, this.sortDir, $event.page - 1, this.pageSizeValue, this.loginuserid).subscribe(response => {\r\n      this.pagedData = this.insuranceService.pagedData;\r\n      this.loading = false;\r\n    }, error => {\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  refresh() {\r\n    this.loading = true;\r\n    this.insuranceService.getInsuranceList(this.listFilter, this.sortColumn, this.sortDir, 0, this.pageSizeValue, this.loginuserid).subscribe(response => {\r\n\r\n      this.pagedData = this.insuranceService.pagedData;\r\n      this.loading = false;\r\n    }, error => {\r\n      this.loading = false;\r\n    })\r\n  }\r\n\r\n  DeleteInsurance(row: any) {\r\n    let message = `${row.Name} is associated with User. So not able to delete ${row.Name}.`;\r\n    if (row.AssociateUser == true) {\r\n      this.toaster.error(message);\r\n      this.loading = false;\r\n      return false;\r\n    }\r\n\r\n    message = `Are you sure you want to delete Insurance Company \"${row.Name}\"?`;\r\n    this.dialogService.confirm('Delete Insurance Company', message).subscribe(confirmed => {\r\n      if (confirmed) {\r\n        this.insuranceService.deleteInsurance(row.InsuranceId).subscribe((result: any) => {\r\n          if (result.statusCode == 200) {\r\n            this.toaster.success(result.responseMessage);\r\n            this.refresh();\r\n          }\r\n          else {\r\n            this.toaster.error(result.responseMessage);\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  disable(insurance) {\r\n    let message = `${insurance.Name} is associated with User. So not able to Disabled ${insurance.Name}.`;\r\n    if (insurance.AssociateUser == true) {\r\n      this.toaster.error(message);\r\n      this.loading = false;\r\n      return false;\r\n    }\r\n\r\n    message = `Are you sure you want to disable Insurance Company \"${insurance.Name}\"?`;\r\n    this.dialogService.confirm('Disable Insurance Company', message).subscribe(confirmed => {\r\n      if (confirmed) {\r\n        this.insuranceService.changeStatus(insurance.InsuranceId).subscribe(r => {\r\n          this.refresh();\r\n          this.toaster.success(`\"${insurance.Name}\" has been disabled  successfully`);\r\n        }, error => {\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  enable(insurance) {\r\n    const message = `Are you sure you want to enable Insurance Company  \"${insurance.Name}\"?`;\r\n    this.dialogService.confirm('Enable Insurance Company', message).subscribe(confirmed => {\r\n      if (confirmed) {\r\n        this.insuranceService.changeStatus(insurance.InsuranceId).subscribe(response => {\r\n          this.refresh();\r\n          this.toaster.success(`\"${insurance.Name}\" has been enabled  successfully`);\r\n        }, error => {\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}