{"version":3,"sources":["./src/app/views/companysetup/companysetup.component.html","./src/app/views/companysetup/CompanySetup-routing.module.ts","./src/app/views/companysetup/companysetup.component.scss","./src/app/views/companysetup/companysetup.component.ts","./src/app/views/companysetup/companysetup.module.ts","./src/app/views/companysetup/companysetupservice.service.ts"],"names":[],"mappings":"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","file":"views-companysetup-companysetup-module.js","sourcesContent":["export default \"<div class=\\\"header float-left w-100 mb-2\\\">\\r\\n  <h2 class=\\\"float-left pr-2\\\"><strong>Company Setup</strong></h2>\\r\\n  <div class=\\\"breadcrumb-wrapper\\\">\\r\\n    <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a routerLink=\\\"/dashboard\\\">Dashboard</a></li>\\r\\n      <li class=\\\"active\\\">{{pageTitle}}</li>\\r\\n    </ol>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"clearfix\\\"></div>\\r\\n<div class=\\\"panel\\\">\\r\\n  <div class=\\\"panel-content \\\">\\r\\n    <form [formGroup]=\\\"companysetupForm\\\" autocomplete=\\\"off\\\">\\r\\n      <div class=\\\"row mx-auto mb-2\\\">\\r\\n        <h3 class=\\\"form-heading ng-star-inserted\\\"><span>General Information</span></h3>\\r\\n        <div class=\\\"clearfix\\\"></div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n            <label>Company Name:<span class=\\\"text-danger\\\">*</span></label>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"companyName\\\" maxlength=\\\"100\\\" placeholder=\\\"Enter Company Name\\\"\\r\\n                     [ngClass]=\\\"{'is-invalid': (companyName.invalid && (companyName.dirty || companyName.touched) && (companyName.errors?.required || companyName.errors?.maxlength)) }\\\">\\r\\n              <small *ngIf=\\\"companyName.invalid && (companyName.dirty || companyName.touched) && companyName.errors?.required\\\"\\r\\n                     class=\\\"text-danger\\\">Company Name is required</small>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n            <label>Company Type:<span class=\\\"text-danger\\\">*</span></label>\\r\\n            <div class=\\\"form-group\\\" >\\r\\n              <ng-select [items]=\\\"lstCompantType\\\" placeholder=\\\"Select company Type\\\" formControlName=\\\"companyType\\\"\\r\\n                         bindValue=\\\"value\\\" bindLabel=\\\"text\\\"\\r\\n                         \\r\\n                         [ngClass]=\\\"{'is-invalid': (companyType.invalid && (companyType.dirty || companyType.touched) && companyType.errors?.required) }\\\"></ng-select>\\r\\n              <small *ngIf=\\\"companyType.invalid && (companyType.dirty || companyType.touched) && companyType.errors?.required\\\" class=\\\"text-danger\\\">Please select State</small>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n            <label>Phone:<span class=\\\"text-danger\\\">*</span></label>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <p-inputMask styleClass=\\\"form-control\\\" mask=\\\"(999) 999-9999\\\" formControlName=\\\"phone\\\" placeholder=\\\"(___) ___-____\\\" [ngClass]=\\\"{'is-invalid': (phone.invalid && (phone.dirty || phone.touched) && (phone.errors?.required || phone.errors?.pattern)) }\\\">\\r\\n              </p-inputMask>\\r\\n              <small *ngIf=\\\"phone.invalid && (phone.dirty || phone.touched) && phone.errors?.required\\\"\\r\\n                     class=\\\"text-danger\\\">Phone is required</small>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n            <label>Select company Logo Image:</label>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"col-md-9 col-lg-9 mb-0 p-0 float-left\\\">\\r\\n                <div class=\\\"custom-file w-100\\\">\\r\\n                  <input class=\\\"custom-file-input\\\" #file type=\\\"file\\\" name='file' #fileInput accept=\\\"image/x-png,image/gif,image/jpeg\\\" (change)=\\\"setFile($event)\\\" lang=\\\"es\\\">\\r\\n                  <label class=\\\"custom-file-label\\\">{{fileName}}</label>\\r\\n                </div>\\r\\n                <small>Valid image format is image/x-png, image/gif, image/jpeg and limit upto 5MB.</small>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-3 col-lg-3 mb-0 float-left pl-0 pl-md-3 pr-0\\\" *ngIf=\\\"imageLink!=''\\\">\\r\\n                <span class=\\\"uploadedimg\\\">\\r\\n                  <img src={{imageLink}} alt=\\\"img\\\" style=\\\"height:37px; width:40px; cursor:pointer\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"><a href=\\\"javascript:void(0);\\\" (click)=\\\"delImage(userID,fileUrl)\\\" *ngIf=\\\"imageLink.indexOf('NoImage')<0\\\"><i title=\\\"Delete\\\" class=\\\"fas fa-trash-alt\\\"></i></a>\\r\\n                </span>\\r\\n                <div id=\\\"myModal\\\" style=\\\" background: none !important;\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n                  <div class=\\\"modal-dialog\\\" style=\\\"height:450px!important;width:450px!important; \\\">\\r\\n                    <div class=\\\"\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"close\\\" style=\\\"color: #fff!important; \\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-content\\\">\\r\\n                      <div class=\\\"text-center\\\">\\r\\n                        <img src={{imageLink}} alt=\\\"img\\\" style=\\\"height:450px!important;width:450px!important; \\\" class=\\\"img-responsive\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n            <label>Select company Email Template Image:</label>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"col-md-9 col-lg-9 mb-0 p-0 float-left\\\">\\r\\n                <div class=\\\"custom-file w-100\\\">\\r\\n                  <input class=\\\"custom-file-input\\\" #file type=\\\"file\\\" name='file' #fileInputemail accept=\\\"image/x-png,image/gif,image/jpeg\\\" (change)=\\\"setFileemail($event)\\\" lang=\\\"es\\\">\\r\\n                  <label class=\\\"custom-file-label\\\">{{fileNameemail}}</label>\\r\\n                </div>\\r\\n                <small>Valid image format is image/x-png, image/gif, image/jpeg and limit upto 5MB.</small>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-3 col-lg-3 mb-0 float-left pl-0 pl-md-3 pr-0\\\" *ngIf=\\\"imageLink!=''\\\">\\r\\n                <span class=\\\"uploadedimg\\\">\\r\\n                  <img src={{imageLinkemail}} alt=\\\"img\\\" style=\\\"height:37px; width:40px; cursor:pointer\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal1\\\"><a href=\\\"javascript:void(0);\\\" (click)=\\\"delImageemail(userID,fileUrl)\\\" *ngIf=\\\"imageLink.indexOf('NoImage')<0\\\"><i title=\\\"Delete\\\" class=\\\"fas fa-trash-alt\\\"></i></a>\\r\\n                </span>\\r\\n                <div id=\\\"myModal1\\\" style=\\\" background: none !important;\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n                  <div class=\\\"modal-dialog\\\" style=\\\"height:450px!important;width:450px!important; \\\">\\r\\n                    <div class=\\\"\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"close\\\" style=\\\"color: #fff!important; \\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-content\\\">\\r\\n                      <div class=\\\"text-center\\\">\\r\\n                        <img src={{imageLinkemail}} alt=\\\"img\\\" style=\\\"height:450px!important;width:450px!important; \\\" class=\\\"img-responsive\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-12 col-sm-12 col-md-12 col-lg-4\\\">\\r\\n            <label>Refresh Interval (Minute):<span class=\\\"text-danger\\\">*</span></label>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"text\\\" pKeyFilter=\\\"int\\\" maxlength=\\\"3\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Refresh Interval Minute\\\" formControlName=\\\"referenceInterval\\\"\\r\\n                     [ngClass]=\\\"{'is-invalid':(referenceInterval.invalid && (referenceInterval.dirty || referenceInterval.touched) && (referenceInterval.errors?.required || referenceInterval.errors?.maxlength)) }\\\" />\\r\\n              <small *ngIf=\\\"referenceInterval.invalid && (referenceInterval.dirty || referenceInterval.touched) && referenceInterval.errors?.required\\\"\\r\\n                     class=\\\"text-danger\\\">Reference Interval required</small>\\r\\n              <small *ngIf=\\\"referenceInterval.invalid && (referenceInterval.dirty || referenceInterval.touched) && referenceInterval.errors?.min\\\"\\r\\n                     class=\\\"text-danger\\\">Reference Interval should be greater than 5</small>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-12 col-sm-12 col-md-12 col-lg-4\\\">\\r\\n            <label>Auto Save Interval (Minute):<span class=\\\"text-danger\\\">*</span></label>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"text\\\" pKeyFilter=\\\"int\\\" maxlength=\\\"2\\\"  min=\\\"2\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter Auto Save Interval Minute\\\" formControlName=\\\"autoSaveInterval\\\"\\r\\n                     [ngClass]=\\\"{'is-invalid':(autoSaveInterval.invalid && (autoSaveInterval.dirty || autoSaveInterval.touched) && (autoSaveInterval.errors?.required || autoSaveInterval.errors?.maxlength)) }\\\" />\\r\\n              <small *ngIf=\\\"autoSaveInterval.invalid && (autoSaveInterval.dirty || autoSaveInterval.touched) && autoSaveInterval.errors?.required\\\"\\r\\n                     class=\\\"text-danger\\\">Auto Save Interval required</small>\\r\\n                     <small *ngIf=\\\"autoSaveInterval.invalid && (autoSaveInterval.dirty || autoSaveInterval.touched) && autoSaveInterval.errors?.min\\\"\\r\\n                     class=\\\"text-danger\\\">Auto Save Interval should be greater than 2</small>                     \\r\\n                     \\r\\n              \\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n         \\r\\n        <h3 class=\\\"form-heading ng-star-inserted mt-4\\\"><span>Company Address</span></h3>\\r\\n        <div class=\\\"clearfix\\\"></div>\\r\\n        <div class=\\\"col-md-12 p-0\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n            <label>City:<span class=\\\"text-danger\\\">*</span></label>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter City\\\" formControlName=\\\"city\\\"\\r\\n                     [ngClass]=\\\"{'is-invalid': (city.invalid && (city.dirty || city.touched) && (city.errors?.required || city.errors?.maxlength)) }\\\">\\r\\n              <small *ngIf=\\\"city.invalid && (city.dirty || city.touched) && city.errors?.required\\\"\\r\\n                     class=\\\"text-danger\\\">City is required</small>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n            <label>County:<span class=\\\"text-danger\\\">*</span></label>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter County\\\"\\r\\n                     formControlName=\\\"country\\\"\\r\\n                     [ngClass]=\\\"{'is-invalid': (country.invalid && (country.dirty || country.touched) && (country.errors?.required || country.errors?.maxlength)) }\\\">\\r\\n              <small *ngIf=\\\"country.invalid && (country.dirty || country.touched) && country.errors?.required\\\"\\r\\n                     class=\\\"text-danger\\\">County is required</small>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n            <label>State:<span class=\\\"text-danger\\\">*</span></label>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <ng-select [items]=\\\"lstStates\\\" placeholder=\\\"Select State\\\" formControlName=\\\"state\\\"\\r\\n                         bindValue=\\\"value\\\" bindLabel=\\\"text\\\"\\r\\n                         [ngClass]=\\\"{'is-invalid': (state.invalid && (state.dirty || state.touched) && state.errors?.required) }\\\"></ng-select>\\r\\n              <small *ngIf=\\\"state.invalid && (state.dirty || state.touched) && state.errors?.required\\\" class=\\\"text-danger\\\">Please select State</small>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n            <label>Zip Code:<span class=\\\"text-danger\\\">*</span></label>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Zip Code\\\" formControlName=\\\"zipCode\\\"\\r\\n                     [ngClass]=\\\"{'is-invalid': (zipCode.invalid && (zipCode.dirty || zipCode.touched) && (zipCode.errors?.required || zipCode.errors?.maxlength)) }\\\">\\r\\n              <small *ngIf=\\\"zipCode.invalid && (zipCode.dirty || zipCode.touched) && zipCode.errors?.required\\\"\\r\\n                     class=\\\"text-danger\\\">Zip Code is required</small>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n            <label>Address:<span class=\\\"text-danger\\\">*</span></label>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <textarea type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" placeholder=\\\"Enter address\\\"\\r\\n                        [ngClass]=\\\"{'is-invalid': (address.invalid && (address.dirty || address.touched) && (address.errors?.required || address.errors?.maxlength)) }\\\"></textarea>\\r\\n              <small *ngIf=\\\"address.invalid && (address.dirty || address.touched) && address.errors?.required\\\"\\r\\n                     class=\\\"text-danger\\\">Address is required</small>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        </div>\\r\\n        <h3 class=\\\"form-heading ng-star-inserted mt-4\\\"><span>Email Settings</span></h3>\\r\\n        <div class=\\\"clearfix\\\"></div>\\r\\n        <div class=\\\"col-md-12 p-0\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n            <label>SMTP Host:<span class=\\\"text-danger\\\">*</span></label>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter SMTP Host (smtp.gmail.com)\\\" formControlName=\\\"smtpHost\\\"\\r\\n                     [ngClass]=\\\"{'is-invalid': (smtpHost.invalid && (smtpHost.dirty || smtpHost.touched) && (smtpHost.errors?.required || smtpHost.errors?.maxlength)) }\\\">\\r\\n              <small *ngIf=\\\"smtpHost.invalid && (smtpHost.dirty || smtpHost.touched) && smtpHost.errors?.required\\\"\\r\\n                     class=\\\"text-danger\\\">SMTP Host is required</small>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n            <label>SMTP Username:<span class=\\\"text-danger\\\">*</span></label>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter SMTP Usrname\\\"\\r\\n                     formControlName=\\\"smtpUsername\\\"\\r\\n                     [ngClass]=\\\"{'is-invalid': (smtpUsername.invalid && (smtpUsername.dirty || smtpUsername.touched) && (smtpUsername.errors?.required || smtpUsername.errors?.maxlength)) }\\\">\\r\\n              <small *ngIf=\\\"smtpUsername.invalid && (smtpUsername.dirty || smtpUsername.touched) && smtpUsername.errors?.required\\\"\\r\\n                     class=\\\"text-danger\\\">SMTP Username is required</small>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n            <label>SMTP Password:<span class=\\\"text-danger\\\">*</span></label>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter SMTP Password\\\" passwordToggle\\r\\n                     formControlName=\\\"smtpPassword\\\"\\r\\n                     [ngClass]=\\\"{'is-invalid': (smtpPassword.invalid && (smtpPassword.dirty || smtpPassword.touched) && (smtpPassword.errors?.required || smtpPassword.errors?.maxlength)) }\\\">\\r\\n              <small *ngIf=\\\"smtpPassword.invalid && (smtpPassword.dirty || smtpPassword.touched) && smtpPassword.errors?.required\\\"\\r\\n                     class=\\\"text-danger\\\">SMTP Password is required</small>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n            <label>SMTP Port:<span class=\\\"text-danger\\\">*</span></label>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter SMTP Port\\\" formControlName=\\\"smtpPort\\\"\\r\\n                     [ngClass]=\\\"{'is-invalid': (smtpPort.invalid && (smtpPort.dirty || smtpPort.touched) && (smtpPort.errors?.required || smtpPort.errors?.maxlength)) }\\\">\\r\\n              <small *ngIf=\\\"smtpPort.invalid && (smtpPort.dirty || smtpPort.touched) && smtpPort.errors?.required\\\"\\r\\n                     class=\\\"text-danger\\\">SMTP Port is required</small>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n            <label>From Email:<span class=\\\"text-danger\\\">*</span></label>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"fromEmail\\\" placeholder=\\\"Enter From Email\\\"\\r\\n                     [ngClass]=\\\"{'is-invalid': (fromEmail.invalid && (fromEmail.dirty || fromEmail.touched) && (fromEmail.errors?.required || fromEmail.errors?.maxlength)) }\\\">\\r\\n              <small *ngIf=\\\"fromEmail.invalid && (fromEmail.dirty || fromEmail.touched) && fromEmail.errors?.required\\\"\\r\\n                     class=\\\"text-danger\\\">From Email is required</small>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!--<div class=\\\"col-md-12 col-lg-4\\\">\\r\\n\\r\\n            <label>Enable TLS:</label>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"switch\\\">\\r\\n                <input type=\\\"checkbox\\\" formControlName=\\\"IsTLS\\\">\\r\\n                <span class=\\\"slider round\\\"><span>Yes</span></span>\\r\\n              </label>\\r\\n            </div>\\r\\n\\r\\n          </div>-->\\r\\n\\r\\n          <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n            <label>Enable SSL:</label>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"switch\\\">\\r\\n                <input type=\\\"checkbox\\\" formControlName=\\\"IsEnableSSL\\\">\\r\\n                <span class=\\\"slider round\\\"><span>Yes</span></span>\\r\\n              </label>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row mb-3\\\">\\r\\n        <div class=\\\"col-sm-12 col-md-12 text-right\\\">\\r\\n          <a *ngIf=\\\"isUpdate\\\" href=\\\"javascript:void(0);\\\" class=\\\"btn btn-success mr-2\\\" (click)=\\\"AddEditCompanySetup()\\\"><i class=\\\"fa fa-save\\\"></i> Submit</a>\\r\\n          <a href=\\\"javascript:void(0);\\\" class=\\\"btn btn-danger mr-2\\\" (click)=\\\"Cancel()\\\"><i class=\\\"fa fa-rotate-left\\\"></i> Reset</a>\\r\\n          <a href=\\\"javascript:void(0)\\\" (click)=\\\"checktestemail()\\\" class=\\\"btn btn-blue\\\" ><i class=\\\"fa fa-key\\\"></i> Check Test Email</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader\\\"></app-loader>\\r\\n</div>\\r\\n\\r\\n<div  class=\\\"modal fade show\\\" bsModal #changePassModal=\\\"bs-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"headerexampleModalLabel\\\">Test Email</h4>\\r\\n        <button #closeButton type=\\\"button\\\" (click)=\\\"closepopup()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"testEmailForm\\\">\\r\\n          <div class=\\\"row mt-3\\\">\\r\\n\\r\\n            <!--<div class=\\\"col-sm-6\\\">\\r\\n              <label>SMTP Host : </label>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" disabled formControlName=\\\"smtpHosttest\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <label>SMTP Port : </label>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" disabled formControlName=\\\"smtpPorttest\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <label>SMTP Username : </label>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" disabled formControlName=\\\"smtpUN\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <label>From Email : </label>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" disabled formControlName=\\\"fromEmailtest\\\">\\r\\n              </div>\\r\\n            </div>-->\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <label>Email:</label><span class=\\\"text-danger\\\">*</span>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"emailTo\\\"\\r\\n                       [ngClass]=\\\"{'is-invalid': (emailTo.invalid && (emailTo.dirty || emailTo.touched) && (emailTo.errors?.required || emailTo.errors?.email)) }\\\">\\r\\n                <small *ngIf=\\\"emailTo.invalid && (emailTo.dirty || emailTo.touched) && emailTo.errors?.required\\\"\\r\\n                       class=\\\"text-danger\\\">Email is required</small>\\r\\n\\r\\n                <small *ngIf=\\\"emailTo.invalid && (emailTo.dirty || emailTo.touched) && emailTo.errors?.email\\\"\\r\\n                       class=\\\"text-danger\\\">Please enter valid email address</small>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <label>Message:</label><span class=\\\"text-danger\\\">*</span>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"messageText\\\"\\r\\n                       [ngClass]=\\\"{'is-invalid': (messageText.invalid && (messageText.dirty || messageText.touched) && (messageText.errors?.required)) }\\\">\\r\\n                <small *ngIf=\\\"messageText.invalid && (messageText.dirty || messageText.touched) && messageText.errors?.required\\\"\\r\\n                       class=\\\"text-danger\\\">Message is required</small>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success form-btns\\\" (click)=\\\"sendEmail();\\\" ><i class=\\\"fa fa-save\\\"></i> Send Email</button>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-danger form-btns\\\"  (click)=\\\"closepopup()\\\" ><i class=\\\"fa fa-times text-white\\\"></i> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CompanysetupComponent } from './companysetup.component';\r\n\r\n\r\n\n\nconst routes: Routes = [\n  { path: '', component: CompanysetupComponent },\n  //{ path: 'addlead', component: LeadAddEditComponent },\n  //{ path: 'editlead/:id', component: LeadAddEditComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CompanySetupRoutingModule { }  \n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2NvbXBhbnlzZXR1cC9jb21wYW55c2V0dXAuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ModuleList, CommonService } from '../shared/common.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CompanysetupserviceService, CompanySetUpModel } from './companysetupservice.service';\r\nimport { retry } from 'rxjs/operators';\r\nimport { emailModel } from '../lead/leadlist.service';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\n@Component({      \r\n  selector: 'app-companysetup',\r\n  templateUrl: './companysetup.component.html',\r\n  styleUrls: ['./companysetup.component.scss']\r\n})\r\nexport class CompanysetupComponent implements OnInit {\r\n    @ViewChild('fileInput', { static: false }) fileInput;;\r\n  @ViewChild('fileInputemail', { static: false}) fileInputemail;\r\n  @ViewChild('changePassModal', { static: false}) changePassModal: ModalDirective;\r\n  companySetUpModel: CompanySetUpModel = new CompanySetUpModel();\r\n\r\n  states: any;\r\n  emailmodel: emailModel = new emailModel();\r\n  loadSave = false;\r\n  companysetupForm: FormGroup;\r\n  addOrUpdatePermission: boolean;\r\n  pageTitle: string;\r\n  lstStatus: any;\r\n  status: string;\r\n  associateUser: string;\r\n  lstCompantType: any;\r\n  fileName = \"Select\";\r\n  fileNameemail = \"Select\";\r\n  imageLink = '';\r\n  imageLinkemail = '';\r\n  editCompanyType: any;\r\n  lstStates: any;\r\n  emailSubject: any;\r\n  //modulePermission: ModuleList;\r\n  closeTestMailPopup: boolean = true;\r\n  isAdd: boolean = false;\r\n  isUpdate: boolean = false;\r\n  isDelete: boolean = false;\r\n  modulePermission: any[] = [];\r\n  // private sub: Subscription;\r\n  constructor(private fb: FormBuilder, private fbsentEmail: FormBuilder,\r\n    private companysetupserviceService: CompanysetupserviceService,\r\n    private commonService: CommonService,\r\n    private router: Router,\r\n    private toaster: ToastrService,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    //this.commonService.getMasterItemsList(\"status\").subscribe((result: any) => {\r\n    //  this.lstStatus = this.commonService.masters;\r\n    //})\r\n    const moduleCode = this.route.snapshot.data.moduleCode;\r\n    this.modulePermission = this.commonService.getPermissiondata(moduleCode);\r\n\r\n\r\n\r\n\r\n   \r\n    let update = this.modulePermission.find(m => m.privilegecode.toUpperCase() == 'COMPANYSETUPUPDATE');\r\n    if (update == undefined) {\r\n      update = \"null\";\r\n    } else {\r\n      this.isUpdate = true;\r\n    }\r\n\r\n    this.commonService.getMasterItemsList(\"CompanyType\").subscribe((result: any) => {\r\n    this.lstCompantType = this.commonService.masters;\r\n    })\r\n    //console.log(\"companyType\", this.lstCompantType);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.addOrUpdatePermission = this.isUpdate;\r\n    this.initForm();\r\n    this.pageTitle = 'Company SetUp';\r\n    this.getState();\r\n    this.fillForm();\r\n  }\r\n  Cancel() {\r\n\r\n  }\r\n  getState() {\r\n    this.companysetupserviceService.getStateList().subscribe((result: any) => {\r\n      this.lstStates = result\r\n      console.log(\"companyType\", this.lstStates);\r\n    })\r\n  }\r\n  getCompanyType() {\r\n    this.commonService.getMasterItemsList(\"solgen_usertype\").subscribe((result: any) => {\r\n    \r\n      this.lstCompantType = this.commonService.masters;\r\n    })\r\n\r\n  }\r\n\r\n\r\n  AddEditCompanySetup() {\r\n    if (this.companysetupForm.valid) {\r\n      this.loadSave = true;\r\n      //this.companySetUpModel.companyId = this.companysetupForm.value.companyId;\r\n      //this.companySetUpModel.companyName = this.companysetupForm.value.companyName;\r\n      //this.companySetUpModel.companyType = this.companysetupForm.value.companyType;\r\n      //this.companySetUpModel.phone = this.companysetupForm.value.phone;\r\n      //this.companySetUpModel.companyLogo = this.companysetupForm.value.companyLogo;\r\n      //this.companySetUpModel.city = this.companysetupForm.value.city;\r\n      //this.companySetUpModel.country = this.companysetupForm.value.country;\r\n      //this.companySetUpModel.zipCode = this.companysetupForm.value.zipCode;\r\n      //this.companySetUpModel.state = this.companysetupForm.value.state;\r\n\r\n      //this.companySetUpModel.address = this.companysetupForm.value.address;\r\n      //this.companySetUpModel.smtpHost = this.companysetupForm.value.smtpHost;\r\n      //this.companySetUpModel.smtpUsername = this.companysetupForm.value.smtpUsername;\r\n\r\n      //this.companySetUpModel.smtpPort = this.companysetupForm.value.smtpPort;\r\n      //this.companySetUpModel.fromEmail = this.companysetupForm.value.fromEmail;\r\n      //this.companySetUpModel.smtpPassword = this.companysetupForm.value.smtpPassword;\r\n\r\n      \r\n      const companySetupModel = this.prepareFormDataForDocument();\r\n      console.log(this.companysetupForm)  \r\n      //console.log('companySetupModelcompanySetupModel', companySetupModel);\r\n      this.companysetupserviceService.addOrUpdateCompanySetup(companySetupModel).subscribe((result: any) => {\r\n        if (result.statusCode == 200) {\r\n          this.toaster.success(result.responseMessage);\r\n          //this.fileInput.nativeElement.files;\r\n          this.fileInput.nativeElement.value = \"\";\r\n          this.fileInputemail.nativeElement.value = \"\";\r\n          console.log(\"fileInput\", this.fileInput.nativeElement.files);\r\n          //this.router.navigateByUrl(\"/dashboard\");\r\n          window.location.href = \"/companysetup\";\r\n          setTimeout(() => { this.loadSave = false; }, 3000);\r\n        }\r\n        else {\r\n          this.loadSave = false;\r\n          this.toaster.error(result.responseMessage);\r\n        }\r\n      }, error => {\r\n        this.loadSave = false;\r\n      });\r\n    }\r\n    else {\r\n      this.commonService.validateAllFormFields(this.companysetupForm);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  private prepareFormDataForDocument() {\r\n    const input = new FormData();\r\n    input.append('companyId', this.companyId.value);\r\n    input.append('companyName', this.companyName.value);\r\n    input.append('companyType', this.companyType.value == '' ? this.editCompanyType : this.companyType.value);\r\n    input.append('phone', this.phone.value);\r\n    input.append('companyLogo', this.companyLogo.value);\r\n    input.append('emailTemplateLogo', this.emailTemplateLogo.value);\r\n    input.append('referenceInterval', this.referenceInterval.value);\r\n    input.append('autoSaveInterval', this.autoSaveInterval.value);\r\n    input.append('city', this.city.value);\r\n    input.append('country', this.country.value);\r\n    input.append('zipCode', this.zipCode.value);\r\n    input.append('state', this.state.value);\r\n\r\n    input.append('address', this.address.value);\r\n    input.append('smtpHost', this.smtpHost.value);\r\n    input.append('smtpUsername', this.smtpUsername.value);\r\n    input.append('smtpPort', this.smtpPort.value);\r\n    input.append('fromEmail', this.fromEmail.value);\r\n    input.append('smtpPassword', this.smtpPassword.value);\r\n    input.append('documentType', this.documentType.value);\r\n    input.append('IsTLS', this.IsTLS.value);\r\n    input.append('IsEnableSSL', this.IsEnableSSL.value);\r\n\r\n    if (this.commonService.isUploadImageValid) {\r\n      if (this.companyLogo.value !== null) {\r\n        input.append('filename', this.companyLogo.value);\r\n\r\n      }\r\n      if (this.emailTemplateLogo.value !== null) {\r\n        input.append('filenameemail', this.emailTemplateLogo.value);\r\n      }\r\n\r\n    }\r\n\r\n\r\n    const fileBrowser = this.fileInput.nativeElement;\r\n\r\n    if (fileBrowser.files && fileBrowser.files[0]) {\r\n      input.append('file', fileBrowser.files[0]);\r\n    }\r\n    const fileBrowseremail = this.fileInputemail.nativeElement;\r\n\r\n    if (fileBrowseremail.files && fileBrowseremail.files[0]) {\r\n      input.append('fileemail', fileBrowseremail.files[0]);\r\n    }\r\n    return input;\r\n  }\r\n  fillForm() {\r\n    this.addOrUpdatePermission = this.isUpdate;\r\n    this.companysetupserviceService.getcompanySetupDetail().subscribe((result: any) => {      if (result) {\r\n        this.loadSave = false;\r\n        this.pageTitle = 'Company SetUp ';\r\n        if (result.companyType != null) {\r\n          this.companyType.disable();\r\n        }\r\n\r\n        this.testEmailForm.patchValue({  \r\n          smtpHosttest: result.smtpHost,\r\n          smtpPorttest: result.smtPport,\r\n          smtpUN: result.smtPusername,\r\n          fromEmailtest: result.fromEmail\r\n        })\r\n        //console.log('result.IsEnableSSL', result.IsEnableSSL); \r\n        this.companysetupForm.patchValue({ \r\n          companyId: result.companyId,\r\n          companyName: result.companyName,\r\n          companyType: result.companyType,\r\n          phone: result.phone,\r\n          companyLogo: result.companyLogo,\r\n          emailTemplateLogo: result.emailTemplateLogo,\r\n          referenceInterval: result.referenceInterval,\r\n          autoSaveInterval:result.autoSaveInterval,\r\n          city: result.city,\r\n          country: result.country,\r\n          zipCode: result.zipCode,\r\n          state: parseInt(result.state),\r\n          address: result.address,\r\n          smtpHost: result.smtpHost,\r\n          smtpUsername: result.smtPusername,\r\n          smtpPort: result.smtPport,\r\n          fromEmail: result.fromEmail,\r\n          smtpPassword: result.smtPpassword,\r\n          documentType: result.documentType,\r\n          IsTLS: result.isTLS,\r\n          IsEnableSSL: result.isEnableSSL\r\n        });\r\n        this.fileName = result.companyLogo;\r\n        this.fileNameemail = result.emailTemplateLogo;\r\n        this.imageLink = result.imageLink;\r\n        this.imageLinkemail = result.imagelinkemail;\r\n        this.editCompanyType = result.companyType;\r\n       \r\n        console.log('this.companysetupForm', this.companysetupForm);\r\n      }\r\n    },\r\n\r\n      (error: any) => {\r\n        this.loadSave = false;\r\n      })\r\n  }\r\n  private initForm() {\r\n    this.companysetupForm = this.fb.group({\r\n      companyId: [''],\r\n      companyName: ['', [Validators.required, Validators.maxLength(100)]],\r\n      companyType: [null, [Validators.required, Validators.maxLength(100)]],\r\n      phone: ['', Validators.required],\r\n      companyLogo: ['', Validators.required],\r\n      emailTemplateLogo: [''],      \r\n      referenceInterval: ['', [Validators.required, Validators.min(5),]],\r\n      autoSaveInterval: [2, [Validators.required, Validators.min(2)]],\r\n      city: ['', [Validators.required, Validators.maxLength(100)]],\r\n      country: ['', Validators.required],\r\n      zipCode: ['', [Validators.required, Validators.maxLength(5)]],\r\n      state: [null, [Validators.required, Validators.maxLength(100)]],\r\n      address: ['', [Validators.required, Validators.maxLength(500)]],\r\n      smtpHost: ['', Validators.required],\r\n      smtpPassword: ['', Validators.required],\r\n      smtpUsername: ['', Validators.required],\r\n      smtpPort: ['', Validators.required],\r\n      fromEmail: ['', [Validators.required, Validators.email]],\r\n      documentType: [''],\r\n      IsTLS: [true],\r\n      IsEnableSSL: [true]\r\n    });\r\n  }\r\n\r\n  setFile($event): void {\r\n    this.commonService.uploadImageFileValidator($event);\r\n    this.commonService.uploadDocumentSize(\"img\", $event.target.files[0].size, \"5MB\")\r\n    if (this.commonService.isFileValid) {\r\n      this.fileName = $event.target.files[0].name;\r\n      this.companyLogo.setValue($event.target.files[0].name);\r\n    }\r\n  }\r\n  setFileemail($event): void {\r\n    this.commonService.uploadImageFileValidator($event);\r\n    this.commonService.uploadDocumentSize(\"img\", $event.target.files[0].size, \"5MB\")\r\n    if (this.commonService.isFileValid) {\r\n      this.fileNameemail = $event.target.files[0].name;\r\n      this.emailTemplateLogo.setValue($event.target.files[0].name);\r\n    }\r\n  }\r\n  get companyId() { return this.companysetupForm.get('companyId'); }\r\n  get companyName() { return this.companysetupForm.get('companyName'); }\r\n  get companyType() { return this.companysetupForm.get('companyType'); }\r\n  get phone() { return this.companysetupForm.get('phone'); }\r\n  get companyLogo() { return this.companysetupForm.get('companyLogo'); }\r\n  get emailTemplateLogo() { return this.companysetupForm.get('emailTemplateLogo'); }\r\n  get referenceInterval() { return this.companysetupForm.get('referenceInterval'); }\r\n  get autoSaveInterval() { return this.companysetupForm.get('autoSaveInterval'); }\r\n  get city() { return this.companysetupForm.get('city'); }\r\n  get country() { return this.companysetupForm.get('country'); }\r\n  get state() { return this.companysetupForm.get('state'); }\r\n  get zipCode() { return this.companysetupForm.get('zipCode'); }\r\n  get address() { return this.companysetupForm.get('address'); }\r\n  get smtpHost() { return this.companysetupForm.get('smtpHost'); }\r\n  get smtpUsername() { return this.companysetupForm.get('smtpUsername'); }\r\n\r\n  get smtpPassword() { return this.companysetupForm.get('smtpPassword'); }\r\n  get smtpPort() { return this.companysetupForm.get('smtpPort'); }\r\n  get fromEmail() { return this.companysetupForm.get('fromEmail'); }\r\n  get documentType() { return this.companysetupForm.get('documentType'); }\r\n  get IsTLS() { return this.companysetupForm.get('IsTLS'); }\r\n  get IsEnableSSL() { return this.companysetupForm.get('IsEnableSSL'); }\r\n    \r\n\r\n  testEmailForm = this.fbsentEmail.group({\r\n    emailTo: ['', [Validators.required, Validators.email]],\r\n    messageText: ['', [Validators.required]],\r\n    smtpHosttest: [''],\r\n    smtpPorttest: [''],\r\n    smtpUN: [''],\r\n    fromEmailtest:['']\r\n\r\n\r\n  }\r\n  );\r\n  get emailTo() { return this.testEmailForm.get('emailTo'); }\r\n  get messageText() { return this.testEmailForm.get('messageText'); }\r\n  get smtpHosttest() { return this.testEmailForm.get('smtpHosttest'); }\r\n  get smtpPorttest() { return this.testEmailForm.get('smtpPorttest'); }\r\n  get smtpUN() { return this.testEmailForm.get('smtpUN'); }\r\n  get fromEmailtest() { return this.testEmailForm.get('fromEmailtest'); }\r\n  \r\n  \r\n  sendEmail() {\r\n    this.emailSubject = 'Testing Email';\r\n    this.loadSave = true;\r\n    if (this.testEmailForm.valid) {\r\n      console.log('this.smtpPassword.value', this.smtpPassword.value);\r\n      let model = {\r\n        ToEmail: this.emailTo.value,\r\n        Subject: this.emailSubject,\r\n        Message: this.messageText.value,\r\n        FromEmail: this.fromEmail.value,\r\n        SmtpHost: this.smtpHost.value,\r\n        SmtpPort: this.smtpPort.value,\r\n        Username: this.smtpUsername.value,\r\n        Password: this.smtpPassword.value,\r\n        IsEnableSSL: this.IsEnableSSL.value\r\n\r\n      };\r\n      console.log(model);\r\n      this.companysetupserviceService.SendEmail(model).subscribe((result: any) => {\r\n        console.log('SendEmailData', result);\r\n         \r\n          if (result.statusCode == 200) {\r\n            setTimeout(() => {\r\n              this.toaster.success(result.responseMessage);\r\n              this.loadSave = false;\r\n            }, 1000);\r\n            this.testEmailForm.reset();    \r\n            this.changePassModal.hide();\r\n          }\r\n          else {\r\n            this.toaster.error(result.responseMessage);\r\n            this.loadSave = false;\r\n            this.testEmailForm.reset();\r\n            this.changePassModal.hide();\r\n          }\r\n        }, error => {\r\n          this.loadSave = false;\r\n        });\r\n    }\r\n   \r\n    else {\r\n      this.commonService.validateAllFormFields(this.testEmailForm);\r\n    }\r\n  }\r\n  closepopup() {\r\n    this.changePassModal.hide();\r\n    this.testEmailForm.reset();\r\n  }\r\n  checktestemail() {\r\n    this.changePassModal.show();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n//import { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { CompanySetupRoutingModule } from './CompanySetup-routing.module';\r\nimport { CompanysetupComponent } from './companysetup.component';\r\nimport { NgxPasswordToggleModule } from 'ngx-password-toggle';\r\nimport { KeyFilterModule } from 'primeng/keyfilter';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n@NgModule({\r\n  declarations: [CompanysetupComponent],\r\n  imports: [  \r\n    CommonModule,\r\n    CompanySetupRoutingModule, FormsModule, ReactiveFormsModule, NgSelectModule, ModalModule, SharedModule, NgxPasswordToggleModule, KeyFilterModule\r\n  ]\r\n})\r\nexport class CompanysetupModule { }\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompanysetupserviceService {\n\n  public baseUri = `${environment.WebApiBaseUrl}`;\n  public insuranceUri = `${environment.WebApiBaseUrl}ManageInsurance`;\n  pagedData: any;\n  editPage: any;\n  constructor(private http: HttpClient) { }\n\n  getStateList() {\n    return this.http.get(this.baseUri + `ManageInsurance/GetStateList`);\n\n  }\n\n  getcompanySetupDetail() {\n    return this.http.get(this.baseUri + `ConfigurationSetting/getcompanySetupDetail`)\n  }\n  addOrUpdateCompanySetup(CompanySetUpModel: FormData) {\n   \n    return this.http.post(this.baseUri + `ConfigurationSetting/AddOrUpdateCompanySetup`, CompanySetUpModel);\n\n  }\n  SendEmail(model: any) {\n    return this.http.post(this.baseUri + `Bank/SendEmail`, model);\n     \n  }\n}\n\n\n\n\nexport class CompanySetUpModel {\n  companyId: string;\n  companyName: string;\n  companyType: string;\n  phone: string;\n  companyLogo: string;\n  emailTemplateLogo: string;\n  referenceInterval: string;\n  autoSaveInterval: number;\n  city: string;\n  country: string;\n  zipCode: string;\n  state: string;\n  address: string;\n  smtpHost: string;\n  smtpUsername: string;\n  smtpPort: string;\n  fromEmail: string;\n  smtpPassword: string;\n  IsTLS: boolean;\n  IsEnableSSL: boolean;\n  constructor() {\n    this.companyId = \"\";\n    this.companyName = \"\";\n    this.companyType = \"\";\n    this.phone = \"\";\n    this.companyLogo = \"\";\n    this.emailTemplateLogo = \"\";\n    this.referenceInterval = \"\";\n    this.autoSaveInterval =2;\n    this.city = \"\";\n    this.country = \"\";\n    this.zipCode = \"\";\n    this.state = \"\";\n    this.address = \"\";\n    this.smtpHost = \"\";\n    this.smtpUsername = \"\";\n\n    this.smtpPort = \"\";\n    this.fromEmail = \"\";\n    this.smtpPassword = \"\";\n    this.IsTLS = false;\n    this.IsEnableSSL = false;\n  }\n}\n"],"sourceRoot":"webpack:///"}