{"version":3,"sources":["./src/app/views/solgenreport/nestreport/nestreportlist.component.html","./src/app/views/solgenreport/serviceappointmentreport/serviceappointmentreportlist.component.html","./src/app/views/solgenreport/nestreport/nestreportlist.component.scss","./src/app/views/solgenreport/nestreport/nestreportlist.component.ts","./src/app/views/solgenreport/nestreport/nestreportservice.service.ts","./src/app/views/solgenreport/serviceappointmentreport/serviceappointmentreportlist.component.scss","./src/app/views/solgenreport/serviceappointmentreport/serviceappointmentreportlist.component.ts","./src/app/views/solgenreport/serviceappointmentreport/serviceappointmentreportservice.service.ts","./src/app/views/solgenreport/solgenreport-routing.module.ts","./src/app/views/solgenreport/solgenreport.module.ts"],"names":[],"mappings":"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","file":"views-solgenreport-solgenreport-module.js","sourcesContent":["export default \"<div class=\\\"header float-left w-100 mb-2\\\">\\n  <h2 class=\\\"float-left pr-2\\\"><strong>Manage Product Required Report</strong></h2>\\n  <div class=\\\"breadcrumb-wrapper\\\">\\n    <ol class=\\\"breadcrumb\\\">\\n      <li>\\n        <a routerLink=\\\"/dashboard\\\">Dashboard</a>\\n      </li>\\n      <li class=\\\"active\\\">Manage Product Required</li>\\n    </ol>\\n  </div>\\n</div>\\n<div class=\\\"clearfix\\\"></div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12 portlets\\\">\\n    <div class=\\\"panel\\\" [ngClass]=\\\"{'disabled':loadSave}\\\">\\n      <div class=\\\"panel-header border-bottom pb-3 btn-iconres\\\">\\n        <div class=\\\"row mt-2\\\">\\n          <div class=\\\"col-md-12 col-xl-12\\\">\\n            <div class=\\\"row searchfield\\\">\\n              <div class=\\\"col-lg-12\\\">\\n                <div class=\\\"row report-calendar\\\">\\n                  <div class=\\\"col-lg-3 float-left mb-lg-0 mb-2\\\">\\n                    <!--<input class=\\\"form-control input-sm\\\" type=\\\"text\\\" [(ngModel)]='listFilter' placeholder=\\\"Search By Product Name\\\" (keyup)='searchProductName($event)'>-->\\n                    <ng-select #Product [items]=\\\"lstProductName\\\"\\n                               placeholder=\\\"Select Product Name\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\"\\n                               [closeOnSelect]=\\\"true\\\" [multiple]=\\\"true\\\" [(ngModel)]=\\\"listFilter\\\"\\n                               (clear)=\\\"restProductddl()\\\">\\n                    </ng-select>\\n                  </div>\\n                  <div class=\\\"col-lg-3 float-left mb-lg-0 mb-2 pl-3 pl-lg-0\\\">\\n                    <ng-select #userTypeSelect [items]=\\\"lstAccountList\\\"\\n                               placeholder=\\\"Select Accounts\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\"\\n                               [closeOnSelect]=\\\"true\\\" [(ngModel)]=\\\"accountId\\\"\\n                               (scrollToEnd)=\\\"onScrollToEnd(lstAccountList,'NestReposrt_Account')\\\" [virtualScroll]=\\\"true\\\" (keyup)=\\\"onKey($event,lstAccountList,'NestReposrt_Account')\\\"\\n                               (clear)=\\\"restAccountddl()\\\">\\n                    </ng-select>\\n                  </div>\\n                  <div class=\\\"col-lg-3 float-left mb-lg-0 mb-2 pl-3 pl-lg-0\\\">\\n                    <ng-select #AccountStatusSelect [items]=\\\"lstAccountStatus\\\"\\n                               placeholder=\\\"Select Account Status\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\"\\n                               [closeOnSelect]=\\\"true\\\" [(ngModel)]=\\\"accountStatusId\\\"\\n                               (clear)=\\\"restAccountStatusddl()\\\">\\n                    </ng-select>\\n                  </div>\\n                  <div class=\\\"col-lg-3 float-left mb-lg-0 mb-2 pl-3 pl-lg-0\\\">\\n                    <ng-select #SetStateClear [items]=\\\"lstState\\\"\\n                               placeholder=\\\"Select State\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\"\\n                               [closeOnSelect]=\\\"true\\\" [(ngModel)]=\\\"stateId\\\"\\n                               (clear)=\\\"restStateddl()\\\">\\n                    </ng-select>\\n                  </div>\\n                  <div class=\\\"col-lg-3 float-left mb-lg-0 mb-2 pl-3\\\">\\n                    <ng-select #Stage [items]=\\\"lstCurrentStage\\\"\\n                               placeholder=\\\"Select Stage\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\"\\n                               [closeOnSelect]=\\\"true\\\" [multiple]=\\\"true\\\" [(ngModel)]=\\\"stageId\\\"\\n                               (clear)=\\\"restStageddl()\\\">\\n                    </ng-select>\\n                  </div>\\n                  <div class=\\\"col-lg-3 float-left mb-lg-0 mb-2 pl-lg-0\\\">\\n                    <div class=\\\"form-group mb-0\\\">\\n                      <p-calendar inputStyleClass=\\\"form-control start-date\\\" placeholder=\\\"Customer Signed From\\\"\\n                                  [(ngModel)]=\\\"From\\\" [maxDate]=\\\"To\\\" [readonlyInput]=\\\"true\\\" showButtonBar=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"2000:2030\\\"></p-calendar>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3 float-left mb-lg-0 mb-2 pl-3 pl-lg-0\\\">\\n                    <div class=\\\"form-group mb-0\\\">\\n                      <p-calendar inputStyleClass=\\\"form-control start-date\\\" placeholder=\\\"Customer Signed To\\\" [(ngModel)]=\\\"To\\\" [minDate]=\\\"From\\\" [readonlyInput]=\\\"true\\\" showButtonBar=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"2000:2030\\\"></p-calendar>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3 float-left mb-lg-0 mb-2 pl-3 pl-lg-0\\\">\\n                    <div class=\\\"form-group  mb-0\\\">\\n                      <p-calendar inputStyleClass=\\\"form-control start-date\\\" placeholder=\\\"Deliver Date From\\\"\\n                                  [(ngModel)]=\\\"DeliverDateFrom\\\" [minDate]=\\\"DeliverDateFrom\\\" [readonlyInput]=\\\"true\\\" showButtonBar=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"2000:2030\\\"></p-calendar>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3 float-left mb-lg-0 mb-2 pl-3\\\">\\n                    <div class=\\\"form-group  mb-0\\\">\\n                      <p-calendar inputStyleClass=\\\"form-control start-date\\\" placeholder=\\\"Deliver Date To\\\" [(ngModel)]=\\\"DeliverDateTo\\\" [minDate]=\\\"DeliverDateFrom\\\" [readonlyInput]=\\\"true\\\" showButtonBar=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"2000:2030\\\"></p-calendar>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3 float-left mb-lg-0 mb-2 pl-3 pl-lg-0\\\">\\n                    <div class=\\\"form-group  mb-0\\\">\\n                      <ng-select #Delivered [items]=\\\"lstDelivered\\\"\\n                                 placeholder=\\\"Select Deliver Or Not\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\"\\n                                 [closeOnSelect]=\\\"true\\\" [(ngModel)]=\\\"deliveryId\\\"\\n                                 (clear)=\\\"restDeliveredddl()\\\">\\n                      </ng-select>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3 float-left mb-lg-0 mb-2 pl-3 pl-lg-0\\\">\\n                    <div class=\\\"form-group  mb-0\\\">\\n                      <a class=\\\"btn btn-success form-btns mr-1\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"SearchNestReport()\\\" tooltip=\\\"Search\\\"><span><i class=\\\"fa fa-search pr-2\\\"></i> Search</span></a>\\n                      <a class=\\\"btn btn-danger form-btns mr-1\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"reset()\\\" tooltip=\\\"Reset\\\"><span><i class=\\\"fa fa-refresh pr-2\\\"></i> Reset</span></a>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-12 mt-4 mb-2\\\">\\n        <div class=\\\"w-100 mt-2 mb-0\\\" *ngIf=\\\"pagedData.data.length>0\\\">\\n          <span class=\\\"float-right\\\">\\n            <!--<small class=\\\"pt-1 pr-1 h6 font-weight-normal\\\">Download As: </small>-->\\n            <a href=\\\"javascript:void(0);\\\" *ngIf=\\\"!isDisplay\\\" (click)=\\\"ExportTOExcel()\\\" title=\\\"Download Excel\\\" class=\\\" btn btn-success mr-1\\\" style=\\\"background:#1D6F42; border-color:#1D6F42;\\\" tooltip=\\\"Download Excel\\\"><i class=\\\"fa fa-file-excel-o\\\"></i></a>\\n            <a href=\\\"javascript:void(0);\\\" *ngIf=\\\"!isDisplay\\\" (click)=\\\"generatePdf()\\\" title=\\\"Download Pdf\\\" class=\\\" btn btn-danger mr-1\\\" style=\\\"background:#c0392b; border-color:#c0392b;\\\" tooltip=\\\"Download Pdf\\\"><i class=\\\"fa fa-file-pdf-o\\\"></i> </a>\\n\\n            <a href=\\\"javascript:void(0);\\\" *ngIf=\\\"!isGraphView\\\" (click)=\\\"generatePdf1()\\\" title=\\\"Graph View\\\" class=\\\" btn btn-info text-white\\\" tooltip=\\\"Graph View\\\"><i class=\\\"fa fa-bar-chart\\\"></i></a>\\n            <a href=\\\"javascript:void(0);\\\" *ngIf=\\\"isGraphView\\\" (click)=\\\"generatePdf1()\\\" title=\\\"List View\\\" class=\\\" btn btn-info text-white\\\" tooltip=\\\"List View\\\"><i class=\\\"fa fa-list\\\"></i></a>\\n          </span>\\n        </div>\\n      </div>\\n      <div class=\\\"clearfix\\\"></div>\\n      <div class=\\\"panel-content px-3 pagination2 table-responsive no-padding\\\" *ngIf=\\\"!isDisplay\\\">\\n        <ngx-datatable class=\\\"bootstrap custom-medium-table-width\\\"\\n                       [rows]=\\\"pagedData.data\\\"\\n                       [columnMode]=\\\"'force'\\\"\\n                       [headerHeight]=\\\"40\\\"\\n                       [footerHeight]=\\\"40\\\"\\n                       [rowHeight]=\\\"'auto'\\\"\\n                       [externalPaging]=\\\"true\\\"\\n                       [externalSorting]=\\\"true\\\"\\n                       [loadingIndicator]=\\\"loadSave\\\"\\n                       [count]=\\\"pagedData.pager.totalItems\\\"\\n                       [offset]=\\\"pagedData.pager.currentPage\\\"\\n                       [limit]=\\\"pagedData.pager.pageSize\\\"\\n                       (page)='setPage($event)'\\n                       (sort)=\\\"onSort($event)\\\">\\n          <ngx-datatable-column name=\\\"State Name\\\" prop=\\\"stateName\\\" [sortable]=\\\"true\\\" headerClass=\\\"thead-dark\\\"></ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"Account Name\\\" prop=\\\"AccountName\\\" [sortable]=\\\"true\\\" headerClass=\\\"thead-dark\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              <div title=\\\"{{row.AccountName}}\\\">\\n                <a [routerLink]=\\\"['/accountslist/view',row.id]\\\">{{row.AccountName| truncate}}</a>&nbsp;\\n              </div>\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"Account Status\\\" prop=\\\"accountStatus\\\" [sortable]=\\\"true\\\" headerClass=\\\"thead-dark\\\">\\n          </ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"Current Stage\\\" prop=\\\"currentStage\\\" [sortable]=\\\"true\\\" headerClass=\\\"thead-dark\\\"></ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"Customer Signed Date\\\" prop=\\\"CustomerSignedDate\\\" [sortable]=\\\"true\\\" headerClass=\\\"thead-dark\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              {{row.CustomerSignedDate |DateTimeToLocal}}\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"NTP Date\\\" prop=\\\"NTPDate\\\" [sortable]=\\\"true\\\" headerClass=\\\"thead-dark\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              {{row.NTPDate |DateTimeToLocal}}\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"Installation Date\\\" prop=\\\"Installation_Date\\\" [sortable]=\\\"true\\\" headerClass=\\\"thead-dark\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              {{row.Installation_Date |DateTimeToLocal}}\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"PTO Date\\\" prop=\\\"PTODate\\\" [sortable]=\\\"true\\\" headerClass=\\\"thead-dark\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              {{row.PTODate |DateTimeToLocal}}\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"Date Delivered\\\" prop=\\\"DateDelivered\\\" [minWidth]=\\\"190\\\" [sortable]=\\\"true\\\" headerClass=\\\"thead-dark\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              <div title=\\\"{{row.DateDelivered | DateTimeToLocal}}\\\" *ngIf=\\\"row.DateDelivered!=null\\\" style=\\\"min-width:125px\\\">\\n                <span class=\\\"d-inline-block pr-2 float-left\\\">{{row.DateDelivered | DateTimeToLocal}}</span>\\n                <a class=\\\"actions-onclick view-list d-inline-block float-right p-0 pl-2\\\" href=\\\"javascript:;\\\" tooltip=\\\"Assign Delivery Date \\\" (click)=\\\"AssignDeliveryDate(row)\\\" title=\\\"Assign Delivery Date\\\"><i class=\\\"fa fa-pencil text-success mr-2\\\"></i> </a>\\n              </div>\\n              <div *ngIf=\\\"row.DateDelivered==null\\\" style=\\\"min-width:125px\\\">\\n                <span class=\\\"d-inline-block pr-2 float-left\\\">{{'--'}}</span>\\n                <a class=\\\"actions-onclick view-list d-inline-block float-right p-0 pl-2\\\" href=\\\"javascript:;\\\" tooltip=\\\"Assign Delivery Date \\\" (click)=\\\"AssignDeliveryDate(row)\\\" title=\\\"Assign Delivery Date\\\">\\n\\n                  <i class=\\\"fa fa-pencil text-success mr-2\\\"></i>\\n                </a>\\n              </div>\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <!--product/ viewproducts-->\\n          <ngx-datatable-column name=\\\"Product Name\\\" prop=\\\"ProductName\\\" [sortable]=\\\"true\\\" headerClass=\\\"thead-dark\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              <div title=\\\"{{row.ProductName\\n}}\\\">\\n                <a [routerLink]=\\\"['/product/viewproducts',row.ProductId]\\\">{{row.ProductName| truncate}}</a>&nbsp;\\n              </div>\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"Product Required ID\\\" prop=\\\"ProductRequiredNumber\\\" [sortable]=\\\"true\\\" headerClass=\\\"thead-dark\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              <div title=\\\"{{row.ProductRequiredNumber}}\\\">\\n                <a [routerLink]=\\\"['/manageproductrequired/viewProductRequired',row.productRequiredId]\\\">\\n                  {{row.ProductRequiredNumber| truncate}}\\n                </a>&nbsp;\\n              </div>\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <!--<ngx-datatable-column name=\\\"Action\\\" [sortable]=\\\"false\\\" [maxWidth]=\\\"200\\\" headerClass=\\\"text-center\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template headerClass=\\\"text-center\\\">\\n          <span class=\\\"actions rw_act\\\">\\n          <i class=\\\"fa fa-ellipsis-h action_icon\\\" [attr.attribute-id]=\\\"row.uniqId\\\" aria-hidden=\\\"true\\\"></i>\\n          <span class=\\\"action-list-box spn{{row.uniqId}}\\\">\\n          <span class=\\\"list-actions fsm-list\\\" id=\\\"action-list\\\" style=\\\"width:210px;\\\">\\n          <a class=\\\"actions-onclick view-list\\\" (click)=\\\"AssignDeliveryDate(row)\\\" title=\\\"Assign Delivery Date\\\"><i class=\\\"fa fa-pencil text-success mr-2\\\"></i></a>\\n          </span>\\n          </span>\\n          </span>\\n          </ng-template>\\n          </ngx-datatable-column>-->\\n          <!--<ngx-datatable-footer>\\n          <ng-template class=\\\"selected-count\\\" ngx-datatable-footer-template\\n          let-rowCount=\\\"rowCount\\\"\\n          let-pageSize=\\\"pageSize\\\"\\n          let-selectedCount=\\\"selectedCount\\\"\\n          let-currentPage=\\\"curPage\\\"\\n          let-offset=\\\"offset\\\"\\n          let-isVisible=\\\"isVisible\\\">\\n          <div>\\n          <div style=\\\"color:black; margin-right:10px;\\\" class=\\\"page-size-record\\\" *ngIf='(rowCount  > 0)'>\\n          <span style=\\\"text-align:right; width:80px;vertical-align: middle;\\\">\\n          <ng-select [searchable]=\\\"false\\\" [items]=\\\"lstPageSize\\\" appendTo=\\\"body\\\" [(ngModel)]='pageSizeValue' dropzone=\\\"fixed\\\" [clearable]=\\\"false\\\" (change)=\\\"onChange($event)\\\" draggable=\\\"false\\\" [closeOnSelect]=\\\"true\\\"\\n          bindLabel=\\\"text\\\" bindValue=\\\"text\\\"></ng-select>\\n          </span>\\n          </div>\\n          </div>\\n          <div class=\\\"page-count\\\" *ngIf='(rowCount  > 0)'>\\n          {{commonService.PageString(pagedData.pager.currentPage+1,pageSizeValue,rowCount)}}\\n          </div>\\n          <datatable-pager [pagerLeftArrowIcon]=\\\"'fa fa-angle-left'\\\"\\n          [pagerRightArrowIcon]=\\\"'fa fa-angle-right'\\\"\\n          [pagerPreviousIcon]=\\\"'fa fa-angle-double-left'\\\"\\n          [pagerNextIcon]=\\\"'fa fa-angle-double-right'\\\"\\n          [page]=\\\"pagedData.pager.currentPage+1\\\"\\n          [size]=\\\"pageSizeValue\\\"\\n          [count]=\\\"pagedData.pager.totalItems\\\"\\n          [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\n          (change)=\\\"setPage($event)\\\">\\n          </datatable-pager>\\n\\n          </ng-template>\\n          </ngx-datatable-footer>-->\\n          <ngx-datatable-footer>\\n            <ng-template ngx-datatable-footer-template\\n                         let-rowCount=\\\"rowCount\\\"\\n                         let-pageSize=\\\"pageSize\\\"\\n                         let-selectedCount=\\\"selectedCount\\\"\\n                         let-currentPage=\\\"curPage\\\"\\n                         let-offset=\\\"offset\\\"\\n                         let-isVisible=\\\"isVisible\\\">\\n              <div class=\\\"responsive-paging d-lg-flex w-100 flex-nowrap my-3\\\">\\n                <div>\\n                  <div style=\\\"color:black; margin-right:10px;\\\" class=\\\"page-size-record\\\" *ngIf='(rowCount  > 0)'>\\n                    <span style=\\\"text-align:right; width:80px;vertical-align: middle;\\\">\\n                      <ng-select [searchable]=\\\"false\\\" [items]=\\\"lstPageSize\\\" appendTo=\\\"body\\\" [(ngModel)]='pageSizeValue' dropzone=\\\"fixed\\\" [clearable]=\\\"false\\\" (change)=\\\"onChange($event)\\\" draggable=\\\"false\\\" [closeOnSelect]=\\\"true\\\"\\n                                 bindLabel=\\\"text\\\" bindValue=\\\"text\\\"></ng-select>\\n                    </span>\\n                  </div>\\n                </div>\\n                <div class=\\\"page-count selected-count\\\" *ngIf='(rowCount  > 0)'>\\n                  {{commonService.PageString(curPage,pageSizeValue,rowCount)}}\\n                </div>\\n                <datatable-pager [pagerLeftArrowIcon]=\\\"'fa fa-angle-left'\\\"\\n                                 [pagerRightArrowIcon]=\\\"'fa fa-angle-right'\\\"\\n                                 [pagerPreviousIcon]=\\\"'fa fa-angle-double-left'\\\"\\n                                 [pagerNextIcon]=\\\"'fa fa-angle-double-right'\\\"\\n                                 [page]=\\\"pagedData.pager.currentPage+1\\\"\\n                                 [size]=\\\"pageSizeValue\\\"\\n                                 [count]=\\\"pagedData.pager.totalItems\\\"\\n                                 [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\n                                 (change)=\\\"setPage($event)\\\">\\n                </datatable-pager>\\n              </div>\\n            </ng-template>\\n          </ngx-datatable-footer>\\n        </ngx-datatable>\\n      </div>\\n      <!--<div class=\\\"col-12\\\" *ngIf=\\\"isDisplay\\\">\\n      <p-chart [data]=\\\"graphWidgetData\\\" [options]=\\\"graphOption\\\"></p-chart>\\n      </div>-->\\n      <div class=\\\"col-lg-12 mb-4\\\" *ngIf=\\\"isDisplay\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\n            <div class=\\\"bg-white p-3 border mt-3\\\">\\n              <p-chart type=\\\"horizontalBar\\\" [data]=\\\"graphWidgetData\\\" [options]=\\\"graphOption\\\"></p-chart>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loading\\\" class=\\\"loader\\\"></app-loader>\\n  </div>\\n</div>\\n<div bsModal #attendancemodel=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-lg modal-info \\\" [ngClass]=\\\"{'disabled':loadSave}\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Assigned Delivery Date</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeattendancepopup()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\" style=\\\" margin-bottom:10px; max-height:1000px; overflow:visible;\\\">\\n        <form [formGroup]=\\\"addForm\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <!--<h4>if would like Enerflo to automatically find the best apt time based on availalility.</h4>-->\\n              <div class=\\\"row col-12\\\">\\n                <div class=\\\"col-12 col-md-12 col-lg-12\\\">\\n                  <label>Select Delivery Date:<span class=\\\"text-danger\\\">*</span></label>\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"form-group datepickerinpop\\\">\\n                      <p-calendar #myStartCalendar [showIcon]=\\\"true\\\" class=\\\"calendarwidth\\\" hideOnDateTimeSelect=\\\"true\\\"\\n                                  inputStyleClass=\\\"form-control start-date \\\" formControlName=\\\"deliveryDate\\\" [hourFormat]=\\\"(timeFormat==24)?'24':'12'\\\"\\n                                  [showTime]=\\\"false\\\" inputId=\\\"timeonly\\\" dateFormat=\\\"mm/dd/yy\\\" showButtonBar=\\\"false\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"1919:2030\\\"\\n                                  [ngClass]=\\\"{'is-invalid': (deliveryDate.invalid && (deliveryDate.dirty || deliveryDate.touched) && deliveryDate.errors?.required) }\\\">\\n                        <p-footer>\\n                          <button pButton type=\\\"button\\\" label=\\\"Close\\\" style=\\\"color: white;background-color: #dc3545;\\\" (click)=\\\"myStartCalendar.overlayVisible = false\\\"></button>\\n                        </p-footer>\\n                      </p-calendar>\\n\\n                      <!--<p-calendar class=\\\"calendarwidth\\\" inputStyleClass=\\\"form-control start-date\\\" formControlName=\\\"deliveryDate\\\" placeholder=\\\"Select Date\\\" [showIcon]=\\\"true\\\" [showTime]=\\\"false\\\" dateFormat=\\\"mm/dd/yy\\\" showButtonBar=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"1919:2030\\\"\\n                        [ngClass]=\\\"{'is-invalid': (deliveryDate.invalid && (deliveryDate.dirty || deliveryDate.touched) && deliveryDate.errors?.required) }\\\"></p-calendar>-->\\n                      <small *ngIf=\\\"deliveryDate.invalid && (deliveryDate.dirty || deliveryDate.touched) && deliveryDate.errors?.required\\\"\\n                             style=\\\"color:red;\\\">Please select Date</small>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <a class=\\\"btn btn-success text-white\\\" (click)=\\\"Save()\\\"><i class=\\\"fa fa-save\\\"></i> Submit</a>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-danger text-white\\\" (click)=\\\"closeattendancepopup()\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><i class=\\\"fa fa-times text-white\\\"></i> Cancel</button>\\n      </div>\\n    </div>\\n  </div>\\n  <!--<app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader-popup\\\"></app-loader>-->\\n</div>\\n\"","export default \"<div class=\\\"header float-left w-100 mb-2\\\">\\n  <h2 class=\\\"float-left pr-2\\\"><strong>Service Appointment Report</strong></h2>\\n  <div class=\\\"breadcrumb-wrapper\\\">\\n    <ol class=\\\"breadcrumb\\\">\\n      <li>\\n        <a routerLink=\\\"/dashboard\\\">Dashboard</a>\\n      </li>\\n      <li class=\\\"active\\\">Service Appointment Report</li>\\n    </ol>\\n  </div>\\n</div>\\n<div class=\\\"clearfix\\\"></div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12 portlets\\\">\\n    <div class=\\\"panel\\\" [ngClass]=\\\"{'disabled':loadSave}\\\">\\n      <div class=\\\"panel-header border-bottom pb-3 btn-iconres\\\">\\n        <div class=\\\"row mt-2\\\">\\n          <div class=\\\"col-md-12 col-xl-12\\\">\\n            <div class=\\\"row searchfield\\\">\\n              <div class=\\\"col-lg-12\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-4 float-left mb-lg-0 mb-2\\\">\\n                    <input class=\\\"form-control input-sm\\\" type=\\\"text\\\" [(ngModel)]='serviceAppointmentSearch' placeholder=\\\"Service Appointment Number\\\" (keyup)='searchServiceAppointmentName($event)'>\\n                  </div>\\n                  <div class=\\\"col-lg-4 float-left mb-lg-0 mb-2 pl-3 pl-lg-0\\\">\\n                    <ng-select #worktype [items]=\\\"lstWorkType\\\"\\n                               placeholder=\\\"Select Work Type\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\"\\n                               [closeOnSelect]=\\\"true\\\" [(ngModel)]=\\\"workTypeId\\\"\\n                               (clear)=\\\"restWorkTypeddl()\\\">\\n                    </ng-select>\\n                  </div>\\n                  <div class=\\\"col-lg-4 float-left mb-lg-0 mb-2 pl-3 pl-lg-0\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <p-calendar inputStyleClass=\\\"form-control start-date\\\" placeholder=\\\"From\\\" [(ngModel)]=\\\"From\\\" [maxDate]=\\\"To\\\" [readonlyInput]=\\\"true\\\" showButtonBar=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"2000:2030\\\"></p-calendar>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-4 float-left mb-lg-0 mb-2\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <p-calendar inputStyleClass=\\\"form-control start-date\\\" placeholder=\\\"To\\\" [(ngModel)]=\\\"To\\\" [minDate]=\\\"From\\\" [readonlyInput]=\\\"true\\\" showButtonBar=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"2000:2030\\\"></p-calendar>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"col-lg-4 float-left mb-lg-0 mb-2 pl-3 pl-lg-0\\\">\\n                    <ng-select #Status [items]=\\\"StatusListForCheckList\\\"\\n                               placeholder=\\\"Select Overall Score\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\"\\n                               [closeOnSelect]=\\\"true\\\" [(ngModel)]=\\\"StatusIdChk\\\"\\n                               (clear)=\\\"reSetDrp()\\\">\\n                    </ng-select>\\n                  </div>\\n                  <div class=\\\"col-lg-4 float-left mb-lg-0 mb-2 pl-1 pl-lg-0\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <a class=\\\"btn btn-success form-btns mr-1\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"SearchServiceAppointmentReport()\\\" tooltip=\\\"Search\\\"><span><i class=\\\"fa fa-search pr-2\\\"></i> Search</span></a>\\n                      <a class=\\\"btn btn-danger form-btns mr-1\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"reset()\\\" tooltip=\\\"Reset\\\"><span><i class=\\\"fa fa-refresh pr-2\\\"></i> Reset</span></a>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-12 mt-4 mb-2\\\">\\n        <div class=\\\"w-100 mt-2 mb-0\\\" *ngIf=\\\"pagedData.data.length>0\\\">\\n          <span class=\\\"float-right\\\">\\n            <a href=\\\"javascript:void(0);\\\" (click)=\\\"ExportTOExcel()\\\" title=\\\"Download Excel\\\" tooltip=\\\"Download Excel\\\" class=\\\" btn btn-success mr-1\\\" style=\\\"background:#1D6F42; border-color:#1D6F42;\\\"><i class=\\\"fa fa-file-excel-o\\\"></i></a>\\n            <a href=\\\"javascript:void(0);\\\" (click)=\\\"generatePdf()\\\" title=\\\"Download Pdf\\\" tooltip=\\\"Download Pdf\\\" class=\\\" btn btn-danger mr-1\\\" style=\\\"background:#c0392b; border-color:#c0392b;\\\"><i class=\\\"fa fa-file-pdf-o\\\"></i> </a>           \\n          </span>\\n        </div>\\n      </div>\\n      <div class=\\\"clearfix\\\"></div>\\n      <div class=\\\"panel-content px-3 pagination2 table-responsive no-padding\\\">\\n        <ngx-datatable class=\\\"bootstrap custom-medium-table-width\\\"\\n                       [rows]=\\\"pagedData.data\\\"\\n                       [columnMode]=\\\"'force'\\\"\\n                       [headerHeight]=\\\"40\\\"\\n                       [footerHeight]=\\\"40\\\"\\n                       [rowHeight]=\\\"'auto'\\\"\\n                       [externalPaging]=\\\"true\\\"\\n                       [externalSorting]=\\\"true\\\"\\n                       [loadingIndicator]=\\\"loadSave\\\"\\n                       [count]=\\\"pagedData.pager.totalItems\\\"\\n                       [offset]=\\\"pagedData.pager.currentPage\\\"\\n                       [limit]=\\\"pagedData.pager.pageSize\\\"\\n                       (page)='setPage($event)'\\n                       (sort)=\\\"onSort($event)\\\">\\n          <ngx-datatable-column name=\\\"Service Appointment Number\\\" prop=\\\"AppointmentNumber\\\" [sortable]=\\\"true\\\" headerClass=\\\"thead-dark\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              <a class=\\\" view-list\\\" [routerLink]=\\\"['/serviceappointment/view',row.Id]\\\" href=\\\"javascript:void(0);\\\" [title]=\\\"row.AppointmentNumber\\\">{{row.AppointmentNumber}}</a>\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"Work Order Number\\\" prop=\\\"WorkOrderNumber\\\" [sortable]=\\\"true\\\" headerClass=\\\"thead-dark\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              <a class=\\\" view-list\\\" [routerLink]=\\\"['/workorder/view',row.WorkOrderId]\\\" href=\\\"javascript:void(0);\\\" [title]=\\\"row.WorkOrderNumber\\\">{{row.WorkOrderNumber}}</a>\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"Work Type\\\" prop=\\\"WorkType\\\" [sortable]=\\\"true\\\" headerClass=\\\"thead-dark\\\"></ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"Status\\\" prop=\\\"AppStatus\\\" [sortable]=\\\"true\\\" headerClass=\\\"thead-dark\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              <div style=\\\"max-width:150px !important;\\\" class=\\\"status-box\\\" [title]=\\\"row.AppStatus\\\" [ngStyle]=\\\"{background: '#0b5206'}\\\">\\n                {{row.AppStatus}}\\n              </div>\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"Schedule Start Time\\\" prop=\\\"SchedStartTime\\\" [sortable]=\\\"true\\\" headerClass=\\\"thead-dark\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              {{row.SchedStartTime |DateTimeToLocal}}\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"Schedule End Time\\\" prop=\\\"SchedEndTime\\\" [sortable]=\\\"true\\\" headerClass=\\\"thead-dark\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              {{row.SchedEndTime |DateTimeToLocal}}\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"Resource Name\\\" prop=\\\"ResourceName\\\" [sortable]=\\\"false\\\" headerClass=\\\"thead-dark\\\"></ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"Customer Name\\\" prop=\\\"contactPerson\\\" [sortable]=\\\"false\\\" headerClass=\\\"thead-dark\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              <a class=\\\" view-list\\\" [routerLink]=\\\"['/accountslist/view',row.accountId]\\\" href=\\\"javascript:void(0);\\\" [title]=\\\"row.contactPerson\\\">{{row.contactPerson}}</a>\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"Check List Name\\\" prop=\\\"CheckListNames\\\" [sortable]=\\\"false\\\" headerClass=\\\"thead-dark\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              <table *ngIf=\\\"row.CheckListNames\\\">\\n                <tr *ngFor=\\\"let item of row.CheckListNames | convertToArrayList\\\">\\n                  <td>\\n                    <a href=\\\"javascript:void(0);\\\" (click)=\\\"auditChecklistDetailPopup(item.CheckListId,row.Id)\\\">\\n                      {{item.Name}}\\n                    </a>\\n                  </td>\\n                </tr>\\n              </table>\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"Final Score\\\" prop=\\\"CheckListNames\\\" [sortable]=\\\"false\\\" headerClass=\\\"thead-dark\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              <table *ngIf=\\\"row.CheckListNames\\\">\\n                <tr *ngFor=\\\"let item of this.convertToArrayList(row.CheckListNames)\\\"><td><span>{{item.FinalScoreCount}}/{{item.QuestionCount}}</span></td></tr>\\n              </table>\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"Overall Score\\\" prop=\\\"OverallScore\\\" [sortable]=\\\"false\\\" headerClass=\\\"thead-dark\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              <div style=\\\"max-width:150px !important;\\\" class=\\\"status-box bg-warning text-dark\\\" *ngIf=\\\"row.OverallScore && row.OverallScoreText=='Pending'\\\">\\n                {{row.OverallScore}} <strong> ({{row.OverallScoreText}})</strong>\\n              </div>\\n              <div style=\\\"max-width:150px !important;\\\" class=\\\"status-box bg-danger\\\" *ngIf=\\\"row.OverallScore && row.OverallScoreText=='Fail'\\\">\\n                {{row.OverallScore}} <strong> ({{row.OverallScoreText}})</strong>\\n              </div>\\n              <div *ngIf=\\\"row.OverallScore && row.OverallScoreText=='Pass'\\\" style=\\\"max-width:150px !important;\\\"\\n                   class=\\\"status-box bg-success\\\">\\n                {{row.OverallScore}} <strong> ({{row.OverallScoreText}})</strong>\\n              </div>\\n              <div style=\\\"max-width:150px !important;\\\" class=\\\"status-box bg-warning text-dark\\\" *ngIf=\\\"!row.OverallScore && row.OverallScoreText=='Pending'\\\">\\n                {{row.OverallScore}} <strong> ({{row.OverallScoreText}})</strong>\\n              </div>\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-footer>\\n            <ng-template ngx-datatable-footer-template\\n                         let-rowCount=\\\"rowCount\\\"\\n                         let-pageSize=\\\"pageSize\\\"\\n                         let-selectedCount=\\\"selectedCount\\\"\\n                         let-currentPage=\\\"curPage\\\"\\n                         let-offset=\\\"offset\\\"\\n                         let-isVisible=\\\"isVisible\\\">\\n              <div class=\\\"responsive-paging d-lg-flex w-100 flex-nowrap my-3\\\">\\n                <div>\\n                  <div style=\\\"color:black; margin-right:10px;\\\" class=\\\"page-size-record\\\" *ngIf='(rowCount  > 0)'>\\n                    <span style=\\\"text-align:right; width:80px;vertical-align: middle;\\\">\\n                      <ng-select [searchable]=\\\"false\\\" [items]=\\\"lstPageSize\\\" appendTo=\\\"body\\\" [(ngModel)]='pageSizeValue' dropzone=\\\"fixed\\\" [clearable]=\\\"false\\\" (change)=\\\"onChange($event)\\\" draggable=\\\"false\\\" [closeOnSelect]=\\\"true\\\"\\n                                 bindLabel=\\\"text\\\" bindValue=\\\"text\\\"></ng-select>\\n                    </span>\\n                  </div>\\n                </div>\\n                <div class=\\\"page-count selected-count\\\" *ngIf='(rowCount  > 0)'>\\n                  {{commonService.PageString(curPage,pageSizeValue,rowCount)}}\\n                </div>\\n                <datatable-pager [pagerLeftArrowIcon]=\\\"'fa fa-angle-left'\\\"\\n                                 [pagerRightArrowIcon]=\\\"'fa fa-angle-right'\\\"\\n                                 [pagerPreviousIcon]=\\\"'fa fa-angle-double-left'\\\"\\n                                 [pagerNextIcon]=\\\"'fa fa-angle-double-right'\\\"\\n                                 [page]=\\\"pagedData.pager.currentPage+1\\\"\\n                                 [size]=\\\"pageSizeValue\\\"\\n                                 [count]=\\\"pagedData.pager.totalItems\\\"\\n                                 [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\n                                 (change)=\\\"setPage($event)\\\">\\n                </datatable-pager>\\n              </div>\\n            </ng-template>\\n          </ngx-datatable-footer>\\n        </ngx-datatable>\\n      </div>\\n      <div class=\\\"col-lg-12 mb-4\\\" *ngIf=\\\"isDisplay\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\n            <div class=\\\"bg-white p-3 border\\\">\\n              <p-chart type=\\\"horizontalBar\\\" [data]=\\\"graphWidgetData\\\" [options]=\\\"graphOption\\\"></p-chart>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loading\\\" class=\\\"loader\\\"></app-loader>\\n  </div>\\n</div>\\n<app-auditchecklistpopup #auditCheckList (auditHistoryEvent)=\\\"auditHistoryEvent()\\\"></app-auditchecklistpopup>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3NvbGdlbnJlcG9ydC9uZXN0cmVwb3J0L25lc3RyZXBvcnRsaXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { CommonService } from '../../shared/common.service';\nimport { NestreportserviceService, DeliveryDateModel } from './nestreportservice.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgSelectComponent } from '@ng-select/ng-select';\nimport { DateTimeToLocalPipe } from '../../../pipes/datetime.pipe';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Calendar } from '@fullcalendar/core';\n\n@Component({\n  selector: 'app-nestreportlist',\n  templateUrl: './nestreportlist.component.html',\n  styleUrls: ['./nestreportlist.component.scss']\n})\nexport class NestreportlistComponent implements OnInit {\n  @ViewChild('Stage', { static: false }) Stage: NgSelectComponent;\n  @ViewChild('SetStateClear', { static: false }) SetStateClear: NgSelectComponent;\n  @ViewChild('userTypeSelect', { static: false }) userTypeSelect: NgSelectComponent; \n  @ViewChild('Product', { static: false }) Product: NgSelectComponent;\n  @ViewChild('AccountStatusSelect', { static: false }) accountStatus: NgSelectComponent;\n  @ViewChild('attendancemodel', { static: false }) attendancemodel: ModalDirective;\n  //Delivered\n  @ViewChild('myStartCalendar', { static: false }) startCalendar: Calendar;\n  @ViewChild('Delivered', { static: false }) Delivered: NgSelectComponent;\n  lstAccountList: any;\n  SearchFromDate: Date\n  pagedDataForImport: any = {\n    pager: {},\n    data: []\n  };\n  SearchToDate: Date\n  public defaultDate: Date = new Date();\n  rowsForExport = [];\n  From: any;\n  userid: any;\n  productRequiredIds: any;\n  isGraphView = false;\n  DeliveryDateModel :DeliveryDateModel=new DeliveryDateModel();\n  ScrollstAccountList: any;\n  addForm: FormGroup;\n  isListingView = true;\n  data = [];\n  graphData: any;\n  loginuserid: any;\n  accountStatusId :any=null;\n  graphWidgetData: any;\n  graphColumnNames: any;\n  ScrollstAccountListProduct: any;\n  graphColumnData: any;\n  lstAccountStatus: any;\n  graphOption: any;\n  lstProductName: any;\n  isDisplay = false;\n  lstCurrentStage: any;\n  lstState: any; totalPageSize: any;\n  listFilter: any = '';\n  ScrollstAccountListStage: any;\n  // curPage: number = 0;\n  len: number;\n  field_code: any;\n  sortDir = 'desc';\n  SearhName: any;\n  sortColumn: any = 'AccountName';\n  pageSizeValue: number;\n  // totalPageSize: any;\n\n  stateId: any =null;\n  @Input() offset: number;\n  searchText: any;\n  pageNumber = 0;\n  currentPage: number;\n  custom_field_id: any;\n  deliveryId: any=null;\n  stageId: any = null;\n  accountId: any = null;\n  lstDelivered: any=null;\n  loading = false;\n  To: any;\n  DeliverDateTo: any;\n  DeliverDateFrom: any;\n  lstPageSize: any;\n  pagedData: any = {\n    pager: {},\n    data: []\n  };\n  constructor(private nestreportserviceService: NestreportserviceService, private commonService: CommonService,\n    private fb: FormBuilder, private toaster: ToastrService,\n    private routeActivate: ActivatedRoute, private dateTimeToLocal: DateTimeToLocalPipe) {\n  }\n\n\n  ngOnInit() {\n    this.SearhName = \"\"\n    this.currentPage = 1;\n    this.offset = 1;\n    this.pageSizeValue = 15;\n    this.getState();\n    this.getStageList();\n    this.getAccountList();\n    this.initForm();\n    this.getProductName();\n    this.getPageSizes();\n    this.SearchNestReport();\n    this.GetDeliveryDateTypes();\n    this.data = [];\n    //setTimeout(function () { this.ShowHorizontalBarGraph(); }, 3000);\n    this.getAccountStatus();\n  }\n\n  getState() {\n\n    this.commonService.getStatesList().subscribe(res => {\n      this.lstState = this.commonService.states;\n    });\n  }\n  getAccountList() {\n    this.commonService.getMasterItemsList('NestReposrt_Account').subscribe((result: any) => {\n      this.lstAccountList = this.commonService.masters;\n    })\n  }\n  getAccountStatus() {\n    this.commonService.getMasterItemsList('NestReposrt_AccountStatus').subscribe((result: any) => {\n      this.lstAccountStatus = this.commonService.masters;\n    })\n  }\n\n  searchProductName(event) {\n    this.listFilter = event.target.value;\n    let keycode = (event.keyCode ? event.keyCode : event.which);\n    if (keycode === 13 || keycode === '13') {\n      this.SearchNestReport();\n    }\n  }\n  SetAccounts(event) {\n    this.accountId = event.value;\n  }\n  SetState(event) {\n    this.stateId = event.value;\n  }\n  SetStage(event) {\n    this.stageId = event.value;\n  }\n  getStageList() {\n    this.commonService.getMasterItemsList('NestReposrt_AccountStage').subscribe((result: any) => {\n      this.lstCurrentStage = this.commonService.masters;\n    })\n  }\n  getProductName() {\n    this.commonService.getMasterItemsList('NestReposrt_ProductName').subscribe((result: any) => {\n      this.lstProductName = this.commonService.masters;\n    })\n  }\n  SearchNestReport() {\n    if (this.isDisplay == true) {\n      this.ShowHorizontalBarGraph();\n    }\n    else {\n      this.loading = true;\n      //this.offset = 1;\n      this.nestreportserviceService.getNestReport(this.listFilter, this.deliveryId, this.accountId, this.stateId, this.stageId, this.From, this.To, this.accountStatusId, this.DeliverDateFrom, this.DeliverDateTo, this.sortColumn, this.sortDir, this.pageNumber, this.pageSizeValue, this.isDisplay).toPromise().then((response) => {\n        this.pagedData = response;\n        this.totalPageSize = this.pagedData.pager.totalItems;\n        this.totalPageSize = this.pagedData.pager.totalItems;\n        this.offset = this.pageNumber + 1;\n        this.loading = false;\n      }, error => {\n        this.loading = false;\n      });\n    }\n  }\n  reset() {\n    this.SearhName = '';\n    this.listFilter = '';\n    this.getStageList();\n    this.getAccountList();\n    this.accountId = null; this.stateId = null; this.stageId = null;\n    this.sortDir = 'asc';\n    this.sortColumn = 'AccountName';\n    this.To = null;\n    this.DeliverDateFrom = null;\n    this.DeliverDateTo = null;\n    this.currentPage = 1\n    this.Stage.clearModel();\n    this.SetStateClear.clearModel();\n    this.userTypeSelect.clearModel();\n    this.accountStatus.clearModel();\n    this.Delivered.clearModel();\n    this.Product.clearModel();\n    this.From = null;\n    this.pageNumber = 0;\n    this.pageSizeValue = 15;\n    this.SearchNestReport();\n  }\n  //function is used to manage enter key press on search text box\n  updateFilter(event) {\n    this.listFilter = event.target.value;\n    let keycode = (event.keyCode ? event.keyCode : event.which);\n    if (keycode === 13 || keycode === '13') {\n      this.SearchNestReport();\n    }\n  }\n  getPageSizes() {\n    this.commonService.getMasterItemsList(\"PageSize\").subscribe((res: any) => {\n      this.lstPageSize = this.commonService.masters;\n    })\n  }\n  get curPage(): number {\n    return this.offset;\n  }\n  onChange($event) {\n    this.SearchNestReport();\n  }\n  setPage($event) {\n    this.pageNumber = $event.page - 1;\n    var ab = $event.page - 1;\n    this.currentPage = ab;\n    //this.curPage = ab;\n    this.offset = $event.page;\n    //this.curPage.setValue($event.page);\n    this.SearchNestReport();\n  }\n  onSort($event) {\n    const sort = $event.sorts[0]\n    this.sortDir = sort.dir;\n    this.sortColumn = sort.prop;\n    this.pageNumber = $event.page - 1;\n    this.SearchNestReport();\n  }\n  restStageddl() {\n    this.stageId = null;\n  }\n  restStateddl() {\n    this.stateId = null;\n  }\n  restAccountddl() {\n    this.accountId = null;\n  }\n\n  restProductddl() {\n    this.listFilter = null;\n  }\n  restDeliveredddl() {\n    this.deliveryId = null;\n  }\n  restAccountStatusddl() {\n    this.accountStatusId = null;\n  }\n  onScrollToEnd(dataList: any, code: any) {\n    this.fetchMore(dataList, code);\n  }\n\n  private fetchMore(dataList: any, code: any) {\n    console.log(\"e\", dataList);\n    if (this.searchText == undefined) {\n      this.searchText = '';\n    }\n    this.field_code = code;\n    this.len = this.lstAccountList.length;\n    this.custom_field_id = 0;\n    //this.field_code = dataList[j].field_code;\n    // let data = (dataList[j].select_options as any[]);\n    //this.len = this.getreturnNumber(this.len = 10, dataList[j].select_options.length);\n    this.commonService.GetFixedPageScrollDropDownList(this.len, this.custom_field_id, this.field_code, this.searchText).subscribe((res: any) => {\n      this.ScrollstAccountList = this.commonService.customFieldsListData;\n      console.log('scrollDataList:', this.ScrollstAccountList);\n      this.lstAccountList = (this.lstAccountList).concat(this.ScrollstAccountList);\n\n    })\n  }\n\n  onKey(e: any, dataList: any, code: any) {\n    this.len = 0\n    this.field_code = code;\n    this.custom_field_id = 0;//dataList[j].custom_field_id;\n    //this.field_code = //dataList[j].field_code;\n    this.searchText = e.target.value;\n    this.commonService.GetFixedPageScrollDropDownList(this.len, this.custom_field_id, this.field_code, this.searchText).subscribe((res: any) => {\n      this.ScrollstAccountList = this.commonService.customFieldsListData;\n      console.log('scrollDataList:', this.ScrollstAccountList);\n      (this.lstAccountList) = this.ScrollstAccountList;\n    })\n  }\n\n\n  onScrollToEndStage(dataList: any, code: any) {\n    this.fetchMoreStage(dataList, code);\n  }\n\n  private fetchMoreStage(dataList: any, code: any) {\n    console.log(\"e\", dataList);\n    if (this.searchText == undefined) {\n      this.searchText = '';\n    }\n    this.field_code = code;\n    this.len = this.lstCurrentStage.length;\n    this.custom_field_id = 0;\n    //this.field_code = dataList[j].field_code;\n    // let data = (dataList[j].select_options as any[]);\n    //this.len = this.getreturnNumber(this.len = 10, dataList[j].select_options.length);\n    this.commonService.GetFixedPageScrollDropDownList(this.len, this.custom_field_id, this.field_code, this.searchText).subscribe((res: any) => {\n      this.ScrollstAccountListStage = this.commonService.customFieldsListData;\n      this.lstCurrentStage = (this.lstCurrentStage).concat(this.ScrollstAccountListStage);\n\n    })\n  }\n\n  onKeyStage(e: any, dataList: any, code: any) {\n    this.len = 0\n    this.field_code = code;\n    this.custom_field_id = 0;//dataList[j].custom_field_id;\n    //this.field_code = //dataList[j].field_code;\n    this.searchText = e.target.value;\n    this.commonService.GetFixedPageScrollDropDownList(this.len, this.custom_field_id, this.field_code, this.searchText).subscribe((res: any) => {\n      this.ScrollstAccountListStage = this.commonService.customFieldsListData;\n      (this.lstCurrentStage) = this.ScrollstAccountListStage;\n    })\n  }\n  onScrollToEndProduct(dataList: any, code: any) {\n    this.fetchMoreProduct(dataList, code);\n  }\n\n  private fetchMoreProduct(dataList: any, code: any) {\n    if (this.searchText == undefined) {\n      this.searchText = '';\n    }\n    this.field_code = code;\n    this.len = this.lstCurrentStage.length;\n    this.custom_field_id = 0;\n    //this.field_code = dataList[j].field_code;\n    // let data = (dataList[j].select_options as any[]);\n    //this.len = this.getreturnNumber(this.len = 10, dataList[j].select_options.length);\n    this.commonService.GetFixedPageScrollDropDownList(this.len, this.custom_field_id, this.field_code, this.searchText).subscribe((res: any) => {\n      this.ScrollstAccountListProduct = this.commonService.customFieldsListData;\n      this.lstProductName = (this.lstProductName).concat(this.ScrollstAccountListProduct);\n\n    })\n  }\n\n  onKeyProduct(e: any, dataList: any, code: any) {\n    this.len = 0\n    this.field_code = code;\n    this.custom_field_id = 0;//dataList[j].custom_field_id;\n    //this.field_code = //dataList[j].field_code;\n    this.searchText = e.target.value;\n    this.commonService.GetFixedPageScrollDropDownList(this.len, this.custom_field_id, this.field_code, this.searchText).subscribe((res: any) => {\n      this.ScrollstAccountListProduct = this.commonService.customFieldsListData;\n      (this.lstProductName) = this.ScrollstAccountListProduct;\n    })\n  }\n  ExportTOExcel() {\n    this.loading = true;\n    this.rowsForExport = [];\n\n    this.nestreportserviceService.getNestReport(this.listFilter, this.deliveryId,this.accountId, this.stateId, this.stageId, this.From, this.To, this.accountStatusId, this.DeliverDateFrom, this.DeliverDateTo, this.sortColumn, this.sortDir, this.pageNumber, this.totalPageSize, this.isDisplay).toPromise().then((response) => {\n\n      this.pagedDataForImport = response;\n\n      if (this.pagedDataForImport.data.length > 0) {\n        for (let itm of this.pagedDataForImport.data) {\n          this.rowsForExport.push({\n            'State Name': itm.stateName,\n            'Account Name': itm.AccountName,\n            'Account Status': itm.accountStatus,\n            'Current Stage': itm.currentStage,\n            'Customer Signed Date': this.dateTimeToLocal.transform(itm.CustomerSignedDate, ''),\n            'NTP Date': this.dateTimeToLocal.transform(itm.NTPDate, ''),\n            'Installation Date': this.dateTimeToLocal.transform(itm.Installation_Date, ''),\n            'PTO Date': this.dateTimeToLocal.transform(itm.PTODate, ''),\n            'Date Delivered': this.dateTimeToLocal.transform(itm.DateDelivered, ''),\n            'Product Name': itm.ProductName,\n            'Product Required ID': itm.ProductRequiredNumber\n          });\n        }\n        this.commonService.ExportData(this.rowsForExport, \"Excel\", \"ProductRequiredReport\", null);\n        this.loading = false;\n      }\n\n    }, error => {\n      this.loading = false;\n    });\n  }\n\n  generatePdf() {\n    this.loading = true;\n    this.rowsForExport = [];\n    this.nestreportserviceService.getNestReport(this.listFilter, this.deliveryId, this.accountId, this.stateId, this.stageId, this.From, this.To, this.accountStatusId, this.DeliverDateFrom, this.DeliverDateTo, this.sortColumn, this.sortDir, this.pageNumber, this.totalPageSize, this.isDisplay).toPromise().then((response) => {\n      this.pagedDataForImport = response;\n\n      if (this.pagedDataForImport.data.length > 0) {\n        for (let itm of this.pagedDataForImport.data) {\n          this.rowsForExport.push({\n            'State Name': itm.stateName,\n            'Account Name': itm.AccountName,\n            'Account Status': itm.accountStatus,\n            'Current Stage': itm.currentStage,\n            'Customer Signed Date': this.dateTimeToLocal.transform(itm.CustomerSignedDate, ''),\n            'NTP Date': this.dateTimeToLocal.transform(itm.NTPDate, ''),\n            'Installation Date': this.dateTimeToLocal.transform(itm.Installation_Date, ''),\n            'PTO Date': this.dateTimeToLocal.transform(itm.PTODate, ''),\n            'Date Delivered': this.dateTimeToLocal.transform(itm.DateDelivered, ''),\n            'Product Name': itm.ProductName,\n            'Product Required ID': itm.ProductRequiredNumber\n          });\n        }\n        this\n        this.commonService.ExportData(this.rowsForExport, 'PDF', \"ProductRequiredReport\", \"Large\");\n      } else { }\n      this.loading = false;\n    }, error => {\n      this.loading = false;\n    });\n  }\n\n  ShowHorizontalBarGraph() {\n    this.loading = true;\n    this.data = [];\n\n    this.nestreportserviceService.getNestReport(this.listFilter, this.deliveryId, this.accountId, this.stateId, this.stageId, this.From, this.To, this.accountStatusId, this.DeliverDateFrom, this.DeliverDateTo, this.sortColumn, this.sortDir,\n      this.pageNumber, this.totalPageSize, this.isDisplay).toPromise().then((response) => {\n        this.pagedData = response;\n        this.pagedData.data.forEach(t => {\n          if (t.StateName != '' && typeof t.StateName != 'undefined') {\n            let obj = {\n              StateName: t.StateName,\n              TotalRecord: t.TotalRecord\n            }\n            this.data.push(obj);\n          }\n        });\n        // }\n        if (this.data != null) {\n          this.graphColumnNames = this.data.map(function (a) {\n            return a.StateName;\n          });\n          var arrayValues: any = [];\n          arrayValues = this.data.map(function (a) {\n            return parseInt(a.TotalRecord);\n          });\n          var array: any = [];\n          var obj = {\n            label: '',\n            backgroundColor: '#' + Math.floor(Math.random() * 16777215).toString(16),\n            borderColor: '#' + Math.floor(Math.random() * 16777215).toString(16),\n            data: arrayValues\n          };\n          array.push(obj);\n          this.graphWidgetData = {\n            labels: this.graphColumnNames,\n            datasets: array\n          }\n\n\n          this.graphOption = {\n            legend: {\n              position: 'bottom'\n            }\n          }\n        }\n        this.loading = false;\n      });\n  }\n  generatePdf1() {\n    debugger\n    if (this.isDisplay == true) {\n      this.isDisplay = false;\n      this.isGraphView = false;\n      this.SearchNestReport();\n    }\n    else if (this.isDisplay == false) {\n      this.isDisplay = true;\n      this.isGraphView = true;\n      this.ShowHorizontalBarGraph();\n    }\n    else {\n      this.isListingView = true;\n      //this.SearchNestReport();\n    }\n  }\n\n  GetDeliveryDateTypes() {\n    this.lstDelivered  = [{ text: \"Is Delivered\", value: \"IsDelivered\" },\n      { text: \"Not Delivered\", value: \"NotDelivered\" }];\n  };\n  AssignDeliveryDate(row: any) {\n    console.log(\"row\", row);\n    debugger\n    this.initForm;\n    this.productRequiredId.setValue(row.productRequiredId);\n    this.productRequiredIds = row.productRequiredId;\n    //this.deliveryDate.setValue(row.DateDelivered == null ? null : row.DateDelivered.toString());\n    let EDate = (row.DateDelivered == null ? null : new Date(row.DateDelivered));\n    this.addForm.patchValue({\n      deliveryDate: EDate,\n      productRequiredId: row.productRequiredId\n    });\n    //this.addForm.reset();\n    this.attendancemodel.show();\n  }\n  closeattendancepopup() {\n    this.addForm.reset();\n    this.attendancemodel.hide();\n  }\n\n  private initForm() {\n    this.addForm = this.fb.group({\n      productRequiredId: [null],\n      deliveryDate: [null, Validators.required],\n     \n    })\n  }\n\n  get productRequiredId() { return this.addForm.get('productRequiredId'); }\n  get deliveryDate() { return this.addForm.get('deliveryDate'); }\n\n  Save() {\n    debugger\n    if (this.addForm.valid) {\n      this.DeliveryDateModel.productRequiredId = this.productRequiredIds;\n      this.DeliveryDateModel.deliveryDate = this.addForm.value.deliveryDate;\n  \n      this.nestreportserviceService.AddEditDeliveryDate(this.DeliveryDateModel).subscribe((result: any) => {\n        if (result.statusCode == 200) {\n          this.toaster.success(result.responseMessage);\n          //this.router.navigate([\"/calendar\"]);\n\n          this.addForm.reset();\n          this.attendancemodel.hide();\n          this.SearchNestReport();\n        }\n        else {\n          //this.loadSave = false;\n          this.toaster.error(result.responseMessage);\n\n        }\n      }, error => {\n        //this.loadSave = false;\n      });\n    }\n    else {\n      this.commonService.validateAllFormFields(this.addForm);\n    }\n  }\n\n  close(event) {\n    //this.startCalendar.destroy() = true;\n  }\n\n  GetCompareDateTimeResult(sDate, eDate, sTitle, eTitle) {\n    debugger;\n    //this.StartDate = sDate;\n    //this.EndDate = eDate;\n    this.addForm.get('deliveryDate').setValue(sDate);\n\n   \n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CommonService } from '../../shared/common.service';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NestreportserviceService {\n  public baseUri = `${environment.WebApiBaseUrl}`;\n  pagedData: any;\n  pagedataGraph: any;\n  constructor(private http: HttpClient, private commonService: CommonService, private router: Router) { }\n\n  getNestReport(name: any, deliveryId:any, accountId, stateId, stageId, From: any, To: any, accountStatusId: any, DeliverDateFrom: any, DeliverDateTo: any, sortColumn: string, sortDir, page: number, pageSize: number, isGraph: boolean) {\r\n    if (typeof From == \"undefined\" || From == null) { From = null; }\r\n    else { From = From.toDateString(); }\r\n\r\n    if (typeof To == \"undefined\" || To == null) { To = null; }\r\n    else { To = To.toDateString(); }\r\n    if (typeof DeliverDateFrom == \"undefined\" || DeliverDateFrom == null) { DeliverDateFrom = null; }\r\n    else { DeliverDateFrom = DeliverDateFrom.toDateString(); }\r\n    if (typeof DeliverDateTo == \"undefined\" || DeliverDateTo == null) { DeliverDateTo = null; }\r\n    else { DeliverDateTo = DeliverDateTo.toDateString(); }\r\n\r\n    return this.http.get(this.baseUri + `Report/GetNestReport?name=${name}&deliveryId=${deliveryId}&accountId=${accountId}&stateId=${stateId}&stageId=${stageId}&From=${From}&To=${To}&accountStatusId=${accountStatusId}&DeliverDateFrom=${DeliverDateFrom}&DeliverDateTo=${DeliverDateTo}\r\n&sortColumn=${sortColumn}&sortDir=${sortDir}&page=${page}&pageSize=${pageSize}&isGraph=${isGraph}`)\r\n    //.pipe(\r\n    //  map((response: any) => {\r\n\r\n    //      this.pagedData = response;\r\n    //      return true;\r\n\r\n    //  })\r\n    //);\r\n  }\n\n  AddEditDeliveryDate(model: DeliveryDateModel) {\n    return this.http.post(this.baseUri + `Report/AddEditDeliveryDate`, model);\n  }\n}\n\n\nexport class DeliveryDateModel {\n  productRequiredId: string;\n  deliveryDate: string;\n  constructor() {\n    this.productRequiredId = '';\n    this.deliveryDate = '';\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3NvbGdlbnJlcG9ydC9zZXJ2aWNlYXBwb2ludG1lbnRyZXBvcnQvc2VydmljZWFwcG9pbnRtZW50cmVwb3J0bGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { CommonService } from '../../shared/common.service';\r\nimport { ServiceappointmentreportserviceService } from './serviceappointmentreportservice.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgSelectComponent } from '@ng-select/ng-select';\r\nimport { DateTimeToLocalPipe } from '../../../pipes/datetime.pipe';\r\n//import { forEach } from '@angular/router/src/utils/collection';\r\nimport { ServicesappointmentlistComponent } from '../../servicesappointment/servicesappointmentlist.component';\r\nimport { AuditchecklistpopupComponent } from '../../servicesappointment/auditchecklistpopup/auditchecklistpopup.component';\r\n\n@Component({\n  selector: 'app-serviceappointmentreportlist',\n  templateUrl: './serviceappointmentreportlist.component.html',\n  styleUrls: ['./serviceappointmentreportlist.component.scss']\n})\nexport class ServiceappointmenreportlistComponent implements OnInit {\n  @ViewChild('worktype', { static: false }) worktype: NgSelectComponent;\n  @ViewChild('Status', { static: false }) Status: NgSelectComponent;\n  @ViewChild('SetStateClear', { static: false }) SetStateClear: NgSelectComponent;\n  @ViewChild('userTypeSelect', { static: false }) userTypeSelect: NgSelectComponent;\n  @ViewChild('Product', { static: false }) Product: NgSelectComponent;\r\n  @ViewChild('auditCheckList', { static: false }) auditCheckListModel: AuditchecklistpopupComponent;\r\n  pagedDataForImport: any = {\r\n    pager: {},\r\n    data: []\r\n  };\n  rowsForExport = [];\n  data = [];\n  totalPageSize: any;\n  serviceAppointmentSearch: any = '';\n  sortDir = 'desc';\n  SearhName: any;\n  sortColumn: any = 'Id';\n  pageSizeValue: number;\n  workTypeId: any = null;\n  @Input() offset: number;\n  searchText: any;\n  pageNumber = 0;\n  lstWorkType: any;\n  currentPage: number;\n  StatusIdChk: any = null;;\n  loading = false;\n  StatusListForCheckList: any;\n  To: any;\n  From: any;\n  lstPageSize: any;\n  pagedData: any = {\r\n    pager: {},\r\n    data: []\r\n  };\n  constructor(private serviceappointmentreportserviceService: ServiceappointmentreportserviceService,\n    private commonService: CommonService, private routeActivate: ActivatedRoute, private dateTimeToLocal: DateTimeToLocalPipe, private auditchecklistpopupComponent: AuditchecklistpopupComponent) { }\n  ngOnInit() {\n    this.SearhName = \"\";\n    this.currentPage = 1;\r\n    this.offset = 1;\r\n    this.pageSizeValue = 15;\r\n    this.getStageList();\r\n    this.GetQuestionTypes();\r\n    this.getPageSizes();\n    this.SearchServiceAppointmentReport();\n    this.data = [];\n  }\n\n  searchServiceAppointmentName(event) {\n    this.serviceAppointmentSearch = event.target.value;\r\n    let keycode = (event.keyCode ? event.keyCode : event.which);\r\n    if (keycode === 13 || keycode === '13') {\r\n      this.SearchServiceAppointmentReport();\r\n    }\r\n  }\n\n  auditChecklistDetailPopup(checkList_Id: number, serviceAppointmentId: number) {\r\n    //debugger;\r\n    this.auditCheckListModel.ShowPopup(checkList_Id, serviceAppointmentId,false);\r\n  }\n\n  //auditChecklistDetailPopup(checkList_Id: number, serviceAppointmentId: number) {\n  //  //debugger;\r\n  //  this.auditCheckListModel.auditChecklistDetail(checkList_Id, serviceAppointmentId);\r\n  //}\n\n  GetSortOrder(prop) {\r\n    return function (a, b) {\r\n      if (a[prop] > b[prop]) {\r\n        return 1;\r\n      } else if (a[prop] < b[prop]) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    }\r\n  }\n\n  getStageList() {\n    this.commonService.getMasterItemsList('WorkType').subscribe((result: any) => {\n      this.lstWorkType = this.commonService.masters;      \n      //this.lstWorkType = this.commonService.masters.sort(this.GetSortOrder(\"text\"));\n    })\n  }\n  SearchServiceAppointmentReport() {\r\n    this.loading = true;\n    this.serviceappointmentreportserviceService.getServiceAppointmentReport(this.serviceAppointmentSearch, this.sortColumn, this.sortDir, this.pageNumber, this.pageSizeValue, this.From, this.To, this.workTypeId, this.StatusIdChk).toPromise().then((response) => {\r\n      this.pagedData = response;\r\n      this.totalPageSize = this.pagedData.pager.totalItems;\r\n      this.offset = this.pageNumber + 1;\r\n      this.loading = false;\n    }, error => {\r\n      this.loading = false;\r\n    });\n  }\n  reset() {\n    this.SearhName = '';\n    this.serviceAppointmentSearch = '';\n    this.sortDir = 'asc';\r\n    this.sortColumn = 'Id';\n    this.currentPage = 1\n    this.StatusIdChk = null;\n    this.worktype.clearModel();\n    this.From = null;\n    this.To = null;\n    this.Status.clearModel();\n    this.pageNumber = 0;\r\n    this.pageSizeValue = 15;\n    this.SearchServiceAppointmentReport();\n  }\n  restWorkTypeddl() {\n    this.workTypeId = null;\r\n  }\n  reSetDrp() {\n    this.StatusIdChk = null;\r\n  }\n  //function is used to manage enter key press on search text box\n  updateFilter(event) {\r\n    this.serviceAppointmentSearch = event.target.value;\r\n    let keycode = (event.keyCode ? event.keyCode : event.which);\r\n    if (keycode === 13 || keycode === '13') {\r\n      this.SearchServiceAppointmentReport();\r\n    }\r\n  }\n  getPageSizes() {\r\n    this.commonService.getMasterItemsList(\"PageSize\").subscribe((res: any) => {\r\n      this.lstPageSize = this.commonService.masters;\r\n    })\r\n  }\n  get curPage(): number {\n    return this.offset;\n  }\n  onChange($event) {\r\n    this.SearchServiceAppointmentReport();\r\n  }\r\n  setPage($event) {\r\n    this.pageNumber = $event.page - 1;\r\n    var ab = $event.page - 1;\r\n    this.currentPage = ab;\r\n    this.offset = $event.page;\r\n    this.SearchServiceAppointmentReport();\r\n  }\r\n  onSort($event) {\r\n    const sort = $event.sorts[0]\r\n    this.sortDir = sort.dir;\r\n    this.sortColumn = sort.prop;\r\n    this.pageNumber = $event.page - 1;\r\n    this.SearchServiceAppointmentReport();\r\n\r\n  }\n \n  convertToArrayList(data) {\r\n    let _result: any[] = [];\n    if (data) {\n      _result = JSON.parse(data) as [];\r\n    }\n    return _result;\r\n  }\n\n  convertToArrayListName(data) {\r\n    let _result: any[] = [];\n    let _resultReturn: any[] = [];\n    if (data) {\n      _result = JSON.parse(data) as [];\r\n    }\n    _result.forEach(t => {\n      let obj = {\n        Name: t.Name\n      }\n      _resultReturn.push(obj);\n    })\n    let result = _resultReturn.map(function (val) {\r\n      return val.Name;\r\n    }).join(',');\n    console.log(\"resultCOMMA\", result);\n    return result;\r\n  }\n\n  convertToArrayListFinalScore(data) {\r\n    let _result: any[] = [];\n    let _resultReturn: any[] = [];\n    if (data) {\n      _result = JSON.parse(data) as [];\r\n    }\n    _result.forEach(t => {\n      let obj = {\n        Name: t.FinalScoreCount + '/' + t.QuestionCount\n      }\n      _resultReturn.push(obj);\n    })\n    let result = _resultReturn.map(function (val) {\r\n      return val.Name;\r\n    }).join(',');\n    return result;\n\r\n  }\n  auditHistoryEvent() {\n    this.SearchServiceAppointmentReport();\n  }\n  ExportTOExcel() {\n    this.loading = true;\r\n    this.rowsForExport = [];\r\n    this.serviceappointmentreportserviceService.getServiceAppointmentReport(this.serviceAppointmentSearch, this.sortColumn, this.sortDir, this.pageNumber, this.totalPageSize, this.From, this.To, this.workTypeId, this.StatusIdChk).toPromise().then((response) => {\r\n      this.pagedDataForImport = response;\r\n      if (this.pagedDataForImport.data.length > 0) {\r\n        for (let itm of this.pagedDataForImport.data) {\r\n          this.rowsForExport.push({\r\n            'Service Appointment Number': itm.AppointmentNumber,\r\n            'Work Order Number': itm.WorkOrderNumber,\r\n            'Work Type': itm.WorkType,\r\n            'Status': itm.AppStatus,\r\n            'Schedule Start Time': this.dateTimeToLocal.transform(itm.SchedStartTime, ''),\r\n            'Schedule End Time': this.dateTimeToLocal.transform(itm.SchedEndTime, ''),\r\n            'Resource Name': itm.ResourceName,\r\n            'Customer Name': itm.contactPerson,\r\n            'Check List Name': this.convertToArrayListName(itm.CheckListNames),\r\n            'Final Score': this.convertToArrayListFinalScore(itm.CheckListNames),\r\n            'Overall Score': itm.OverallScore + \"(\" + itm.OverallScoreText + \")\",\r\n          });\r\n        }\r\n        this.commonService.ExportData(this.rowsForExport, \"Excel\", \"ServiceAppointmenReport\", null);\r\n        this.loading = false;\r\n      }\r\n    }, error => {\r\n      this.loading = false;\r\n    });\r\n  }\n\n  generatePdf() {\r\n    this.loading = true;\r\n    this.rowsForExport = [];\r\n    this.serviceappointmentreportserviceService.getServiceAppointmentReport(this.serviceAppointmentSearch, this.sortColumn, this.sortDir, this.pageNumber, this.totalPageSize, this.From, this.To, this.workTypeId, this.StatusIdChk).toPromise().then((response) => {\r\n      this.pagedDataForImport = response;\r\n\r\n      if (this.pagedDataForImport.data.length > 0) {\r\n        for (let itm of this.pagedDataForImport.data) {\r\n          this.rowsForExport.push({\r\n            'Service Appointment Number': itm.AppointmentNumber,\r\n            'Work Order Number': itm.WorkOrderNumber,\r\n            'Work Type': itm.WorkType,\r\n            'Status': itm.AppStatus,\r\n            'Schedule Start Time': this.dateTimeToLocal.transform(itm.SchedStartTime, ''),\r\n            'Schedule End Time': this.dateTimeToLocal.transform(itm.SchedEndTime, ''),\r\n            'Resource Name': itm.ResourceName,\r\n            'Customer Name': itm.contactPerson,\r\n            'Check List Name': this.convertToArrayListName(itm.CheckListNames),\r\n            'Final Score': this.convertToArrayListFinalScore(itm.CheckListNames),\r\n            'Overall Score': itm.OverallScore + \"(\"+ itm.OverallScoreText+ \")\",\r\n          });\r\n        }\r\n        this\r\n        this.commonService.ExportData(this.rowsForExport, 'PDF', \"ServiceAppointmenReport\", \"Large\");\r\n      } else { }\r\n      this.loading = false;\r\n    }, error => {\r\n      this.loading = false;\r\n    });\r\n  }\n\n  //DownloadCSV() {\n  //  this.loading = true;\r\n  //  this.rowsForExport = [];\r\n  //  this.serviceappointmentreportserviceService.getServiceAppointmentReport(this.serviceAppointmentSearch, this.sortColumn, this.sortDir, this.pageNumber, this.totalPageSize, this.From, this.To, this.workTypeId).toPromise().then((response) => {\r\n  //    this.pagedDataForImport = response;\r\n\r\n  //    if (this.pagedDataForImport.data.length > 0) {\r\n  //      for (let itm of this.pagedDataForImport.data) {\r\n  //        this.rowsForExport.push({\r\n  //          'Service Appointment Number': itm.AppointmentNumber,\r\n  //          'Work Order Number': itm.WorkOrderNumber,\r\n  //          'Work Type': itm.WorkType,\r\n  //          'Schedule Start Time': this.dateTimeToLocal.transform(itm.SchedStartTime, ''),\r\n  //          'Schedule End Time': this.dateTimeToLocal.transform(itm.SchedEndTime, ''),\r\n  //          'Resource Name': itm.ResourceName,\r\n  //          'Check List Name': this.convertToArrayListName(itm.CheckListNames),\r\n  //          'Final Score': this.convertToArrayListFinalScore(itm.CheckListNames)\r\n  //        });\r\n  //      }\r\n  //      this\r\n  //      this.commonService.ExportData(this.rowsForExport, 'CSV', \"ServiceAppointmenReport\", \"Large\");\r\n  //    } else { }\r\n  //    this.loading = false;\r\n  //  }, error => {\r\n  //    this.loading = false;\r\n  //  });\r\n  //}\n\n  GetQuestionTypes() {\r\n    let statusList = [{ text: \"Pending\", value: \"Pending\" }, { text: \"Fail\", value: \"Fail\" }\r\n      , { text: \"Pass\", value: \"Pass\" }];\r\n    this.StatusListForCheckList = statusList;\r\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CommonService } from '../../shared/common.service';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceappointmentreportserviceService {\n  public baseUri = `${environment.WebApiBaseUrl}`;\n  pagedData: any;\n  pagedataGraph: any;\n  constructor(private http: HttpClient, private commonService: CommonService, private router: Router) { }\n  getServiceAppointmentReport(serviceAppointmentSearch: any, sortColumn: string, sortDir, page: number, pageSize: number, From: any, To: any, workTypeId: any, StatusIdChk:any) {\r\n    if (typeof From == \"undefined\" || From == null) { From = null; }\r\n    else { From = From.toDateString(); }\r\n\r\n    if (typeof To == \"undefined\" || To == null) { To = null; }\r\n    else { To = To.toDateString(); }\r\n    return this.http.get(this.baseUri + `Report/GetServiceAppointmentReportList?serviceAppointmentSearch=${serviceAppointmentSearch}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${page}&pageSize=${pageSize}&workTypeId=${workTypeId}&From=${From}&To=${To}&StatusIdChk=${StatusIdChk}`)\r\n      //.pipe(\r\n      //  map((response: any) => {          \r\n      //      this.pagedData = response;\r\n      //      return true;          \r\n      //  })\r\n      //);\r\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NestreportlistComponent } from './nestreport/nestreportlist.component';\r\nimport { ServiceappointmentComponent } from '../serviceresource/serviceappointment/serviceappointment.component';\r\nimport { ServiceappointmenreportlistComponent } from './serviceappointmentreport/serviceappointmentreportlist.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'nestreport', component: NestreportlistComponent, data: { title: 'Nest Report' } },\r\n  { path: 'serviceappointmentreport', component: ServiceappointmenreportlistComponent, data: { title: 'Service Appointment Report' } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SolgenreportRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { SharedModule } from '../shared/shared.module';\nimport { SolgenreportRoutingModule } from './solgenreport-routing.module';\nimport { NestreportserviceService } from './nestreport/nestreportservice.service';\nimport { NestreportlistComponent } from './nestreport/nestreportlist.component';\nimport { ChartModule } from 'primeng/chart';\nimport { ServiceappointmenreportlistComponent } from './serviceappointmentreport/serviceappointmentreportlist.component';\nimport { ServiceappointmentreportserviceService } from './serviceappointmentreport/serviceappointmentreportservice.service';\nimport { AuditchecklistpopupComponent } from '../servicesappointment/auditchecklistpopup/auditchecklistpopup.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n@NgModule({\n  declarations: [\n    NestreportlistComponent,\n    ServiceappointmenreportlistComponent\n  ],\n  imports: [\n    CommonModule,\n    SolgenreportRoutingModule, ChartModule,\n    SharedModule, ModalModule\n  ],\n  providers: [\n    NestreportserviceService,\n    ServiceappointmentreportserviceService,\n    AuditchecklistpopupComponent\n  ]\n})\nexport class SolgenreportModule { }\n"],"sourceRoot":"webpack:///"}