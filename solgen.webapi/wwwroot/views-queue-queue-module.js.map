{"version":3,"sources":["./src/app/views/queue/addeditqueue.component.html","./src/app/views/queue/queuelist.component.html","./src/app/views/queue/addeditqueue.component.scss","./src/app/views/queue/addeditqueue.component.ts","./src/app/views/queue/queue-routing.module.ts","./src/app/views/queue/queue.module.ts","./src/app/views/queue/queuelist.component.scss","./src/app/views/queue/queuelist.component.ts"],"names":[],"mappings":"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","file":"views-queue-queue-module.js","sourcesContent":["export default \"<div class=\\\"header float-left w-100 mb-2\\\">\\r\\n  <h2 class=\\\"float-left pr-2\\\"><strong>{{pageTitle}}</strong></h2>\\r\\n  <div class=\\\"breadcrumb-wrapper\\\">\\r\\n    <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a routerLink=\\\"/dashboard\\\">Dashboard</a></li>\\r\\n      <li><a routerLink=\\\"/queuelist\\\">Manage Queue</a></li>\\r\\n      <li class=\\\"active\\\">{{pageTitle}}</li>\\r\\n    </ol>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"clearfix\\\"></div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <div class=\\\"panel\\\">\\r\\n      <div class=\\\"panel-content\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\" [ngClass]=\\\"{'disabled':loadSave}\\\">\\r\\n            <form [formGroup]=\\\"form\\\" *ngIf=\\\"form\\\">\\r\\n              <ng-container *ngFor=\\\"let item of formControlList\\\">\\r\\n                <h3 class=\\\"form-heading\\\"><span>{{ item.group_display_name}} </span></h3>\\r\\n                <div class=\\\"row mx-auto mb-2\\\">\\r\\n\\r\\n                  <ng-container *ngFor=\\\"let inner of item.InnerData\\\">\\r\\n                    <div [ngClass]=\\\"{'col-sm-12 col-md-12 float-left': true, 'd-none' : inner.form_field_visibility == 'NO', 'col-12': inner.layout_type =='single', 'col-md-6': inner.layout_type =='double', 'col-lg-4': inner.layout_type =='triple', 'col-lg-3 col-xl-3':\\r\\n                             inner.layout_type =='four' }\\\"\\r\\n                         ngShow=\\\"inner.dependent_show_type == true\\\">\\r\\n                      <!---->\\r\\n                      <input type=\\\"hidden\\\" *ngIf=\\\"inner.form_field_visibility == 'NO'\\\" />\\r\\n\\r\\n                      <label *ngIf=\\\"(inner.form_field_visibility == 'YES' && inner.display_name!='Company') && !hideCompany\\\">{{ inner.display_name}}:<span class=\\\"text-danger\\\" [ngClass]=\\\"{'text-danger':inner.is_required== true}\\\" *ngIf=\\\"inner.is_required==true\\\">*</span></label>\\r\\n\\r\\n                      <label *ngIf=\\\"inner.form_field_visibility == 'YES' && hideCompany\\\">{{ inner.display_name}}:<span class=\\\"text-danger\\\" [ngClass]=\\\"{'text-danger':inner.is_required== true}\\\" *ngIf=\\\"inner.is_required==true\\\">*</span></label>\\r\\n\\r\\n                      <div class=\\\"form-group\\\" *ngIf=\\\"inner.form_field_visibility == 'YES'\\\">\\r\\n\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [readonly]=\\\"inner.is_readOnly\\\"\\r\\n                               [formControlName]=\\\"inner.form_controlName\\\" (ngModelChange)=\\\"validator(inner.form_controlName,inner.is_required,inner.actual_data_type)\\\" [id]=\\\"inner.custom_field_id\\\"\\r\\n                               [ngClass]=\\\"{'is-invalid': (form.get(inner.form_controlName)?.invalid && (form.get(inner.form_controlName)?.dirty || form.get(inner.form_controlName)?.touched) && (form.get(inner.form_controlName)?.errors?.required || form.get(inner.form_controlName)?.errors?.maxlength)) }\\\"\\r\\n                               *ngIf=\\\"inner.picklist_options != 'Lookup' && inner.dt_code !='date' && inner.dt_code !='url'  && inner.dt_code !='radio' && inner.dt_code!='boolean'  && inner.dt_code !='select' && inner.dt_code !='textarea' && inner.dt_code !='checkbox' && inner.dt_code !='date' && inner.dt_code !='int' && inner.dt_code !='decimal' && inner.dt_code !='bigint'\\\" />\\r\\n\\r\\n\\r\\n\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [readonly]=\\\"inner.is_readOnly\\\" (ngModelChange)=\\\"validator(inner.form_controlName,inner.is_required,inner.actual_data_type)\\\"\\r\\n                               [formControlName]=\\\"inner.form_controlName\\\" [id]=\\\"inner.custom_field_id\\\"\\r\\n                               [ngClass]=\\\"{'is-invalid': (form.get(inner.form_controlName)?.invalid && (form.get(inner.form_controlName)?.dirty || form.get(inner.form_controlName)?.touched) && (form.get(inner.form_controlName)?.errors?.required || form.get(inner.form_controlName)?.errors?.maxlength)) }\\\"\\r\\n                               *ngIf=\\\"inner.dt_code == 'int'\\\" />\\r\\n\\r\\n                        <small *ngIf=\\\"inner.dt_code == 'int' &&(form.get(inner.form_controlName)?.touched &&\\r\\n                       form.get(inner.form_controlName)?.errors?.pattern)\\\"\\r\\n                               class=\\\"text-danger\\\">Please enter valid value</small>\\r\\n\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [readonly]=\\\"inner.is_readOnly\\\" (ngModelChange)=\\\"validator(inner.form_controlName,inner.is_required,inner.actual_data_type)\\\"\\r\\n                               [formControlName]=\\\"inner.form_controlName\\\" [id]=\\\"inner.custom_field_id\\\"\\r\\n                               [ngClass]=\\\"{'is-invalid': (form.get(inner.form_controlName)?.invalid && (form.get(inner.form_controlName)?.dirty || form.get(inner.form_controlName)?.touched) && (form.get(inner.form_controlName)?.errors?.required || form.get(inner.form_controlName)?.errors?.maxlength)) }\\\"\\r\\n                               *ngIf=\\\"inner.dt_code == 'bigint'\\\" />\\r\\n\\r\\n                        <small *ngIf=\\\"inner.dt_code == 'bigint' &&(form.get(inner.form_controlName)?.touched &&\\r\\n                       form.get(inner.form_controlName).errors?.pattern)\\\"\\r\\n                               class=\\\"text-danger\\\">Please enter valid value</small>\\r\\n\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [readonly]=\\\"inner.is_readOnly\\\" (ngModelChange)=\\\"validator(inner.form_controlName,inner.is_required,inner.actual_data_type)\\\"\\r\\n                               [formControlName]=\\\"inner.form_controlName\\\" [id]=\\\"inner.custom_field_id\\\"\\r\\n                               [ngClass]=\\\"{'is-invalid': (form.get(inner.form_controlName)?.invalid && (form.get(inner.form_controlName)?.dirty || form.get(inner.form_controlName)?.touched) && (form.get(inner.form_controlName)?.errors?.required || form.get(inner.form_controlName)?.errors?.maxlength)) }\\\"\\r\\n                               *ngIf=\\\"inner.dt_code == 'decimal'\\\" />\\r\\n\\r\\n\\r\\n\\r\\n                        <small *ngIf=\\\"inner.dt_code == 'decimal'  &&(form.get(inner.form_controlName).touched &&\\r\\n                       form.get(inner.form_controlName).errors?.pattern)\\\"\\r\\n                               class=\\\"text-danger\\\">Please enter valid value</small>\\r\\n\\r\\n\\r\\n                        <!--Textarea [placeholder]=\\\"inner.display_name\\\"-->\\r\\n                        <textarea class=\\\"form-control\\\" *ngIf=\\\"inner.dt_code == 'textarea'\\\" (ngModelChange)=\\\"validator(inner.form_controlName,inner.is_required,inner.actual_data_type)\\\" [ngClass]=\\\"{'is-invalid': (form.get(inner.form_controlName)?.invalid && (form.get(inner.form_controlName)?.dirty || form.get(inner.form_controlName)?.touched) && (form.get(inner.form_controlName).errors?.required || form.get(inner.form_controlName)?.errors?.maxlength)) }\\\" [formControlName]=\\\"inner.form_controlName\\\" rows=\\\"3\\\" cols=\\\"4\\\"></textarea>\\r\\n\\r\\n\\r\\n\\r\\n                        <!--Ng Calendar [placeholder]=\\\"inner.display_name\\\"-->\\r\\n\\r\\n                        <p-calendar inputStyleClass=\\\"form-control start-date\\\" *ngIf=\\\"inner.dt_code == 'date'\\\" (ngModelChange)=\\\"validator(inner.form_controlName,inner.is_required)\\\"\\r\\n                                    [showTime]=\\\"false\\\" dateFormat=\\\"mm/dd/yy\\\" showButtonBar=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"1919:2030\\\"></p-calendar>\\r\\n\\r\\n                        <div class=\\\"form-control pl-0 border-0 bg-transparent\\\" *ngIf=\\\"inner.dt_code=='checkbox'\\\">\\r\\n\\r\\n                          <div *ngFor=\\\"let options of inner.listoptions\\\">\\r\\n\\r\\n                            <div class=\\\"form-check form-check-inline\\\" *ngFor=\\\"let option of options.listoptions;let i=index;\\\">\\r\\n\\r\\n                              <div class=\\\"custom-control custom-checkbox\\\">\\r\\n\\r\\n                                <input id=\\\"chk_{{inner.custom_field_id}}_{{option}}_{{i}}\\\"\\r\\n                                       value=\\\"5555\\\" [checked]=\\\"checkvalue(inner.value,option)\\\" (change)=\\\"onCheckboxChange($event,item,inner)\\\" class=\\\"dynamic custom-control-input\\\" type=\\\"checkbox\\\">\\r\\n                                <label class=\\\"custom-control-label universal-custom-control-label pl-2 pr-1 dynamic\\\" for=\\\"chk_{{inner.custom_field_id}}_{{option}}_{{i}}\\\">{{option}}</label>\\r\\n\\r\\n                              </div>\\r\\n\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <div class=\\\"form-control pl-0 border-0 bg-transparent\\\" *ngIf=\\\"inner.dt_code=='boolean'\\\">\\r\\n                          <div class=\\\"form-check form-check-inline\\\">\\r\\n                            <div class=\\\"custom-control custom-checkbox pl-0\\\">\\r\\n                              <label class=\\\"switch\\\">\\r\\n                                <input type=\\\"checkbox\\\" (ngModelChange)=\\\"validator(inner.form_controlName,inner.is_required)\\\"\\r\\n                                       id=\\\"{{inner.form_controlName}}\\\" [formControlName]=\\\"inner.form_controlName\\\">\\r\\n                                <span class=\\\"slider round\\\" id=\\\"{{inner.form_controlName}}\\\"><span>Yes</span></span>\\r\\n                              </label>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <!--Radio button-->\\r\\n                        <div class=\\\"form-control pl-0 border-0 bg-transparent\\\" *ngIf=\\\"inner.dt_code=='radio'\\\">\\r\\n                          <div *ngFor=\\\"let options of inner.listoptions\\\">\\r\\n                            <div class=\\\"form-check form-check-inline\\\" *ngFor=\\\"let option of options.listoptions;let i=index;\\\">\\r\\n                              <div class=\\\"custom-control custom-radio mx-2  p-0\\\">\\r\\n                                <input id=\\\"radio-{{inner.custom_field_id}}_{{option}}\\\" [formControlName]=\\\"inner.form_controlName\\\" [value]=\\\"option\\\" type=\\\"radio\\\">\\r\\n                                <label for=\\\"radio-{{inner.custom_field_id}}_{{option}}\\\" class=\\\"radio-label\\\">{{option}}</label>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <ng-select [items]=\\\"inner.select_options\\\" [id]=\\\"inner.form_controlName\\\" class=\\\"form-control\\\" [closeOnSelect]=\\\"true\\\" placeholder=\\\"Select\\\"\\r\\n                                   *ngIf=\\\"inner.dt_code=='select' && inner.picklist_options=='' \\\"\\r\\n                                   [formControlName]=\\\"inner.form_controlName\\\" bindLabel=\\\"name\\\" bindValue=\\\"value\\\">\\r\\n\\r\\n                        </ng-select>\\r\\n\\r\\n\\r\\n                        <ng-select [items]=\\\"inner.select_options\\\" [id]=\\\"inner.form_controlName\\\" class=\\\"form-control\\\" [closeOnSelect]=\\\"true\\\" placeholder=\\\"Select\\\"\\r\\n                                   *ngIf=\\\"inner.dt_code=='select' && inner.picklist_options=='true' \\\"\\r\\n                                   [formControlName]=\\\"inner.form_controlName\\\"\\r\\n                                   [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" bindValue=\\\"value\\\">\\r\\n\\r\\n                        </ng-select>\\r\\n                        <small *ngIf=\\\"((form.get(inner.form_controlName)?.invalid) && (form.get(inner.form_controlName).dirty) || (form.get(inner.form_controlName)?.touched) && (form.get(inner.form_controlName)?.errors?.required))\\\"\\r\\n                               class=\\\"text-danger\\\">{{inner.display_name}} is required</small>\\r\\n                      </div>\\r\\n\\r\\n\\r\\n                    </div>\\r\\n                  </ng-container>\\r\\n\\r\\n                </div>\\r\\n              </ng-container>\\r\\n            </form>\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n          <h3 class=\\\"form-heading\\\"><span>Map Users</span></h3>\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-5\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-lg-6\\\">\\r\\n                    <div class=\\\" py-2 form-group\\\">\\r\\n                      <select class=\\\"form-control\\\" id=\\\"dropdownFilter\\\" (change)=\\\"change($event)\\\" >\\r\\n                        <option value=\\\"users\\\">Users</option>\\r\\n                        <option value=\\\"department\\\">Department</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-lg-6\\\">\\r\\n                    <div class=\\\"py-2 input-group\\\">\\r\\n                      <input id=\\\"searchtext\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchtext\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"Search by Name\\\">\\r\\n                      <!--<button (click)=\\\"searchFilter()\\\" type=\\\"button\\\"><i class=\\\"fa fa-search\\\"></i></button>-->\\r\\n                      <a class=\\\"btn btn-success ml-2\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"searchFilter()\\\"><span><i class=\\\"fa fa-search\\\"></i> </span></a>\\r\\n                      <a class=\\\"btn btn-danger ml-2\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"clearFilter()\\\"><span><i class=\\\"fa fa-refresh\\\"></i> </span></a>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"col-md-7\\\"></div>\\r\\n\\r\\n              <div class=\\\"mover-panel-box col-md-5 col-lg-5\\\">\\r\\n                <div class=\\\"heading-border\\\">\\r\\n                  <h5 class=\\\"h5\\\"><span>Available Users</span></h5>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"listing border-top\\\">\\r\\n                  <div class=\\\"table-responsive\\\">\\r\\n                    <table id=\\\"example\\\" class=\\\"table table-bordered \\\" style=\\\"min-width:100%\\\">\\r\\n                      <thead class=\\\"thead-bg\\\">\\r\\n                        <tr role=\\\"row\\\">\\r\\n                          <th scope=\\\"col\\\" class=\\\"sorting_asc\\\" tabindex=\\\"0\\\" aria-controls=\\\"example\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-sort=\\\"ascending\\\" aria-label=\\\"User Name: activate to sort column ascending\\\" style=\\\"width: 813px;\\\">User Name</th>\\r\\n                          <th scope=\\\"col\\\" class=\\\"sorting_asc\\\" tabindex=\\\"0\\\" aria-controls=\\\"example\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-sort=\\\"ascending\\\" aria-label=\\\"Department Name: activate to sort column ascending\\\" style=\\\"width: 813px;\\\">Department</th>\\r\\n                        </tr>\\r\\n\\r\\n                      </thead>\\r\\n                      <tbody>\\r\\n                        <tr role=\\\"row\\\"  [ngClass]=\\\"{'modal-bck':color.selected}\\\" (click)='OnItemSelected(color)' *ngFor=\\\"let color of userListData\\\" class=\\\"manageview-dragable odd\\\">\\r\\n                          <td class=\\\"sorting_1\\\" >{{color.text}} </td>\\r\\n                          <td class=\\\"sorting_1\\\">{{color.fieldName}} </td>\\r\\n                        </tr>\\r\\n                      </tbody>\\r\\n                    </table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"mover-controls col-md-2 col-lg-1 mt-3 mt-mb-0 align-items-center\\\">\\r\\n                <button type=\\\"button\\\" (click)=\\\"OnShiftAllFromDragToDrop()\\\"><i aria-hidden=\\\"true\\\" class=\\\"fa fa-angle-double-down fa-2x d-md-none\\\"></i><i aria-hidden=\\\"true\\\" class=\\\"fa fa-angle-double-right fa-2x d-none d-md-block\\\"></i></button>\\r\\n                <button type=\\\"button\\\" (click)=\\\"OnShiftOneFromDragToDrop()\\\"><i aria-hidden=\\\"true\\\" class=\\\"fa fa-angle-down fa-2x d-md-none\\\"></i><i aria-hidden=\\\"true\\\" class=\\\"fa fa-angle-right fa-2x d-none d-md-block\\\"></i></button>\\r\\n                <button type=\\\"button\\\" (click)=\\\"OnShiftOneFromDropToDrag()\\\"><i aria-hidden=\\\"true\\\" class=\\\"fa fa-angle-up fa-2x d-md-none\\\"></i><i aria-hidden=\\\"true\\\" class=\\\"fa fa-angle-left fa-2x d-none d-md-block\\\"></i></button>\\r\\n                <button type=\\\"button\\\" (click)=\\\"OnShiftAllFromDropToDrag()\\\"><i aria-hidden=\\\"true\\\" class=\\\"fa fa-angle-double-up fa-2x d-md-none\\\"></i><i aria-hidden=\\\"true\\\" class=\\\"fa fa fa-angle-double-left fa-2x d-none d-md-block\\\"></i></button>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"mover-panel-box col-md-5 col-lg-6\\\">\\r\\n                <div class=\\\"heading-border\\\">\\r\\n                  <h5 class=\\\"h5\\\"><span>Assigned Users</span></h5>\\r\\n                </div>\\r\\n\\r\\n               \\r\\n                  <div class=\\\"table-responsive border\\\">\\r\\n                    <table  class=\\\"table table-bordered selected-fields table-cont table-ul\\\">\\r\\n                      <thead class=\\\"thead-bg\\\">\\r\\n                        <tr role=\\\"row\\\">\\r\\n                          <th scope=\\\"col\\\">User Name</th>\\r\\n                          <th class=\\\"text-center\\\">Department</th>\\r\\n                        </tr>\\r\\n                      </thead>\\r\\n                      <p-orderList #droppedView [value]=\\\"droped\\\" dragdrop=\\\"true\\\">\\r\\n                        <ng-template let-c pTemplate=\\\"item\\\">\\r\\n                          <tr [ngClass]=\\\"{'modal-bck':c.selected}\\\" (click)=\\\"onDroppedItemClick(c)\\\" role=\\\"row\\\">\\r\\n                            <td class=\\\"sorting_1\\\">{{c.text}}</td>\\r\\n                            <td class=\\\"sorting_1\\\">{{c.fieldName}}</td>\\r\\n                          </tr>\\r\\n                        </ng-template>\\r\\n                      </p-orderList>\\r\\n                    </table>\\r\\n                  </div>\\r\\n               \\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n     \\r\\n      </div>\\r\\n      <div class=\\\"panel-footer border-top pt-3 pb-3\\\">\\r\\n\\r\\n        <div class=\\\"col-sm-12 col-md-12\\\">\\r\\n          <a *ngIf='addOrUpdatePermission' href=\\\"javascript:void(0);\\\" class=\\\"btn btn-success mr-2\\\" (click)=\\\"onSubmit()\\\"><i class=\\\"fa fa-save\\\"></i> Submit</a>\\r\\n          <a href=\\\"javascript:void(0);\\\" class=\\\"btn btn-danger\\\" (click)=\\\"close()\\\"><i class=\\\"fa fa-times\\\"></i> Cancel</a>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"\\n<div class=\\\"header float-left w-100 mb-2\\\">\\n  <h2 class=\\\"float-left pr-2\\\"><strong>MANAGE QUEUE</strong></h2>\\n  <div class=\\\"breadcrumb-wrapper\\\">\\n    <ol class=\\\"breadcrumb\\\">\\n      <li>\\n        <a routerLink=\\\"/dashboard\\\">Dashboard</a>\\n      </li>\\n      <li class=\\\"active\\\">Manage Queue</li>\\n    </ol>\\n  </div>\\n\\n</div>\\n<div class=\\\"clearfix\\\"></div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12 portlets\\\">\\n    <div class=\\\"panel\\\">\\n      <div class=\\\"panel-header border-bottom pb-3\\\">\\n        <div class=\\\"row mt-2\\\">\\n          <div class=\\\"col-md-12 col-xl-6\\\">\\n            <div class=\\\"row searchfield  mr-1 w-100\\\">\\n              <div class=\\\"col-lg-4 float-left mb-lg-0 mb-2\\\">\\n                <input class=\\\"form-control input-sm\\\" type=\\\"text\\\" [(ngModel)]='listFilter' placeholder=\\\"Search By Name\\\" (keyup)='updateFilter($event)'>\\n              </div>\\n              <div class=\\\"col-lg-8 float-left\\\">\\n                <a class=\\\"btn btn-success form-btns mr-1\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"search()\\\"><span><i class=\\\"fa fa-search\\\"></i> Search</span></a>\\n                <a class=\\\"btn btn-danger form-btns mr-2\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"reset()\\\"><span><i class=\\\"fa fa-refresh\\\"></i> Reset</span></a>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-12 col-xl-6\\\">\\n            <div class=\\\"dt-buttons\\\">\\n              <a *ngIf='modulePermission!==null && modulePermission.roleModuleAddFlag' routerLink=\\\"/queuelist/addqueue\\\" class=\\\"btn btn-success form-btns mr-1\\\"><i class=\\\"fa fa-plus\\\"></i> Add Queue</a>\\n              <a *ngIf='modulePermission!==null && modulePermission.roleModuleDeleteFlag' class=\\\"btn btn-danger form-btns\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"deleteAll()\\\"><span><i class=\\\"fa fa-trash\\\"></i> Delete</span></a>\\n\\n            </div>\\n          </div>\\n        </div>\\n      </div><!--[rowHeight]=\\\"'auto'\\\"  -->\\n      <div class=\\\"panel-content px-3 pagination2 table-responsive no-padding\\\">\\n        <ngx-datatable #table class=\\\"bootstrap table table-hover table-dynamic\\\"\\n                       [rowHeight]=\\\"40\\\"\\n                       [rows]=\\\"columndata\\\"\\n                       [columnMode]=\\\"'force'\\\"\\n                       [headerHeight]=\\\"40\\\"\\n                       [footerHeight]=\\\"40\\\"\\n                       \\n                       [externalPaging]=\\\"true\\\"\\n                       [externalSorting]=\\\"true\\\"\\n                       [loadingIndicator]=\\\"loadSave\\\"\\n                       [count]=\\\"totalRecords\\\"\\n                       [offset]=\\\"currentPage\\\"\\n                       [limit]=\\\"pageSizeValue\\\"\\n                       (page)='setPage($event)'\\n                       (sort)=\\\"onSort($event)\\\"\\n                       [scrollbarH]=\\\"true\\\"\\n                       [selectionType]=\\\"SelectionType.checkbox\\\"\\n                       [selectAllRowsOnPage]=\\\"false\\\"\\n                       [selected]=\\\"selected\\\"\\n                       (select)=\\\"onSelect($event)\\\">\\n\\n          <ngx-datatable-column [width]=\\\"50\\\"\\n                                [sortable]=\\\"false\\\"\\n                                [canAutoResize]=\\\"false\\\"\\n                                [draggable]=\\\"false\\\"\\n                                [resizeable]=\\\"false\\\"\\n                                [headerCheckboxable]=\\\"true\\\"\\n                                [checkboxable]=\\\"true\\\">\\n          </ngx-datatable-column>\\n\\n\\n          <ngx-datatable-column *ngFor=\\\"let col of columnheading\\\" [name]=\\\"col.DISPLAY_NAME\\\" [prop]=\\\"col.COLUMN_NAME\\\" [sortable]=\\\"col.SORTABLE\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              <div *ngIf=\\\"col.COLUMN_NAME == 'Name'\\\">\\n                <a class=\\\"view-list\\\" [routerLink]=\\\"['/serviceresource/view',row.ID]\\\" href=\\\"javascript:void(0);\\\" [title]=\\\"row[col.COLUMN_NAME]\\\">{{row[col.COLUMN_NAME] }}</a>\\n              </div>\\n\\n              <div *ngIf=\\\"col.COLUMN_NAME != 'Name'\\\">\\n                <div [title]=\\\"row[col.COLUMN_NAME]\\\" *ngIf=\\\"col.DATA_TYPE == 'bit'\\\">\\n                  <span class=\\\"status-box bg-success\\\" *ngIf=\\\"row[col.COLUMN_NAME] == true\\\">Enabled</span>\\n                  <span class=\\\"status-box bg-danger\\\" *ngIf=\\\"row[col.COLUMN_NAME] == false\\\">Disabled</span>\\n                </div>\\n                <div [title]=\\\"row[col.COLUMN_NAME]\\\" *ngIf=\\\"col.DATA_TYPE=='date'\\\">\\n                  {{ (row[col.COLUMN_NAME] !== null) ? (row[col.COLUMN_NAME] | DateTimeToLocal) : \\\"\\\" }}\\n                </div>\\n                <div [title]=\\\"row[col.COLUMN_NAME]\\\" *ngIf=\\\"col.DATA_TYPE!='date' && col.DATA_TYPE!='bit' && col.COLUMN_NAME!='CreatedAt' && col.COLUMN_NAME!='ModifyAt' && col.FieldType != 'select' && col.COLUMN_NAME!='UserCount' \\\">\\n                  {{row[col.COLUMN_NAME] | truncate}}\\n                </div>\\n                <div [title]=\\\"row[col.COLUMN_NAME]\\\" *ngIf=\\\"col.COLUMN_NAME=='UserCount' \\\">\\n                  <a (click)=\\\"showpopUserCount(row.Id)\\\" href=\\\"javascript:void(0);\\\" data-toggle=\\\"modal\\\" class=\\\"text-dark\\\">\\n                    <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\n                    <span class=\\\"noti-circle noti-blue\\\">{{row[col.COLUMN_NAME] }}</span>\\n                  </a>\\n                </div>\\n                <div [title]=\\\"row[col.COLUMN_NAME]\\\" *ngIf=\\\"col.COLUMN_NAME=='CreatedAt'\\\">\\n                  {{ (row.CreatedAt !== null) ? (row.CreatedAt | DateTimeToLocal) : \\\"\\\" }}\\n                </div>\\n                <div [title]=\\\"row[col.COLUMN_NAME]\\\" *ngIf=\\\"col.COLUMN_NAME=='ModifyAt'\\\">\\n                  {{ (row.ModifyAt !== null) ? (row.ModifyAt | DateTimeToLocal) : \\\"\\\" }}\\n                </div>\\n                <div *ngIf=\\\"col.FieldType == 'select'\\\">\\n                  <div [title]=\\\"row[col.COLUMN_NAME]\\\" *ngIf=\\\"col.FieldFrom !=null\\\">\\n                    {{row[col.COLUMN_NAME] |  truncate}}\\n                  </div>\\n                  <div *ngIf=\\\"col.FieldFrom==null\\\">\\n                    <div *ngFor=\\\"let itemColorCode of getListingColorCode(row[col.COLUMN_NAME]);\\\">\\n                      <div *ngIf=\\\"itemColorCode.colorkey==undefined\\\">\\n                        {{itemColorCode.color}}\\n                      </div>\\n                      <div *ngIf=\\\"itemColorCode.colorkey!=undefined\\\" class=\\\"status-box\\\" [title]=\\\"itemColorCode.color\\\" [ngStyle]=\\\"{background: itemColorCode.colorkey}\\\">\\n                        {{itemColorCode.color}}\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-column [sortable]=\\\"false\\\" [maxWidth]=\\\"200\\\" headerClass=\\\"text-center\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              <span class=\\\"actions rw_act\\\">\\n                <i class=\\\"fa fa-ellipsis-h action_icon\\\" [attr.attribute-id]=\\\"row.Id\\\" aria-hidden=\\\"true\\\"></i>\\n                <span class=\\\"action-list-box spn{{row.Id}}\\\">\\n                  <span class=\\\"list-actions fsm-list\\\" id=\\\"action-list\\\" style=\\\"width:210px;\\\">\\n                    <a *ngIf='modulePermission!==null && modulePermission.roleModuleReadFlag' class=\\\"actions-onclick view-list\\\" [routerLink]=\\\"['/queuelist/editqueue',row.Id]\\\" title=\\\"Edit\\\"><i class=\\\"fa fa-pencil text-success pr-2\\\"></i></a>\\n                    <a *ngIf='modulePermission!==null && modulePermission.roleModuleDeleteFlag' class=\\\"actions-onclick view-list\\\" title=\\\"Click to delete.\\\" (click)=\\\"Delete(row)\\\" href=\\\"javascript:void(0);\\\"><i class=\\\"fa fa-trash text-danger\\\"></i></a>\\n                    <i class=\\\"fa fa-times close close-action\\\" aria-hidden=\\\"true\\\"></i>\\n                  </span>\\n                </span>\\n              </span>\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-footer>\\n            <ng-template ngx-datatable-footer-template\\n                         let-rowCount=\\\"rowCount\\\"\\n                         let-pageSize=\\\"pageSize\\\"\\n                         let-selectedCount=\\\"selectedCount\\\"\\n                         let-currentPage=\\\"curPage\\\"\\n                         let-offset=\\\"offset\\\"\\n                         let-isVisible=\\\"isVisible\\\">\\n              <div>\\n                <div style=\\\"color:black; margin-right:10px;\\\" class=\\\"page-size-record\\\" *ngIf='(rowCount  > 0)'>\\n                  <span style=\\\"text-align:right; width:80px;vertical-align: middle;\\\">\\n                    <ng-select [searchable]=\\\"false\\\" [items]=\\\"lstPageSize\\\" appendTo=\\\"body\\\" [(ngModel)]='pageSizeValue' dropzone=\\\"fixed\\\" [clearable]=\\\"false\\\" (change)=\\\"onChange($event)\\\" draggable=\\\"false\\\" [closeOnSelect]=\\\"true\\\"\\n                               bindLabel=\\\"text\\\" bindValue=\\\"text\\\"></ng-select>\\n                  </span>\\n                </div>\\n              </div>\\n              <div class=\\\"page-count\\\" *ngIf='(rowCount  > 0)'>\\r\\n                <!--Showing {{(curPage - 1 )* pageSizeValue + 1}}  to {{curPage * pageSizeValue}} out of {{rowCount}}  enteries-->\\r\\n                {{commonService.PageString(curPage,pageSizeValue,rowCount)}}\\r\\n\\r\\n              </div>\\n              <datatable-pager [pagerLeftArrowIcon]=\\\"'fa fa-angle-left'\\\"\\n                               [pagerRightArrowIcon]=\\\"'fa fa-angle-right'\\\"\\n                               [pagerPreviousIcon]=\\\"'fa fa-angle-double-left'\\\"\\n                               [pagerNextIcon]=\\\"'fa fa-angle-double-right'\\\"\\n                               [page]=\\\"curPage\\\"\\n                               [size]=\\\"pageSizeValue\\\"\\n                               [count]=\\\"totalRecords\\\"\\n                               [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\n                               (change)=\\\"setPage($event)\\\">\\n              </datatable-pager>\\n            </ng-template>\\n          </ngx-datatable-footer>\\n        </ngx-datatable>\\n\\n      </div>\\n      <app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader\\\"></app-loader>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal fade in show\\\" bsModal #assignpopup=\\\"bs-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" style=\\\"display: none; padding-right: 10px;\\\">\\n  <div class=\\\"modal-dialog modal-xl modal-info \\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Queue User Details</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closemodel()\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n\\n\\n\\n      <div class=\\\"modal-body\\\" style=\\\"margin-bottom:10px; max-height:700px; overflow-y:auto;\\\">\\n\\n        <div class=\\\"col-lg-12\\\" [ngClass]=\\\"{'disabled':loadSave}\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <div class=\\\"table table-striped\\\">\\n              <ngx-datatable #table class=\\\"bootstrap\\\"\\n                             [rows]=\\\"pagedDataUserList.data\\\"\\n                             [scrollbarH]=\\\"true\\\"\\n                       [rowHeight]=\\\"'40'\\\"\\n                             [columnMode]=\\\"'force'\\\"\\n                             [headerHeight]=\\\"40\\\"\\n                             [footerHeight]=\\\"40\\\"\\n                             \\n                             [externalPaging]=\\\"true\\\"\\n                             [externalSorting]=\\\"true\\\"\\n                             [loadingIndicator]=\\\"loadSave\\\"\\n                             [messages]=\\\"{emptyMessage:'No Record Found.'}\\\"\\n                             [count]=\\\"pagedDataUserList.pager.totalItems\\\"\\n                             [offset]=\\\"pagedDataUserList.pager.currentPage\\\"\\n                             [limit]=\\\"pagedDataUserList.pager.pageSize\\\"\\n                             (page)='setPageUserList($event)'\\n                             (sort)=\\\"setPageUserList($event)\\\">\\n\\n                <ngx-datatable-column name=\\\"User Name\\\" [sortable]=\\\"false\\\" prop=\\\"UserName\\\" [minWidth]=\\\"150\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Department\\\" [sortable]=\\\"false\\\" prop=\\\"DepartmentName\\\" [minWidth]=\\\"150\\\"></ngx-datatable-column>\\n\\n                <ngx-datatable-footer>\\n                  <ng-template ngx-datatable-footer-template\\n                               let-rowCount=\\\"rowCount\\\"\\n                               let-pageSize=\\\"pageSize\\\"\\n                               let-selectedCount=\\\"selectedCount\\\"\\n                               let-currentPage=\\\"curPageUserList\\\"\\n                               let-offset=\\\"offsetUserList\\\"\\n                               let-isVisible=\\\"isVisible\\\">\\n                    <div class=\\\"page-count\\\" style=\\\"max-width:170px;\\\">\\n                      Total Records: {{rowCount}}\\n                    </div>\\n                    <div>\\n                      <div style=\\\"color:black; margin-right:10px;\\\" class=\\\"page-size-record\\\">\\n                        <span style=\\\"text-align:right; width:80px;vertical-align: middle;\\\">\\n                          <ng-select [searchable]=\\\"false\\\" [items]=\\\"lstPageSizeUserList\\\" appendTo=\\\"body\\\" [(ngModel)]='pageSizeValueUserList' dropzone=\\\"fixed\\\" [clearable]=\\\"false\\\" (change)=\\\"onChangeUserList($event)\\\" draggable=\\\"false\\\" [closeOnSelect]=\\\"true\\\"\\n                                     bindLabel=\\\"text\\\" bindValue=\\\"text\\\"></ng-select>\\n                        </span>\\n                      </div>\\n                    </div>\\n                    <datatable-pager [pagerLeftArrowIcon]=\\\"'fa fa-angle-double-left'\\\"\\n                                     [pagerRightArrowIcon]=\\\"'fa fa-angle-double-right'\\\"\\n                                     [pagerPreviousIcon]=\\\"'fa fa-angle-left'\\\"\\n                                     [pagerNextIcon]=\\\"'fa fa-angle-right'\\\"\\n                                     [page]=\\\"curPageUserList\\\"\\n                                     [size]=\\\"pageSizeValueUserList\\\"\\n                                     [count]=\\\"pagedDataUserList.pager.totalItems\\\"\\n                                     [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\n                                     (change)=\\\"setPageUserList($event)\\\">\\n                    </datatable-pager>\\n                  </ng-template>\\n                </ngx-datatable-footer>\\n              </ngx-datatable>\\n            </div>\\n          </div>\\n\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-danger form-btns\\\" (click)=\\\"closemodel()\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><i class=\\\"fa fa-times text-white\\\"></i> Cancel</button>\\n      </div>\\n      <!--<app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader-popup\\\"></app-loader>-->\\n    </div>\\n  </div>\\n</div>\\n\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3F1ZXVlL2FkZGVkaXRxdWV1ZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, Input, OnInit, Output, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators, FormsModule } from '@angular/forms';\nimport { of } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { isNullOrUndefined } from 'util';\nimport { CustomFieldService } from '../shared/custom-field/customfield.service';\nimport { CommonService, ModuleList } from '../shared/common.service';\nimport { QueueserviceService, CheckboxData, JsonData } from './queueservice.service';\nimport { OrderListModule } from 'primeng/orderlist';\n\n@Component({\n  selector: 'app-addeditqueue',\n  templateUrl: './addeditqueue.component.html',\n  styleUrls: ['./addeditqueue.component.scss']\n})\nexport class AddeditqueueComponent implements OnInit {\n  @ViewChild('droppedView', { static: false }) DroppedView: ElementRef;\n  config: any[] = [];\n  control: any;\n  pageTitle: any;\n  group_id: any;\n  moduleName = 'Queue';\n  submoduleName = 'queue';\n  selecteddata: any;\n  group_name: any;\n  group_display_name: any;\n  customCompnentValues: any;\n  userListValues: any;\n  form: FormGroup;\n  formGroup: FormGroup;\n  companyId: any;\n  grpId: any;\n  sDtaa: any;\n  loadSave = false;\n  id: any = '';\n  isLead = false;\n  showChild = false;\n  formControlList: any[] = [];\n  errors: string[] = [];\n  JsonData: JsonData = new JsonData();\n  userId: any;\n  addOrUpdatePermission: boolean;\n  modulePermission: ModuleList;\n  userListData: any[] = [];\n  userListDataDummy: any[] = [];\n  droped: any[] = [];\n  dropdownFilter: any;\n  searchtext: any;\n \n\n  constructor(private fb: FormBuilder, private queueserviceService: QueueserviceService, private router: Router,\n    private toaster: ToastrService, private route: ActivatedRoute, private commonService: CommonService) {\n\n    this.commonService.getLoggedInName.subscribe((userdetail: any) => {\n      this.companyId = userdetail.companyId;\n      this.userId = userdetail.id;\n    });\n    const moduleCode = this.route.snapshot.data.moduleCode;\n    this.modulePermission = this.commonService.getPermission(moduleCode);\n  }\n  checkboxdata1: Array<CheckboxData> = [];\n\n  ngOnInit() {\n    this.dropdownFilter = 'users';\n    this.route.paramMap.subscribe(\n      params => {\n        const id = params.get('id');\n        if (id) {\n          this.loadSave = true;\n          this.id = id;\n          this.pageTitle = 'Edit Queue';\n          this.addOrUpdatePermission = this.modulePermission.roleModuleUpdateFlag;\n        } else {\n          this.pageTitle = 'Add Queue';\n          this.addOrUpdatePermission = this.modulePermission.roleModuleAddFlag;\n        }\n      }\n    );\n\n    this.queueserviceService.GetCustomFieldsList(this.moduleName, this.submoduleName, this.companyId, this.id).subscribe((result: any) => {\n      if (result) {\n        this.customCompnentValues = this.queueserviceService.customFieldsList.data;\n\n        this.customCompnentValues.forEach(t => {\n          let groupCheck = this.formControlList.filter(y => y.group_id == t.group_id);\n          if (t.dt_code == 'checkbox') {\n            let checkdata = new CheckboxData();\n            checkdata.controlname = t.ColumnName;\n            this.checkboxdata1.push(checkdata);\n          }\n          if (groupCheck == null || groupCheck.length == 0) {\n            let obj = {\n              group_id: t.group_id,\n              group_name: t.group_name,\n              group_display_name: t.group_display_name,\n              InnerData: this.customCompnentValues.filter(x => x.group_id == t.group_id)\n            }\n            this.formControlList.push(obj);\n          }\n        })\n        const group: any = {};\n        this.customCompnentValues.forEach(cnt => {\n          let val = null;\n          if (cnt.actual_data_type == 'bit') {\n            val = cnt.value == 1 ? true : false;\n          }\n          else if (cnt.dt_code == 'date' || cnt.actual_data_type == 'date') {\n            if (cnt.value == \"\") {\n              val = null;\n            } else {\n              let val1 = new Date(cnt.value);\n              val = val1.getMonth() + 1 + '/' + val1.getDate() + '/' + val1.getFullYear();\n            }\n          }\n          else {\n            val = (cnt.value == '' ? null : cnt.value);\n          }\n          this.checkboxdata1.forEach((item) => { if (cnt.form_controlName == item.controlname) { item.controlvalues = cnt.value; } });//for checkboxes on form\n          if (cnt.actual_data_type == 'checkbox') {\n            try {\n              this.checkboxdata1.forEach((item) => { \n                this.form.get(item.controlname).setValue(item.controlvalues.split(','));\n              });\n            }\n            catch (err) { }\n          }\n          group[cnt.form_controlName] = new FormControl(val, [cnt.is_required == true ? Validators.required : Validators.nullValidator,\n          cnt.actual_data_type == \"int\" ? Validators.pattern(\"[0-9]{1,9}\") :\n            cnt.actual_data_type == \"bigint\" ? Validators.pattern(\"[0-9]{1,9}\") :\n              cnt.actual_data_type == \"decimal\" ? Validators.pattern(\"[0-9]+(\\.[0-9][0-9]?)?\") :\n                Validators.nullValidator\n          ])\n\n        });\n        this.form = new FormGroup(group);\n        this.loadSave = false;\n      }\n    });\n\n    this.queueserviceService.GetUsersList(this.companyId, this.id).subscribe((resultUser: any) => {\n      if (resultUser)\n      {\n        this.userListValues = this.queueserviceService.userList.data;\n        this.userListData = [];\n        let i = 0;\n\n        this.userListValues.forEach(t => {\n          let obj = {\n            text: t.UserName,\n            index: i,\n            value: t.Id,\n            fieldName: t.DepartmentName,\n          }\n          this.userListDataDummy.push(obj);\n        })\n\n        this.userListValues.filter(x => x.selected== \"false\").forEach(t => {\n          let obj = {\n            text: t.UserName,\n            index: i,\n            value: t.Id,\n            fieldName: t.DepartmentName,\n          }\n          this.userListData.push(obj);\n        })\n\n        this.userListValues.filter(x => x.selected == \"true\").forEach(t => {\n          let obj1 = {\n            text: t.UserName,\n            index: i,\n            value: t.Id,\n            fieldName: t.DepartmentName,\n          }\n           this.droped.push(obj1);\n        })\n      }\n    });\n  }\n\n  OnItemSelected(item) {\n    if (item.selected == true) {\n      item.selected = false;\n      return;\n    }\n    else {\n      this.userListData[this.userListData.indexOf(item)].selected = true;\n    }\n  }\n\n  OnShiftOneFromDragToDrop() {\n    let selected: number[] = [];\n    for (var i = 0; i < this.userListData.length; i++) {\n      if (this.userListData[i].selected == true) {\n        this.userListData[i].selected = false;\n\n        this.droped.push(this.userListData[i]);\n        selected.push(i);\n      }\n    }\n    for (var i = selected.length - 1; i >= 0; i--) {\n      let temp: number = selected[i];\n      this.userListData.splice(temp, 1);\n    }\n  }\n  OnShiftAllFromDragToDrop() {\n\n    for (var i = 0; i < this.userListData.length; i++) {\n\n      this.userListData[i].selected = false;\n      this.droped.push(this.userListData[i]);\n    }\n\n    this.userListData.splice(0, this.userListData.length);\n\n  }\n  OnShiftAllFromDropToDrag() {\n    for (var i = 0; i < this.droped.length; i++) {\n      this.droped[i].selected = false;\n      for (var j = 0; j < this.userListDataDummy.length; j++) {\n        if (this.droped[i].value == this.userListDataDummy[j].value) {\n          this.droped[i].selected = false;\n          this.userListData.splice(j, 0, this.droped[i]);\n          break;\n        }\n      }\n    }\n    this.droped.splice(0, this.droped.length);\n  }\n  OnShiftOneFromDropToDrag() {\n   \n    for (var i = 0; i <= this.droped.length; i++) {\n      if (this.droped[i].selected == true) {\n        for (var j = 0; j < this.userListDataDummy.length; j++) {\n          if (this.droped[i].value == this.userListDataDummy[j].value) {\n            this.droped[i].selected = false;\n            this.userListData.splice(j, 0, this.droped[i]);\n            this.droped.splice(i, 1);\n            i--;\n            break;\n          }\n        }\n      }\n    }\n  }\n  onDroppedItemClick(item) {\n    this.droped[this.droped.indexOf(item)].selected = !item.selected;\n  }\n\n  clearFilter() {\n    this.userListData = [];\n    this.searchtext = '';\n    let i = 0;\n    this.userListValues.filter(x => x.selected == \"false\").forEach(t => {\n      let obj = {\n        text: t.UserName,\n        index: i,\n        value: t.Id,\n        fieldName: t.DepartmentName,\n      }\n      this.userListData.push(obj);\n    })\n  }\n\n\n  searchFilter() {\n    this.userListData = [];\n    let i = 0; \n    if (this.dropdownFilter == 'users') {\n      this.userListValues.filter(s => s.UserName.toLocaleLowerCase().includes(this.searchtext.toLocaleLowerCase()) && s.selected == \"false\").forEach(t => {\n        let obj = {\n          text: t.UserName,\n          index: i,\n          value: t.Id,\n          fieldName: t.DepartmentName,\n        }\n        this.userListData.push(obj);\n      });\n    } else {\n      this.userListValues.filter(x => x.DepartmentName.toLocaleLowerCase().includes(this.searchtext.toLocaleLowerCase()) && x.selected == \"false\").forEach(t => {\n        let obj = {\n          text: t.UserName,\n          index: i,\n          value: t.Id,\n          fieldName: t.DepartmentName,\n        }\n        this.userListData.push(obj);\n      });\n    }\n      \n\n  }\n\n  checkvalue(formvalues, selval) {\n    let returnValue = false;\n    if (formvalues != null) {\n      formvalues.split(',').find((item) => {\n        if (item == selval) {\n          returnValue = true;\n        }\n      });\n    }\n    return returnValue;\n  }\n  test(e) {\n    e.stopPropagation();\n    e.preventDefault();\n  }\n  OnCheck() {\n  }\n  onSubmit() {\n    this.loadSave = true;\n    this.checkboxdata1.forEach((item) => {\n      if (item.controlvalues != \"\" && item.controlvalues != undefined) {\n        var selvalues = \"\";\n        if (selvalues == \"\" || selvalues == null) {\n          this.form.get(item.controlname).setValue(item.controlvalues);\n        } else {\n          this.form.get(item.controlname).setValue(selvalues + \",\" + item.controlvalues);\n        }\n      }\n    });\n    if ( this.droped.length == 0 ) {\n      this.toaster.error('No User Selected.');\n      return\n    }\n   \n\n    if (this.form.valid) {\n      this.loadSave = true;\n      this.JsonData.Id = this.id;\n      this.JsonData.moduleCode = this.moduleName;\n      this.JsonData.subModuleCode = this.submoduleName;\n      this.JsonData.companyId = this.companyId;\n      this.selecteddata = JSON.stringify(this.droped);\n      this.JsonData.selecteddata = this.selecteddata;\n      this.JsonData.userId = this.userId;\n      this.JsonData.FormJsonData = JSON.stringify(this.form.value);\n\n      this.queueserviceService.addEditForm(this.JsonData).subscribe((result: any) => {\n        if (result.statusCode == 200) {\n          setTimeout(() => {\n            this.toaster.success(result.responseMessage);\n            this.loadSave = false;\n            this.router.navigateByUrl(\"/queuelist\");\n          }, 1000);\n        }\n        else {\n          this.toaster.error(result.responseMessage);\n          this.loadSave = false;\n        }\n      }, error => {\n        this.loadSave = false;\n      });\n    }\n    else {\n      this.commonService.validateAllFormFields(this.form);\n      this.loadSave = false;\n\n    }\n\n  }\n\n  displayInsuranceDetail(reposnse): void {\n    const formGroup = {};\n    for (let prop of Object.keys(this.customCompnentValues)) {\n      formGroup[prop] = new FormControl(this.customCompnentValues[prop].value);\n    }\n    this.form = new FormGroup(formGroup);\n  }\n\n  close() {\n    this.router.navigateByUrl(\"/queuelist\");\n  }\n  MakeArray(value, type) {\n    var array = [];\n    var arr = String(value).split(',');\n    if (type == \"radio\" || type == \"checkbox\") {\n      if (arr.length > 0) {\n        for (var i = 0; i < arr.length; i++) {\n          if (arr[i].split(\"|\").length > 1) {\n            var person = { name: arr[i].split(\"|\")[0], value: arr[i].split(\"|\")[1] };\n            array.push(person);\n          }\n          else {\n            var person = { name: arr[i], value: arr[i] };\n            array.push(person);\n          }\n        }\n      }\n    }\n    else {\n      if (arr.length > 0) {\n        for (var i = 0; i < arr.length; i++) {\n          var person = { name: arr[i], value: arr[i] };\n          array.push(person);\n        }\n      }\n    }\n\n    return array;\n  }\n  MakeNormalArray(value) {\n    if (value) {\n      try {\n        return JSON.parse(value);\n      }\n      catch (ex) {\n        return value;\n      }\n    }\n    else {\n      value = [];\n    }\n  }\n  MakeSelectArray(objItem) {\n    var array = [];\n    var arr = String(objItem.select_options).split(',');\n    if (arr.length > 0 && objItem.picklist_options == 'Lookup' && objItem.form_field_visibility == \"YES\" && objItem.dt_code == \"select\") {\n\n      var person = { name: arr[0], value: arr[1] };\n      array.push(person);\n    }\n    return array\n  }\n  removeValue = function (list, value, separator) {\n    separator = separator || \",\";\n    var values = list.split(separator);\n    for (var i = 0; i < values.length; i++) {\n      if (values[i] == value) {\n        values.splice(i, 1);\n        return values.join(separator);\n      }\n    }\n    return list;\n  }\n\n\n  onCheckboxChange(e, groupdisp, controldisp) {\n    let checkboxdatanew = new CheckboxData();\n    checkboxdatanew.controlname = controldisp.ColumnName;\n    if (e.target.checked) {\n      let strvalues = \"\";\n      if (this.checkboxdata1.length > 0) {\n        strvalues = this.checkboxdata1.find(item => item.controlname == controldisp.ColumnName).controlvalues;\n      }\n      if (strvalues == \"\") {\n        checkboxdatanew.controlvalues = e.target.labels[0].innerHTML;\n        this.checkboxdata1.push(checkboxdatanew);\n      } else {\n        let updateItem = this.checkboxdata1.find(item => item.controlname == controldisp.ColumnName);\n        let index = this.checkboxdata1.indexOf(updateItem);\n        this.checkboxdata1[index].controlvalues = strvalues + \",\" + e.target.labels[0].innerHTML;\n\n\n      }\n    }\n    else {\n\n      let strs = this.checkboxdata1.find(item => item.controlname == controldisp.ColumnName).controlvalues.split(\",\");\n\n      let updatedval = strs.splice(strs.indexOf(e.target.labels[0].innerHTML), 1);\n      let updateItem = this.checkboxdata1.find(item => item.controlname == controldisp.ColumnName);\n      let index = this.checkboxdata1.indexOf(updateItem);\n      this.checkboxdata1[index].controlvalues = strs.toString();\n    }\n    var dd = this.formControlList;\n\n  }\n  change(e){\n    this.dropdownFilter = e.target.value;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { QueuelistComponent } from './queuelist.component';\r\nimport { AddeditqueueComponent } from './addeditqueue.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\nconst routes: Routes = [\n  { path: '', component: QueuelistComponent },\n  { path: 'editqueue/:id', component: AddeditqueueComponent },\n  { path: 'addqueue', component: AddeditqueueComponent },\n \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class QueueRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddeditqueueComponent } from './addeditqueue.component';\nimport { QueuelistComponent } from './queuelist.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { SharedModule } from '../shared/shared.module';\nimport { QueueRoutingModule } from './queue-routing.module';\nimport { OrderListModule } from 'primeng/orderlist';\nimport { ModalDirective, ModalModule } from 'ngx-bootstrap/modal';\n\n@NgModule({\n  declarations: [AddeditqueueComponent, QueuelistComponent],\n  imports: [\n    CommonModule, QueueRoutingModule, FormsModule, ReactiveFormsModule, NgSelectModule, NgxDatatableModule, SharedModule, OrderListModule, ModalModule\n  ]\n})\nexport class QueueModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3F1ZXVlL3F1ZXVlbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild, Output, EventEmitter, Input } from '@angular/core';\nimport { ModuleList, CommonService } from '../shared/common.service';\nimport { SelectionType, DatatableComponent } from '@swimlane/ngx-datatable';\nimport { QueueserviceService } from './queueservice.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { ConfirmationDialogService } from '../shared/confirmation-dialog/confirmation-dialog.service';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-queuelist',\n  templateUrl: './queuelist.component.html',\n  styleUrls: ['./queuelist.component.scss']\n})\nexport class QueuelistComponent implements OnInit {\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('assignpopup', { static: false }) assignpopupModel: ModalDirective;\n  @Input() offsetUserList: number;\n  @Input() offset: number;\n  moduleName = 'Queue';\n  submoduleName = 'queue';\n  tableName = 'tblQueue';\n  custom_view_id = '';\n  searchUserType = '';\n  loginuserid: any;\n  modulePermission: ModuleList;\n  loading = false;\n  sortDir = 'desc';\n  sortColumn = 'CreatedOn';\n  lstUserType: any;\n  pagedData: any = {\n    pager: {},\n    data: []\n  };\n  listFilter = '';\n  searchTxt = '';\n  listFiltertext = '';\n  lstPageSize: any\n  pageSizeValue: number;\n  statusid: any;\n  jsonData: any;\n  columndata: any;\n  columnheading: any;\n  totalRecords: any;\n  companyId: any;\n  searchFilter = '';\n  SelectionType = SelectionType;\n  currentdisable: '1'\n  currentPage: any;\n  deleteId: any;\n  selected = [];\n  is_filter: any;\n  substageid: any;\n  lstListingColorCode: any;\n  assigneduserList: any[] = [];\n  currentPageUserList: number;\n  listuserFilter = ''\n  lstPageSizeUserList: any\n  pageSizeValueUserList = 10;\n  sortDirUserList = 'desc';\n  sortColumnUserList = 'CreatedOn';\n  pagedDataUserList: any = {\n    pager: {},\n    data: []\n  };\n  queueid: any;\n  loadSave: boolean = false;\n\n\n\n  constructor(private queueserviceService: QueueserviceService, private dialogService: ConfirmationDialogService,\n    private commonService: CommonService, private router: Router,\n    private activeRoute: ActivatedRoute\n    , private toaster: ToastrService) {\n    const moduleCode = this.activeRoute.snapshot.data.moduleCode;\n    this.modulePermission = this.commonService.getPermission(moduleCode);\n\n    this.commonService.getLoggedInName.subscribe((userdetail: any) => {\n      this.loginuserid = userdetail.id;\n      this.companyId = userdetail.companyId;\n    });\n\n    this.commonService.getMasterItemsList(\"usertype\").subscribe((result: any) => {\n      this.lstUserType = this.commonService.masters;\n    })\n\n  }\n\n\n  ngOnInit() {\n    this.custom_view_id = '';\n    this.pageSizeValue = 15;\n    this.currentPage = 1;\n    this.getPageSizes();\n    this.refresh();\n  }\n\n  showpopUserCount(id: any) {\n    this.assigneduserList = [];\n    this.currentPageUserList = 1;\n    this.queueid = id\n    this.queueserviceService.GetQueueUserList(this.listuserFilter, this.sortColumnUserList, this.sortDirUserList, this.currentPageUserList, this.pageSizeValueUserList, this.queueid).subscribe(response => {\n      this.pagedDataUserList = response;\n      this.offsetUserList = this.currentPageUserList;\n      this.loading = false;\n    }, error => {\n      this.loading = false;\n    });\n    this.assignpopupModel.show(); \n  }\n  closemodel() {\n    this.assignpopupModel.hide();\n  }\n\n  get curPageUserList(): number {\n    return this.offsetUserList;\n  }\n  onChangeUserList($event) {\n    this.currentPageUserList = 1;\n    this.loading = true;\n    this.queueserviceService.GetQueueUserList(this.listuserFilter, this.sortColumnUserList, this.sortDirUserList, this.currentPageUserList, this.pageSizeValueUserList, this.queueid).subscribe(response => {\n      this.pagedDataUserList = response;\n\n      //for (var i = 0; i < this.pagedDataBankerList.data.length; i++) {\n      //  this.assignedBankerData.forEach(s => {\n      //    if (this.pagedDataBankerList.data[i].Email === s.Email) {\n      //      this.pagedDataBankerList.data[i].Status = s.Status;\n      //    }\n      //  })\n      //}\n\n      this.offsetUserList = this.currentPageUserList;\n      this.loading = false;\n    }, error => {\n      this.loading = false;\n    });\n  }\n\n  setPageUserList($event) {\n    this.loading = true;\n    this.currentPageUserList = $event.page ;\n    this.queueserviceService.GetQueueUserList(this.listuserFilter, this.sortColumnUserList, this.sortDirUserList, this.currentPageUserList, this.pageSizeValueUserList, this.queueid).subscribe(response => {\n      this.pagedDataUserList = response;\n\n      //for (var i = 0; i < this.pagedDataUserList.data.length; i++) {\n      //  this.assignedBankerData.forEach(s => {\n      //    if (this.pagedDataUserList.data[i].Email === s.Email) {\n      //      this.pagedDataUserList.data[i].Status = s.Status;\n      //    }\n      //  })\n      //}\n\n      this.offsetUserList = this.currentPageUserList;\n      this.loading = false;\n    }, error => {\n      this.loading = false;\n    });\n\n  }\n\n\n  getListingColorCode(fieldValue: any) {\n    this.lstListingColorCode = '';\n    if (fieldValue != null) {\n      this.lstListingColorCode = fieldValue.split('::');\n      if (this.lstListingColorCode.length > 0) {\n        this.lstListingColorCode = [{ color: this.lstListingColorCode[0], colorkey: this.lstListingColorCode[1] }]\n      }\n    }\n    console.log('this.lstListingColorCode', this.lstListingColorCode)\n    return this.lstListingColorCode;\n  }\n\n  GetcustomViewid(event) {\n    this.custom_view_id = event;\n    this.refresh();\n  }\n\n  ApplyAdvanceFilter(event) {\n    this.currentPage = 1;\n    this.listFiltertext = '';\n    this.listFiltertext = event;\n    this.refresh();\n  }\n\n  refresh() {\n    this.loading = true;\n    this.queueserviceService.GetQueueList(this.listFiltertext, this.sortColumn, this.currentPage, this.pageSizeValue, this.sortDir, this.loginuserid, this.moduleName, this.submoduleName, this.companyId, this.custom_view_id)\n      .subscribe(response => {\n        this.jsonData = response;\n        this.columndata = this.jsonData.data;\n        this.columnheading = this.jsonData.schema;\n        if (response.data.length > 0) {\n          this.totalRecords = this.columndata[0].total_records;\n        } else {\n          this.totalRecords = 0;\n        }\n        this.offset = this.currentPage;\n        this.loading = false;\n      }, error => {\n        this.loading = false;\n      });\n  }\n\n  getPageSizes() {\n    this.commonService.getMasterItemsList(\"PageSize\").subscribe((res: any) => {\n      this.lstPageSize = this.commonService.masters;\n      this.lstPageSizeUserList = this.commonService.masters;\n    })\n  }\n\n  setPage($event) {\n    this.loading = true;\n    this.currentPage = $event.page;\n    this.refresh();\n  }\n\n\n  onSort($event) {\n    const sort = $event.sorts[0]\n    this.sortDir = sort.dir;\n    this.sortColumn = sort.prop;\n    this.currentPage = 1;\n    this.refresh();\n  }\n\n  onChange($event) {\n    this.currentPage = 1;\n    this.refresh();\n  }\n\n\n  get curPage(): number {\n    return this.offset;\n  }\n\n\n  updateFilter(event) {\n    this.searchTxt = event.target.value;\n    let keycode = (event.keyCode ? event.keyCode : event.which);\n    if (keycode === 13 || keycode === '13') {\n      this.search();\n    }\n  }\n\n  search() {\n    this.currentPage = 1;\n    this.listFiltertext = '';\n    if (this.listFilter.trim().length > 0) {\n      this.listFiltertext = \"Name like '%\" + this.listFilter + \"%'\";\n    }\n    this.refresh();\n  }\n  reset() {\n    this.custom_view_id = '';\n    this.listFilter = '';\n    this.listFiltertext = '';\n    this.currentPage = 1;\n    this.refresh();\n  }\n  onSelect({ selected }) {\n    if (this.deleteId == \"\" || this.deleteId == null || this.deleteId == 'undefined') {\n      this.selected.splice(0, this.selected.length);\n      this.selected.push(...selected);\n      this.deleteId = null;\n      this.deleteId = \"\";\n      for (let i = 0; i < selected.length; i++) {\n        this.deleteId += selected[i].Id.toString() + \",\";\n      }\n    }\n    else {\n      this.deleteId = null;\n      this.deleteId = \"\";\n      for (let i = 0; i < selected.length; i++) {\n        this.deleteId += selected[i].Id.toString() + \",\";\n      }\n    }\n  }\n  deleteAll() {\n    if (this.deleteId != null && this.deleteId != \"\") {\n      const message = `Are you sure you want to delete Queue(s)\"`;\n      this.dialogService.confirm('Delete Queue(s)', message).subscribe(confirmed => {\n        if (confirmed) {\n          this.queueserviceService.DeleteRecords(this.deleteId, this.tableName).subscribe(r => {\n            this.toaster.success(`Record(s) has been deleted successfully`);\n            this.deleteId = \"\";\n            this.selected = [];\n            this.refresh();\n          }, error => {\n          });\n        }\n      });\n    }\n    else {\n      this.toaster.error(\"Please select at least one row.\");\n    }\n  }\n  Delete(row: any) {\n    const message = `Are you sure you want to delete Queue  \"${row.Name}\"?`;\n    this.dialogService.confirm('Delete Queue', message).subscribe(confirmed => {\n      if (confirmed) {\n        this.queueserviceService.DeleteRecords(row.Id, this.tableName).subscribe(r => {\n          this.toaster.success(`Queue \"${row.Name}\" has been deleted successfully`);\n          this.refresh();\n        }, error => {\n        });\n      }\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}