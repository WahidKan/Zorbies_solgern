{"version":3,"sources":["./src/app/views/role/role-add-or-edit.component.html","./src/app/views/role/role-view.component.html","./src/app/views/role/role.component.html","./src/app/views/role/roleedit.component.html","./src/app/views/role/userlistingpopup/userlistingpopup.component.html","./src/app/views/role/role-add-or-edit.component.scss","./src/app/views/role/role-add-or-edit.component.ts","./src/app/views/role/role-routing.module.ts","./src/app/views/role/role-view.component.scss","./src/app/views/role/role-view.component.ts","./src/app/views/role/role.component.scss","./src/app/views/role/role.component.ts","./src/app/views/role/role.module.ts","./src/app/views/role/role.service.ts","./src/app/views/role/roleedit.component.scss","./src/app/views/role/roleedit.component.ts","./src/app/views/role/userlistingpopup/userlistingpopup.component.scss","./src/app/views/role/userlistingpopup/userlistingpopup.component.ts"],"names":[],"mappings":"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","file":"views-role-role-module.js","sourcesContent":["export default \"<div class=\\\"header float-left w-100 mb-2\\\">\\r\\n  <h2 class=\\\"float-left pr-2\\\"><strong>Add Roles</strong></h2>\\r\\n  <div class=\\\"breadcrumb-wrapper\\\">\\r\\n    <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a routerLink=\\\"/dashboard\\\">Dashboard</a></li>\\r\\n      <li><a routerLink=\\\"/role\\\">Manage Roles</a></li>\\r\\n      <li class=\\\"active\\\">{{pageTitle}}</li>\\r\\n    </ol>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"clearfix\\\"></div>\\r\\n<div class=\\\"panel\\\">\\r\\n  <div class=\\\"panel-content \\\">\\r\\n    <form [formGroup]=\\\"roleForm\\\" autocomplete=\\\"off\\\">\\r\\n      <div class=\\\"row\\\" [ngClass]=\\\"{'disabled':loadSave}\\\">\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n          <label>Role Name:<span class=\\\"text-danger\\\"> *</span></label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Please enter name\\\" formControlName=\\\"roleName\\\"\\r\\n                   [ngClass]=\\\"{'is-invalid': (roleName.invalid && (roleName.dirty || roleName.touched) && (roleName.errors?.required || roleName.errors?.maxlength)) }\\\">\\r\\n\\r\\n            <small *ngIf=\\\"roleName.invalid && (roleName.dirty || roleName.touched) && roleName.errors?.required\\\"\\r\\n                   class=\\\"text-danger\\\">Role name is required</small>\\r\\n            <small *ngIf=\\\"roleName.invalid && (roleName.dirty || roleName.touched) && roleName.errors?.maxlength\\\"\\r\\n                   class=\\\"text-danger\\\">Role name must be less than 50 characters.</small>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n          <label>User Type:<span class=\\\"text-danger\\\">*</span></label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <ng-select [items]=\\\"lstUserType\\\" placeholder=\\\"Select User Type\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\" [attr.disabled]=\\\"isDisabled\\\" formControlName=\\\"userType\\\" (change)=\\\"selectUser($event)\\\"\\r\\n                       [ngClass]=\\\"{'is-invalid': (userType.invalid && (userType.dirty || userType.touched) && userType.errors?.required)}\\\"></ng-select>\\r\\n            <small *ngIf=\\\"userType.invalid && (userType.dirty || userType.touched) && userType.errors?.required\\\"\\r\\n                   class=\\\"text-danger\\\">Please select User Type</small>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n          <label>Status:<span class=\\\"text-danger\\\">*</span></label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <ng-select [items]=\\\"statuses\\\" [loading]=\\\"loadSave\\\" [closeOnSelect]=\\\"true\\\" placeholder=\\\"Select status\\\" formControlName=\\\"roleStatusId\\\"\\r\\n                       bindLabel=\\\"text\\\" bindValue=\\\"value\\\"\\r\\n                       [ngClass]=\\\"{'is-invalid': (roleStatusId.invalid && (roleStatusId.dirty || roleStatusId.touched) && roleStatusId.errors?.required) }\\\"></ng-select>\\r\\n            <small *ngIf=\\\"roleStatusId.invalid && (roleStatusId.dirty || roleStatusId.touched) && roleStatusId.errors?.required\\\"\\r\\n                   style=\\\"color:red;\\\">Please select Status</small>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n          <label>Report To:</label>\\r\\n          <div class=\\\"input-group mb-3\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Please enter name\\\" formControlName=\\\"reportto\\\" />\\r\\n            <div class=\\\"input-group-append bg-primary border-0 ml-1\\\">\\r\\n              <span class=\\\"input-group-text bg-primary border-0\\\"><a href=\\\"javascript:void(0);\\\" class=\\\"text-white\\\" (click)=\\\"openPopup()\\\">Report To</a></span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <label>Description:</label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <textarea rows=\\\"3\\\" class=\\\"form-control\\\" placeholder=\\\"Please enter description\\\" formControlName=\\\"roleDescription\\\"\\r\\n                      [ngClass]=\\\"{'is-invalid': (roleDescription.invalid && (roleDescription.dirty || roleDescription.touched) && roleDescription.errors?.maxlength) }\\\" style=\\\"height:auto;\\\"></textarea>\\r\\n\\r\\n            <small *ngIf=\\\"roleDescription.invalid && (roleDescription.dirty || roleDescription.touched) && roleDescription.errors?.maxlength\\\"\\r\\n                   class=\\\"text-danger\\\">Description must be less than 200 characters</small>\\r\\n          </div>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"col-md-12 pb-3 \\\">\\r\\n          <h3 _ngcontent-c1=\\\"\\\" class=\\\"form-heading ng-star-inserted ml-0\\\"><span _ngcontent-c1=\\\"\\\">Access Level </span></h3>\\r\\n          <label>For full control select the header checkbox. If you are select Add/Update/Delete Access Level then View permission will be given automatically.</label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n              <table class=\\\"table table-hover table-dynamic\\\" style=\\\"min-width:1024px;\\\">\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\">Module</th>\\r\\n                    <th scope=\\\"col\\\">\\r\\n                      <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                        <input type=\\\"checkbox\\\" id=\\\"customCheck\\\" class=\\\"custom-control-input\\\" value=\\\"add\\\" formControlName=\\\"addSelect\\\" (click)=\\\"enableSelectAll($event)\\\" />\\r\\n                        <label class=\\\"custom-control-label\\\" for=\\\"customCheck\\\">Add</label>\\r\\n                      </div>\\r\\n                    </th>\\r\\n                    <th scope=\\\"col\\\">\\r\\n                      <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                        <input type=\\\"checkbox\\\" id=\\\"viewall\\\" class=\\\"custom-control-input\\\" value=\\\"read\\\" formControlName=\\\"readSelect\\\" (click)=\\\"enableSelectAll($event)\\\" />\\r\\n                        <label class=\\\"custom-control-label\\\" for=\\\"viewall\\\">View</label>\\r\\n                      </div>\\r\\n                    </th>\\r\\n                    <th scope=\\\"col\\\">\\r\\n                      <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                        <input type=\\\"checkbox\\\" id=\\\"updateall\\\" class=\\\"custom-control-input\\\" value=\\\"update\\\" formControlName=\\\"updateSelect\\\" (click)=\\\"enableSelectAll($event)\\\" />\\r\\n                        <label class=\\\"custom-control-label\\\" for=\\\"updateall\\\">Update</label>\\r\\n                      </div>\\r\\n                    </th>\\r\\n                    <th scope=\\\"col\\\">\\r\\n                      <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                        <input type=\\\"checkbox\\\" id=\\\"deleteall\\\" class=\\\"custom-control-input\\\" value=\\\"delete\\\" formControlName=\\\"deleteSelect\\\" (click)=\\\"enableSelectAll($event)\\\" />\\r\\n                        <label class=\\\"custom-control-label\\\" for=\\\"deleteall\\\">Delete</label>\\r\\n                      </div>\\r\\n                    </th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody formArrayName=\\\"roleModules\\\">\\r\\n                  <ng-container *ngFor=\\\"let pmodule of parentModule; let i=inde\\\">\\r\\n                    <tr>\\r\\n                      <td colspan=\\\"5\\\" style=\\\"background:#f1f1f1\\\">\\r\\n                        <b>{{pmodule.roleModuleModuleName}}</b>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr *ngFor=\\\"let item of roleModules.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\r\\n                      <td *ngIf=\\\"pmodule.roleModuleId ==item.get('moduleParentModuleId').value \\\">\\r\\n                        {{item.get('roleModuleModuleName').value}}\\r\\n                      </td>\\r\\n                      <td scope=\\\"row\\\" *ngIf=\\\"item.get('isEnableAddPermission').value && pmodule.roleModuleId ==item.get('moduleParentModuleId').value\\\">\\r\\n                        <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                          <input type=\\\"checkbox\\\" id=\\\"Add_{{i}}\\\" class=\\\"custom-control-input\\\" formControlName=\\\"roleModuleAddFlag\\\" (click)=\\\"enableTopHeader('add',item,$event)\\\">\\r\\n                          <label class=\\\"custom-control-label\\\" for=\\\"Add_{{i}}\\\"></label>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                      <td scope=\\\"row\\\" *ngIf=\\\"!item.get('isEnableAddPermission').value && pmodule.roleModuleId ==item.get('moduleParentModuleId').value\\\"></td>\\r\\n                      <td scope=\\\"row\\\" *ngIf=\\\"item.get('isEnableReadPermission').value && pmodule.roleModuleId ==item.get('moduleParentModuleId').value\\\">\\r\\n                        <!--<input type=\\\"checkbox\\\" formControlName=\\\"roleModuleReadFlag\\\" (click)=\\\"enableTopHeader('read',item,$event)\\\">-->\\r\\n                        <div *ngIf=\\\"item.get('roleModuleIsViewShared').value==true && item.get('roleModuleIsViewAll').value==false\\\" class=\\\"custom-control-inline\\\">\\r\\n                          <div class=\\\"custom-control custom-radio pl-0\\\">\\r\\n                            <input id=\\\"ViewShared_{{i}}\\\" type=\\\"radio\\\" value=\\\"shared\\\" class=\\\"custom-control-input\\\" formControlName=\\\"roleModuleIsView\\\" (click)=\\\"enableTopHeader('read',item,$event)\\\">\\r\\n                            <label class=\\\"custom-control-label\\\" for=\\\"ViewShared_{{i}}\\\">View Shared</label>\\r\\n                          </div>\\r\\n                          <div class=\\\"custom-control custom-radio\\\">\\r\\n                            <input id=\\\"Viewnone_{{i}}\\\" type=\\\"radio\\\" value=\\\"none\\\" class=\\\"custom-control-input\\\" formControlName=\\\"roleModuleIsView\\\" (click)=\\\"enableTopHeader('read',item,$event)\\\">\\r\\n                            <label class=\\\"custom-control-label\\\" for=\\\"Viewnone_{{i}}\\\">None</label>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"item.get('roleModuleIsViewOwn').value==true && item.get('roleModuleIsViewAll').value==false\\\" class=\\\"custom-control-inline\\\">\\r\\n                          <div class=\\\"custom-control custom-radio  pl-0\\\">\\r\\n                            <input id=\\\"ViewOwn_{{i}}\\\" type=\\\"radio\\\" value=\\\"own\\\" class=\\\"custom-control-input\\\" formControlName=\\\"roleModuleIsView\\\" (click)=\\\"enableTopHeader('read',item,$event)\\\">\\r\\n                            <label class=\\\"custom-control-label\\\" for=\\\"ViewOwn_{{i}}\\\">View Own</label>\\r\\n                          </div>\\r\\n                          <div class=\\\"custom-control custom-radio\\\">\\r\\n                            <input id=\\\"Viewnone_{{i}}\\\" type=\\\"radio\\\" value=\\\"none\\\" class=\\\"custom-control-input\\\" formControlName=\\\"roleModuleIsView\\\" (click)=\\\"enableTopHeader('read',item,$event)\\\">\\r\\n                            <label class=\\\"custom-control-label\\\" for=\\\"Viewnone_{{i}}\\\">None</label>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"item.get('roleModuleIsViewAll').value==true\\\" class=\\\"custom-control-inline\\\">\\r\\n                          <div class=\\\"custom-control custom-radio  pl-0\\\">\\r\\n                            <input id=\\\"ViewAll_{{i}}\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" formControlName=\\\"roleModuleIsView\\\" value=\\\"all\\\" (click)=\\\"enableTopHeader('read',item,$event)\\\">\\r\\n                            <label class=\\\"custom-control-label\\\" for=\\\"ViewAll_{{i}}\\\">View All</label>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"custom-control custom-radio\\\">\\r\\n                            <input id=\\\"ViewShared_{{i}}\\\" type=\\\"radio\\\" value=\\\"shared\\\" class=\\\"custom-control-input\\\" formControlName=\\\"roleModuleIsView\\\" (click)=\\\"enableTopHeader('read',item,$event)\\\">\\r\\n                            <label class=\\\"custom-control-label\\\" for=\\\"ViewShared_{{i}}\\\">View Shared</label>\\r\\n                          </div>\\r\\n                          <div class=\\\"custom-control custom-radio\\\">\\r\\n                            <input id=\\\"ViewOwn_{{i}}\\\" type=\\\"radio\\\" value=\\\"own\\\" class=\\\"custom-control-input\\\" formControlName=\\\"roleModuleIsView\\\" (click)=\\\"enableTopHeader('read',item,$event)\\\">\\r\\n                            <label class=\\\"custom-control-label\\\" for=\\\"ViewOwn_{{i}}\\\">View Own</label>\\r\\n                          </div>\\r\\n                          <div class=\\\"custom-control custom-radio\\\">\\r\\n                            <input id=\\\"Viewnone_{{i}}\\\" type=\\\"radio\\\" value=\\\"none\\\" class=\\\"custom-control-input\\\" formControlName=\\\"roleModuleIsView\\\" (click)=\\\"enableTopHeader('read',item,$event)\\\">\\r\\n                            <label class=\\\"custom-control-label\\\" for=\\\"Viewnone_{{i}}\\\">None</label>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                      <td scope=\\\"row\\\" *ngIf=\\\"!item.get('isEnableReadPermission').value && pmodule.roleModuleId ==item.get('moduleParentModuleId').value\\\"></td>\\r\\n                      <td scope=\\\"row\\\" *ngIf=\\\"item.get('isEnableEditPermission').value && pmodule.roleModuleId ==item.get('moduleParentModuleId').value\\\">\\r\\n                        <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                          <input type=\\\"checkbox\\\" id=\\\"Update_{{i}}\\\" class=\\\"custom-control-input\\\" formControlName=\\\"roleModuleUpdateFlag\\\" (click)=\\\"enableTopHeader('update',item,$event)\\\">\\r\\n                          <label class=\\\"custom-control-label\\\" for=\\\"Update_{{i}}\\\"></label>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                      <td scope=\\\"row\\\" *ngIf=\\\"!item.get('isEnableEditPermission').value && pmodule.roleModuleId ==item.get('moduleParentModuleId').value\\\"></td>\\r\\n                      <td scope=\\\"row\\\" *ngIf=\\\"item.get('isEnableDeletePermission').value && pmodule.roleModuleId ==item.get('moduleParentModuleId').value\\\">\\r\\n                        <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                          <input type=\\\"checkbox\\\" id=\\\"delete_{{i}}\\\" class=\\\"custom-control-input\\\" formControlName=\\\"roleModuleDeleteFlag\\\" (click)=\\\"enableTopHeader('delete',item,$event)\\\">\\r\\n                          <label class=\\\"custom-control-label\\\" for=\\\"delete_{{i}}\\\"></label>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                      <td scope=\\\"row\\\" *ngIf=\\\"!item.get('isEnableDeletePermission').value && pmodule.roleModuleId ==item.get('moduleParentModuleId').value\\\"></td>\\r\\n                    </tr>\\r\\n                  </ng-container>\\r\\n\\r\\n                  <tr *ngFor=\\\"let item of roleModules.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\r\\n\\r\\n                    <td *ngIf=\\\"item.get('moduleParentModuleId').value =='0'\\\">\\r\\n                      {{item.get('roleModuleModuleName').value}}\\r\\n                    </td>\\r\\n\\r\\n                    <td scope=\\\"row\\\" *ngIf=\\\"item.get('isEnableAddPermission').value && item.get('moduleParentModuleId').value =='0'\\\">\\r\\n\\r\\n                      <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                        <input type=\\\"checkbox\\\" id=\\\"Add_{{i}}\\\" class=\\\"custom-control-input\\\" formControlName=\\\"roleModuleAddFlag\\\" (click)=\\\"enableTopHeader('add',item,$event)\\\">\\r\\n                        <label class=\\\"custom-control-label\\\" for=\\\"Add_{{i}}\\\"></label>\\r\\n                      </div>\\r\\n                    </td>\\r\\n                    <td scope=\\\"row\\\" *ngIf=\\\"!item.get('isEnableAddPermission').value && item.get('moduleParentModuleId').value =='0'\\\"></td>\\r\\n                    <td scope=\\\"row\\\" *ngIf=\\\"item.get('isEnableReadPermission').value && item.get('moduleParentModuleId').value =='0'\\\">\\r\\n                      <!--<input type=\\\"checkbox\\\" formControlName=\\\"roleModuleReadFlag\\\" (click)=\\\"enableTopHeader('read',item,$event)\\\">-->\\r\\n                      <div *ngIf=\\\"item.get('roleModuleIsViewShared').value==true && item.get('roleModuleIsViewAll').value==false\\\" class=\\\"custom-control-inline\\\">\\r\\n                        <div class=\\\"custom-control custom-radio  pl-0\\\">\\r\\n                          <input id=\\\"ViewShared_{{i}}\\\" type=\\\"radio\\\" value=\\\"shared\\\" class=\\\"custom-control-input\\\" formControlName=\\\"roleModuleIsView\\\" (click)=\\\"enableTopHeader('read',item,$event)\\\">\\r\\n                          <label class=\\\"custom-control-label\\\" for=\\\"ViewShared_{{i}}\\\">View Shared</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"custom-control custom-radio  pl-0\\\">\\r\\n                          <input id=\\\"Viewnone_{{i}}\\\" type=\\\"radio\\\" value=\\\"none\\\" class=\\\"custom-control-input\\\" formControlName=\\\"roleModuleIsView\\\" (click)=\\\"enableTopHeader('read',item,$event)\\\">\\r\\n                          <label class=\\\"custom-control-label\\\" for=\\\"Viewnone_{{i}}\\\">None</label>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"item.get('roleModuleIsViewOwn').value==true && item.get('roleModuleIsViewAll').value==false\\\" class=\\\"custom-control-inline\\\">\\r\\n                        <div class=\\\"custom-control custom-radio  pl-0\\\">\\r\\n                          <input id=\\\"ViewOwn_{{i}}\\\" type=\\\"radio\\\" value=\\\"own\\\" class=\\\"custom-control-input\\\" formControlName=\\\"roleModuleIsView\\\" (click)=\\\"enableTopHeader('read',item,$event)\\\">\\r\\n                          <label class=\\\"custom-control-label\\\" for=\\\"ViewOwn_{{i}}\\\">View Own</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"custom-control custom-radio\\\">\\r\\n                          <input id=\\\"Viewnone_{{i}}\\\" type=\\\"radio\\\" value=\\\"none\\\" class=\\\"custom-control-input\\\" formControlName=\\\"roleModuleIsView\\\" (click)=\\\"enableTopHeader('read',item,$event)\\\">\\r\\n                          <label class=\\\"custom-control-label\\\" for=\\\"Viewnone_{{i}}\\\">None</label>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"item.get('roleModuleIsViewAll').value==true\\\" class=\\\"custom-control-inline\\\">\\r\\n                        <div class=\\\"custom-control custom-radio  pl-0\\\">\\r\\n                          <input id=\\\"ViewAll_{{i}}\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" formControlName=\\\"roleModuleIsView\\\" value=\\\"all\\\" (click)=\\\"enableTopHeader('read',item,$event)\\\">\\r\\n                          <label class=\\\"custom-control-label\\\" for=\\\"ViewAll_{{i}}\\\">View All</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"custom-control custom-radio\\\">\\r\\n                          <input id=\\\"ViewShared_{{i}}\\\" type=\\\"radio\\\" value=\\\"shared\\\" class=\\\"custom-control-input\\\" formControlName=\\\"roleModuleIsView\\\" (click)=\\\"enableTopHeader('read',item,$event)\\\">\\r\\n                          <label class=\\\"custom-control-label\\\" for=\\\"ViewShared_{{i}}\\\">View Shared</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"custom-control custom-radio\\\">\\r\\n                          <input id=\\\"ViewOwn_{{i}}\\\" type=\\\"radio\\\" value=\\\"own\\\" class=\\\"custom-control-input\\\" formControlName=\\\"roleModuleIsView\\\" (click)=\\\"enableTopHeader('read',item,$event)\\\">\\r\\n                          <label class=\\\"custom-control-label\\\" for=\\\"ViewOwn_{{i}}\\\">View Own</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"custom-control custom-radio\\\">\\r\\n                          <input id=\\\"Viewnone_{{i}}\\\" type=\\\"radio\\\" value=\\\"none\\\" class=\\\"custom-control-input\\\" formControlName=\\\"roleModuleIsView\\\" (click)=\\\"enableTopHeader('read',item,$event)\\\">\\r\\n                          <label class=\\\"custom-control-label\\\" for=\\\"Viewnone_{{i}}\\\">None</label>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </td>\\r\\n                    <td scope=\\\"row\\\" *ngIf=\\\"!item.get('isEnableReadPermission').value && item.get('moduleParentModuleId').value =='0'\\\"></td>\\r\\n                    <td scope=\\\"row\\\" *ngIf=\\\"item.get('isEnableEditPermission').value && item.get('moduleParentModuleId').value =='0'\\\">\\r\\n                      <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                        <input type=\\\"checkbox\\\" id=\\\"Update_{{i}}\\\" class=\\\"custom-control-input\\\" formControlName=\\\"roleModuleUpdateFlag\\\" (click)=\\\"enableTopHeader('update',item,$event)\\\">\\r\\n                        <label class=\\\"custom-control-label\\\" for=\\\"Update_{{i}}\\\"></label>\\r\\n                      </div>\\r\\n                    </td>\\r\\n                    <td scope=\\\"row\\\" *ngIf=\\\"!item.get('isEnableEditPermission').value && item.get('moduleParentModuleId').value =='0'\\\"></td>\\r\\n                    <td scope=\\\"row\\\" *ngIf=\\\"item.get('isEnableDeletePermission').value && item.get('moduleParentModuleId').value =='0'\\\">\\r\\n                      <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                        <input type=\\\"checkbox\\\" id=\\\"delete_{{i}}\\\" class=\\\"custom-control-input\\\" formControlName=\\\"roleModuleDeleteFlag\\\" (click)=\\\"enableTopHeader('delete',item,$event)\\\">\\r\\n                        <label class=\\\"custom-control-label\\\" for=\\\"delete_{{i}}\\\"></label>\\r\\n                      </div>                      \\r\\n                    </td>\\r\\n                    <td scope=\\\"row\\\" *ngIf=\\\"!item.get('isEnableDeletePermission').value && item.get('moduleParentModuleId').value =='0'\\\"></td>\\r\\n                  </tr>\\r\\n\\r\\n                  <!--<ng-container *ngFor=\\\"let pmodule of parentModule; let i=inde\\\">\\r\\n                    <tr style=\\\"background-color:#929292;\\\">\\r\\n                      <td colspan=\\\"5\\\">\\r\\n\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr *ngFor=\\\"let item of roleModules.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\r\\n                      <td *ngIf=\\\"pmodule.roleModuleId !=item.get('moduleParentModuleId').value \\\">\\r\\n                        {{item.get('roleModuleModuleName').value}}\\r\\n                      </td>\\r\\n                      <td scope=\\\"row\\\" *ngIf=\\\"item.get('isEnableAddPermission').value && pmodule.roleModuleId !=item.get('moduleParentModuleId').value\\\"><input type=\\\"checkbox\\\" formControlName=\\\"roleModuleAddFlag\\\" (click)=\\\"enableTopHeader('add',item,$event)\\\"></td>\\r\\n                      <td scope=\\\"row\\\" *ngIf=\\\"!item.get('isEnableAddPermission').value && pmodule.roleModuleId !=item.get('moduleParentModuleId').value\\\"></td>\\r\\n                      <td scope=\\\"row\\\" *ngIf=\\\"item.get('isEnableReadPermission').value && pmodule.roleModuleId !=item.get('moduleParentModuleId').value\\\"><input type=\\\"checkbox\\\" formControlName=\\\"roleModuleReadFlag\\\" (click)=\\\"enableTopHeader('read',item,$event)\\\"></td>\\r\\n                      <td scope=\\\"row\\\" *ngIf=\\\"!item.get('isEnableReadPermission').value && pmodule.roleModuleId !=item.get('moduleParentModuleId').value\\\"></td>\\r\\n                      <td scope=\\\"row\\\" *ngIf=\\\"item.get('isEnableEditPermission').value && pmodule.roleModuleId !=item.get('moduleParentModuleId').value\\\"><input type=\\\"checkbox\\\" formControlName=\\\"roleModuleUpdateFlag\\\" (click)=\\\"enableTopHeader('update',item,$event)\\\"></td>\\r\\n                      <td scope=\\\"row\\\" *ngIf=\\\"!item.get('isEnableEditPermission').value && pmodule.roleModuleId !=item.get('moduleParentModuleId').value\\\"></td>\\r\\n                      <td scope=\\\"row\\\" *ngIf=\\\"item.get('isEnableDeletePermission').value && pmodule.roleModuleId !=item.get('moduleParentModuleId').value\\\"><input type=\\\"checkbox\\\" formControlName=\\\"roleModuleDeleteFlag\\\" (click)=\\\"enableTopHeader('delete',item,$event)\\\"></td>\\r\\n                      <td scope=\\\"row\\\" *ngIf=\\\"!item.get('isEnableDeletePermission').value && pmodule.roleModuleId !=item.get('moduleParentModuleId').value\\\"></td>\\r\\n\\r\\n                  </ng-container>-->\\r\\n                  <!--<tr *ngFor=\\\"let pmodule of parentModule; let i=index\\\">\\r\\n                    <td colspan=\\\"5\\\">\\r\\n                      {{pmodule.roleModuleModuleName}}\\r\\n                      <table width=\\\"100%\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"\\\">\\r\\n                        <tbody>\\r\\n                          <tr *ngFor=\\\"let item of roleModules.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\r\\n                            <td width=\\\"150\\\" *ngIf=\\\"pmodule.roleModuleId ==item.get('moduleParentModuleId').value\\\">\\r\\n                              {{item.get('roleModuleModuleName').value}}\\r\\n                            </td>\\r\\n                            <td scope=\\\"row\\\" *ngIf=\\\"item.get('isEnableAddPermission').value && pmodule.roleModuleId ==item.get('moduleParentModuleId').value\\\"><input type=\\\"checkbox\\\" formControlName=\\\"roleModuleAddFlag\\\" (click)=\\\"enableTopHeader('add',item,$event)\\\"></td>\\r\\n                            <td scope=\\\"row\\\" *ngIf=\\\"!item.get('isEnableAddPermission').value && pmodule.roleModuleId ==item.get('moduleParentModuleId').value\\\"></td>\\r\\n                            <td scope=\\\"row\\\" *ngIf=\\\"item.get('isEnableReadPermission').value && pmodule.roleModuleId ==item.get('moduleParentModuleId').value\\\"><input type=\\\"checkbox\\\" formControlName=\\\"roleModuleReadFlag\\\" (click)=\\\"enableTopHeader('read',item,$event)\\\"></td>\\r\\n                            <td scope=\\\"row\\\" *ngIf=\\\"!item.get('isEnableReadPermission').value && pmodule.roleModuleId ==item.get('moduleParentModuleId').value\\\"></td>\\r\\n                            <td scope=\\\"row\\\" *ngIf=\\\"item.get('isEnableEditPermission').value && pmodule.roleModuleId ==item.get('moduleParentModuleId').value\\\"><input type=\\\"checkbox\\\" formControlName=\\\"roleModuleUpdateFlag\\\" (click)=\\\"enableTopHeader('update',item,$event)\\\"></td>\\r\\n                            <td scope=\\\"row\\\" *ngIf=\\\"!item.get('isEnableEditPermission').value && pmodule.roleModuleId ==item.get('moduleParentModuleId').value\\\"></td>\\r\\n                            <td scope=\\\"row\\\" *ngIf=\\\"item.get('isEnableDeletePermission').value && pmodule.roleModuleId ==item.get('moduleParentModuleId').value\\\"><input type=\\\"checkbox\\\" formControlName=\\\"roleModuleDeleteFlag\\\" (click)=\\\"enableTopHeader('delete',item,$event)\\\"></td>\\r\\n                            <td scope=\\\"row\\\" *ngIf=\\\"!item.get('isEnableDeletePermission').value && pmodule.roleModuleId ==item.get('moduleParentModuleId').value\\\"></td>\\r\\n                          </tr>\\r\\n                        </tbody>\\r\\n                      </table>\\r\\n                    </td>\\r\\n                  </tr>-->\\r\\n                  <!--<tr *ngFor=\\\"let item of roleModules.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\r\\n                    <td>\\r\\n                      {{item.get('roleModuleModuleName').value}}\\r\\n                    </td>\\r\\n                    <td scope=\\\"row\\\" *ngIf=\\\"item.get('isEnableAddPermission').value\\\"><input type=\\\"checkbox\\\" formControlName=\\\"roleModuleAddFlag\\\" (click)=\\\"enableTopHeader('add',item,$event)\\\"></td>\\r\\n                    <td scope=\\\"row\\\" *ngIf=\\\"!item.get('isEnableAddPermission').value\\\"></td>\\r\\n                    <td scope=\\\"row\\\" *ngIf=\\\"item.get('isEnableReadPermission').value\\\"><input type=\\\"checkbox\\\" formControlName=\\\"roleModuleReadFlag\\\" (click)=\\\"enableTopHeader('read',item,$event)\\\"></td>\\r\\n                    <td scope=\\\"row\\\" *ngIf=\\\"!item.get('isEnableReadPermission').value\\\"></td>\\r\\n                    <td scope=\\\"row\\\" *ngIf=\\\"item.get('isEnableEditPermission').value\\\"><input type=\\\"checkbox\\\" formControlName=\\\"roleModuleUpdateFlag\\\" (click)=\\\"enableTopHeader('update',item,$event)\\\"></td>\\r\\n                    <td scope=\\\"row\\\" *ngIf=\\\"!item.get('isEnableEditPermission').value\\\"></td>\\r\\n                    <td scope=\\\"row\\\" *ngIf=\\\"item.get('isEnableDeletePermission').value\\\"><input type=\\\"checkbox\\\"  formControlName=\\\"roleModuleDeleteFlag\\\" (click)=\\\"enableTopHeader('delete',item,$event)\\\"></td>\\r\\n                   <td scope=\\\"row\\\" *ngIf=\\\"!item.get('isEnableDeletePermission').value\\\"></td>\\r\\n                  </tr>-->\\r\\n\\r\\n                  <tr *ngIf=\\\"roleModules.length==0\\\">\\r\\n                    <td colspan=\\\"6\\\" class=\\\"empty-row text-danger text-center\\\">\\r\\n                      Please select User Type to view Modules\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n              <ng-template #loadRoleModules>\\r\\n                <div class=\\\"card\\\">\\r\\n                  <div class=\\\"card-body normal margin-loadr p-5\\\">\\r\\n                    <app-loader [size]=60 [color]=\\\"'white'\\\" class=\\\"loader\\\"></app-loader>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n            <small *ngIf=\\\"roleModules.invalid && (roleModules.dirty || roleModules.touched) && roleModules.errors?.maxlength\\\"\\r\\n                   class=\\\"text-danger\\\">Please select atleast any one module.</small>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 mb-4\\\">\\r\\n          <!--*ngIf=\\\"addOrUpdatePermission\\\"-->\\r\\n          <a href=\\\"javascript:void(0);\\\" class=\\\"btn btn-success mr-2\\\" *ngIf=\\\"addOrUpdatePermission\\\"  (click)=\\\"save()\\\"><i class=\\\"fa fa-save\\\"></i> Submit</a>\\r\\n          <a href=\\\"javascript:void(0);\\\" class=\\\"btn btn-danger\\\" (click)=\\\"cancelForm()\\\"><i class=\\\"fa fa-times\\\"></i> Cancel</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n  <app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader\\\"></app-loader>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade in show\\\" bsModal #treepopup=\\\"bs-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" style=\\\"display: none; padding-right: 10px;\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg modal-info \\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Report To</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"ClosePopup()\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <p-tree [value]=\\\"files2\\\" [(selection)]=\\\"reportid\\\" class=\\\"w-100\\\" selectionMode=\\\"single\\\" (onNodeSelect)=\\\"nodeSelect($event)\\\"></p-tree>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-danger form-btns\\\" (click)=\\\"ClosePopup()\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><i class=\\\"fa fa-times text-white\\\"></i> Cancel</button>\\r\\n      </div>\\r\\n      <!--<app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader-popup\\\"></app-loader>-->\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<p>\\n  role-view works!\\n</p>\\n\"","export default \"<!-- Breadcrumb-->\\r\\n<div class=\\\"header float-left w-100 mb-2\\\">\\r\\n  <h2 class=\\\"float-left pr-2\\\"><strong>Manage Roles</strong></h2>\\r\\n  <div class=\\\"breadcrumb-wrapper\\\">\\r\\n    <ol class=\\\"breadcrumb\\\">\\r\\n      <li>\\r\\n        <a routerLink=\\\"/dashboard\\\">Dashboard</a>\\r\\n      </li>\\r\\n      <li class=\\\"active\\\">Manage Roles</li>\\r\\n    </ol>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"clearfix\\\"></div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12 portlets\\\">\\r\\n    <div class=\\\"panel\\\">\\r\\n      <div class=\\\"panel-header border-bottom pb-3  btn-iconres\\\">\\r\\n        <div class=\\\"row mt-2\\\">\\r\\n          <div class=\\\"col-md-12 col-xl-8\\\">\\r\\n            <div class=\\\"row searchfield\\\">\\r\\n              <div class=\\\"col-lg-3 float-left mb-lg-0 mb-2\\\">\\r\\n                <input class=\\\"form-control input-sm\\\" type=\\\"text\\\" [(ngModel)]='listFilter' placeholder=\\\"Search By Name\\\" (keyup)='updateFilter($event)'>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-3 float-left mb-lg-0 mb-2 pl-3 pl-lg-0\\\">\\r\\n                <ng-select #clearDrp [items]=\\\"roledata\\\" placeholder=\\\"Select User Type\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\" [closeOnSelect]=\\\"true\\\" (change)=\\\"SetUserTypeValue($event.value)\\\"\\r\\n                           (clear)=\\\"restUserTypeddl()\\\">\\r\\n                </ng-select>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-6 float-left pl-3 pl-lg-0\\\">\\r\\n                <a class=\\\"btn btn-success form-btns mr-1\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"search()\\\" tooltip=\\\"Search\\\"><span><i class=\\\"fa fa-search\\\"></i></span></a>\\r\\n                <a class=\\\"btn btn-danger form-btns mr-1\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"reset()\\\" tooltip=\\\"Reset\\\"><span><i class=\\\"fa fa-refresh\\\"></i></span></a>\\r\\n                <!--<a class=\\\"btn btn-white form-btns\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"popUpOpen()\\\"><span><i class=\\\"fa fa-filter\\\"></i> Filter</span></a>-->\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12 col-xl-4\\\">\\r\\n            <div class=\\\"dt-buttons\\\">\\r\\n              <!--<a class=\\\"btn btn-primary form-btns mr-1\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"displayDetailDetail($event)\\\"><span><i class=\\\"fa fa-list-alt\\\"></i> Manage View</span></a>-->\\r\\n              <a class=\\\"btn btn-success mr-1\\\" routerLink=\\\"/role/addrole\\\" *ngIf='isAdd' tooltip=\\\"Add Role\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n              <a  class=\\\"btn btn-danger form-btns\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"deleteAll()\\\" tooltip=\\\"Delete\\\"><span><i class=\\\"fa fa-trash\\\"></i></span></a>\\r\\n              <!--<a class=\\\"btn btn-success form-btns\\\" routerLink=\\\"/role/editrole123\\\" *ngIf='modulePermission!==null && modulePermission.roleModuleAddFlag'><span><i class=\\\"fa fa-plus\\\"></i>Add Role21</span></a>-->\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"panel-content px-3 pagination2 table-responsive no-padding\\\">\\r\\n        <ngx-datatable #table class=\\\"bootstrap table table-hover table-dynamic\\\"\\r\\n                       [rows]=\\\"pagedData.data\\\"\\r\\n                       [scrollbarH]=\\\"true\\\"\\r\\n                       [rowHeight]=\\\"'40'\\\"\\r\\n                       [columnMode]=\\\"'force'\\\"\\r\\n                       [headerHeight]=\\\"40\\\"\\r\\n                       [footerHeight]=\\\"40\\\"\\r\\n                       [externalPaging]=\\\"true\\\"\\r\\n                       [externalSorting]=\\\"true\\\"\\r\\n                       [loadingIndicator]=\\\"loadSave\\\"\\r\\n                       [count]=\\\"pagedData.pager.totalItems\\\"\\r\\n                       [offset]=\\\"pagedData.pager.currentPage\\\"\\r\\n                       [limit]=\\\"pagedData.pager.pageSize\\\"\\r\\n                       (page)='setPage($event)'\\r\\n                       (sort)=\\\"onSort($event)\\\"\\r\\n                       [selectionType]=\\\"SelectionType.checkbox\\\"\\r\\n                       [selectAllRowsOnPage]=\\\"false\\\"\\r\\n                       [selected]=\\\"selected\\\"\\r\\n                       (select)=\\\"onSelect($event)\\\">\\r\\n          <ngx-datatable-column [width]=\\\"42\\\"\\r\\n                                [sortable]=\\\"false\\\"\\r\\n                                [canAutoResize]=\\\"false\\\"\\r\\n                                [draggable]=\\\"false\\\"\\r\\n                                [resizeable]=\\\"false\\\"\\r\\n                                [headerCheckboxable]=\\\"true\\\"\\r\\n                                [checkboxable]=\\\"true\\\">\\r\\n          </ngx-datatable-column>\\r\\n          <ngx-datatable-column *ngIf=\\\"isUpdate\\\" name=\\\"Role Name\\\" [sortable]=\\\"true\\\">\\r\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n              <a href=\\\"javascript:void(0);\\\" [routerLink]=\\\"['/role/editrole',row.RoleId]\\\">{{row.RoleName}}</a>\\r\\n            </ng-template>\\r\\n          </ngx-datatable-column>\\r\\n          <ngx-datatable-column *ngIf=\\\"!isUpdate\\\" name=\\\"Role Name\\\" prop=\\\"RoleName\\\" [sortable]=\\\"true\\\"></ngx-datatable-column>\\r\\n          <ngx-datatable-column name=\\\"User Type\\\" sortable=\\\"true\\\" prop=\\\"UserType\\\"></ngx-datatable-column>\\r\\n          <ngx-datatable-column name=\\\"Number of Users\\\" sortable=\\\"true\\\" prop=\\\"RoleCount\\\">\\r\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n              <a href=\\\"javascript:void(0);\\\" (click)=\\\"ShowUsersListPopup(row)\\\">{{row.RoleCount}}</a>\\r\\n            </ng-template>\\r\\n          </ngx-datatable-column>\\r\\n\\r\\n          <ngx-datatable-column name=\\\"Action\\\" [sortable]=\\\"false\\\" headerClass=\\\"text-center\\\" [maxWidth]=\\\"100\\\">\\r\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n              <div class=\\\"text-center\\\">\\r\\n                <a *ngIf='isUpdate' [routerLink]=\\\"['/role/editrole',row.RoleId]\\\" title=\\\"Edit\\\"><i class=\\\"fa fa-pencil text-success pr-2\\\"></i></a>\\r\\n                <!--<a [routerLink]=\\\"['/role/editrole123',row.RoleId]\\\" title=\\\"Edit\\\"><i class=\\\"fa fa-pencil text-secondary pr-2\\\"></i></a>-->\\r\\n                <a href=\\\"javascript:void(0);\\\" *ngIf=\\\"(row.asociatedUser==null ||row.asociatedUser==0) && isDelete\\\" (click)=\\\"DeleteRole(row)\\\" class=\\\"text-danger mx-1\\\">\\r\\n                  <i title=\\\"Click to delete.\\\"\\r\\n                     class=\\\"fa fa-trash\\\"></i>\\r\\n                </a>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n          </ngx-datatable-column>\\r\\n\\r\\n          <ngx-datatable-footer>\\r\\n            <ng-template class=\\\"selected-count\\\" ngx-datatable-footer-template\\r\\n                         let-rowCount=\\\"rowCount\\\"\\r\\n                         let-pageSize=\\\"pageSize\\\"\\r\\n                         let-selectedCount=\\\"selectedCount\\\"\\r\\n                         let-currentPage=\\\"currentPage\\\"\\r\\n                         let-offset=\\\"offset\\\"\\r\\n                         let-isVisible=\\\"isVisible\\\">\\r\\n              <div>\\r\\n                <div style=\\\"color:black; margin-right:10px;\\\" class=\\\"page-size-record\\\" *ngIf='(rowCount  > 0)'>\\r\\n                  <span style=\\\"text-align:right; width:80px;vertical-align: middle;\\\">\\r\\n                    <ng-select [searchable]=\\\"false\\\" [items]=\\\"lstPageSize\\\" appendTo=\\\"body\\\" [(ngModel)]='pageSizeValue' dropzone=\\\"fixed\\\" [clearable]=\\\"false\\\" (change)=\\\"onChange($event)\\\" draggable=\\\"false\\\" [closeOnSelect]=\\\"true\\\"\\r\\n                               bindLabel=\\\"text\\\" bindValue=\\\"text\\\"></ng-select>\\r\\n                  </span>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"page-count\\\" *ngIf='(rowCount  > 0)'>\\r\\n                <!--Showing {{(curPage - 1 )* pageSizeValue + 1}}  to {{curPage * pageSizeValue}} out of {{rowCount}}  enteries-->\\r\\n                {{commonService.PageString(curPage,pageSizeValue,rowCount)}}\\r\\n\\r\\n              </div>\\r\\n              <datatable-pager [pagerLeftArrowIcon]=\\\"'fa fa-angle-left'\\\"\\r\\n                               [pagerRightArrowIcon]=\\\"'fa fa-angle-right'\\\"\\r\\n                               [pagerPreviousIcon]=\\\"'fa fa-angle-double-left'\\\"\\r\\n                               [pagerNextIcon]=\\\"'fa fa-angle-double-right'\\\"\\r\\n                               [page]=\\\"curPage\\\"\\r\\n                               [size]=\\\"pageSizeValue\\\"\\r\\n                               [count]=\\\"pagedData.pager.totalItems\\\"\\r\\n                               [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\r\\n                               (change)=\\\"setPage($event)\\\">\\r\\n              </datatable-pager>\\r\\n\\r\\n            </ng-template>\\r\\n          </ngx-datatable-footer>\\r\\n        </ngx-datatable>\\r\\n\\r\\n      </div>\\r\\n      <app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader\\\"></app-loader>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-searchfilteradd (searchFilterCondition)=\\\"ApplyAdvanceFilter($event)\\\" #templateFilterView moduleName=\\\"crm\\\" subModuleName=\\\"lead\\\"></app-searchfilteradd>\\r\\n<app-manageview (customViewid)=\\\"GetcustomViewid($event)\\\" #templateManageView moduleName=\\\"crm\\\" subModuleName=\\\"lead\\\"></app-manageview>\\r\\n<app-userlistingpopup #ServiceUsersListPopUp></app-userlistingpopup>\\r\\n\\r\\n\\r\\n\"","export default \"<div class=\\\"header float-left w-100 mb-2\\\">\\r\\n  <h2 class=\\\"float-left pr-2\\\"><strong>Add Roles</strong></h2>\\r\\n  <div class=\\\"breadcrumb-wrapper\\\">\\r\\n    <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a routerLink=\\\"/dashboard\\\">Dashboard</a></li>\\r\\n      <li><a routerLink=\\\"/role\\\">Manage Roles</a></li>\\r\\n      <li class=\\\"active\\\">{{pageTitle}}</li>\\r\\n    </ol>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"clearfix\\\"></div>\\r\\n<div class=\\\"panel\\\">\\r\\n  <div class=\\\"panel-content \\\">\\r\\n    <form [formGroup]=\\\"roleForm\\\" autocomplete=\\\"off\\\">\\r\\n      <div class=\\\"row\\\" [ngClass]=\\\"{'disabled':loadSave}\\\">\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n          <label>Role Name:<span class=\\\"text-danger\\\"> *</span></label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Please enter name\\\" formControlName=\\\"roleName\\\"\\r\\n                   [ngClass]=\\\"{'is-invalid': (roleName.invalid && (roleName.dirty || roleName.touched) && (roleName.errors?.required || roleName.errors?.maxlength)) }\\\">\\r\\n\\r\\n            <small *ngIf=\\\"roleName.invalid && (roleName.dirty || roleName.touched) && roleName.errors?.required\\\"\\r\\n                   class=\\\"text-danger\\\">Role name is required</small>\\r\\n            <small *ngIf=\\\"roleName.invalid && (roleName.dirty || roleName.touched) && roleName.errors?.maxlength\\\"\\r\\n                   class=\\\"text-danger\\\">Role name must be less than 50 characters.</small>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n          <label>User Type:<span class=\\\"text-danger\\\">*</span></label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <ng-select [items]=\\\"lstUserType\\\" placeholder=\\\"Select User Type\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\" [attr.disabled]=\\\"isDisabled\\\" formControlName=\\\"userType\\\" (change)=\\\"selectUser($event)\\\"\\r\\n                       [ngClass]=\\\"{'is-invalid': (userType.invalid && (userType.dirty || userType.touched) && userType.errors?.required)}\\\"></ng-select>\\r\\n            <small *ngIf=\\\"userType.invalid && (userType.dirty || userType.touched) && userType.errors?.required\\\"\\r\\n                   class=\\\"text-danger\\\">Please select User Type</small>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n          <label>Status:<span class=\\\"text-danger\\\">*</span></label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <ng-select [items]=\\\"statuses\\\" [loading]=\\\"loadSave\\\" [closeOnSelect]=\\\"true\\\" placeholder=\\\"Select status\\\" formControlName=\\\"roleStatusId\\\"\\r\\n                       bindLabel=\\\"text\\\" bindValue=\\\"value\\\"\\r\\n                       [ngClass]=\\\"{'is-invalid': (roleStatusId.invalid && (roleStatusId.dirty || roleStatusId.touched) && roleStatusId.errors?.required) }\\\"></ng-select>\\r\\n            <small *ngIf=\\\"roleStatusId.invalid && (roleStatusId.dirty || roleStatusId.touched) && roleStatusId.errors?.required\\\"\\r\\n                   style=\\\"color:red;\\\">Please select Status</small>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\" *ngIf=\\\"!isLoanHomi\\\">\\r\\n          <label>Report To:</label>\\r\\n          <div class=\\\"input-group mb-3\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Please enter name\\\" formControlName=\\\"reportto\\\" />\\r\\n            <div class=\\\"input-group-append bg-primary border-0 ml-1\\\">\\r\\n              <span class=\\\"input-group-text bg-primary border-0\\\"><a href=\\\"javascript:void(0);\\\" class=\\\"text-white\\\" (click)=\\\"openPopup()\\\"><i class=\\\"fa fa-user mr-1\\\"></i>Report To</a></span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <label>Description:</label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <textarea rows=\\\"3\\\" class=\\\"form-control\\\" placeholder=\\\"Please enter description\\\" formControlName=\\\"roleDescription\\\"\\r\\n                      [ngClass]=\\\"{'is-invalid': (roleDescription.invalid && (roleDescription.dirty || roleDescription.touched) && roleDescription.errors?.maxlength) }\\\" style=\\\"height:auto;\\\"></textarea>\\r\\n            <small *ngIf=\\\"roleDescription.invalid && (roleDescription.dirty || roleDescription.touched) && roleDescription.errors?.maxlength\\\"\\r\\n                   class=\\\"text-danger\\\">Description must be less than 200 characters</small>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-12 col-md-12 col-lg-12\\\" *ngIf=\\\"tabshow\\\"><h3 class=\\\"form-heading ng-star-inserted ml-0 mt-0 mb-3\\\"><span>Module Privileges:</span></h3></div>\\r\\n        <div class=\\\"col-md-12 mb-12\\\">\\r\\n          <div id=\\\"accordion\\\" *ngIf=\\\"tabshow\\\" class=\\\"panel-group accordion mb-3 resp-adbtn\\\">\\r\\n            <ng-container *ngFor=\\\"let t of tabdata\\\">\\r\\n              <div class=\\\"panel\\\" *ngFor=\\\"let s of t.SUB_MODULES; let i=index\\\">\\r\\n                <div class=\\\"panel-heading\\\">\\r\\n                  <h4 class=\\\"panel-title\\\">\\r\\n                    <a href=\\\"javascript:void(0);\\\" class=\\\"accordion-toggle collapsed\\\" data-toggle=\\\"collapse\\\" [attr.data-target]=\\\"'#collapse'+s.SUB_MODULE_ID\\\"> <span>{{s.SUB_MODULE_NAME}}</span></a>\\r\\n\\r\\n                  </h4>\\r\\n                  <div class=\\\"btn-in-panel\\\">\\r\\n                    <div class=\\\"custom-control custom-checkbox pr-2\\\">\\r\\n                      <input class=\\\"custom-control-input\\\" [checked]=\\\"t.parentIsSelected\\\" type=\\\"checkbox\\\" (change)=\\\"onChangeMainCheckbox($event,s.SUB_MODULE_ID,s)\\\" [id]=\\\"s.SUB_MODULE_ID\\\">\\r\\n                      <label class=\\\"custom-control-label text-capitalize\\\" [for]=\\\"s.SUB_MODULE_ID\\\">\\r\\n\\r\\n                      </label>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div [attr.id]=\\\"'collapse'+s.SUB_MODULE_ID\\\" class=\\\"panel-collapse collapse\\\" aria-labelledby=\\\"headingOne\\\" data-parent=\\\"#accordion\\\">\\r\\n                  \\r\\n\\r\\n                  <div class=\\\"panel-body mt-0\\\">\\r\\n                    <div class=\\\"table-responsive\\\">\\r\\n                      <table class=\\\"table\\\" style=\\\"min-width: 100%;\\\">\\r\\n                        <tbody>\\r\\n                          <ng-container *ngFor=\\\"let type of getUniquePriviledgesType(s.PRIVILEGE_LISTS)\\\">\\r\\n                            <ng-container *ngFor=\\\"let p of getPriviledgesByType(s.PRIVILEGE_LISTS, type); let pIndex = index\\\">\\r\\n\\r\\n                              <tr *ngIf=\\\"pIndex == 0 && p.PRIVILEGE_TYPE!='URL'\\\" class=\\\"widget-heading\\\">\\r\\n                                <td><strong>{{p.PRIVILEGE_TYPE}}s</strong></td>\\r\\n                              </tr>\\r\\n                              <tr [ngClass]=\\\"{'widgets': p.PRIVILEGE_TYPE=='Widget'}\\\">\\r\\n\\r\\n                                <td class=\\\"fulwith-radio-n-check px-0\\\">\\r\\n                                  <div class=\\\"custom-control custom-checkbox p-0\\\" *ngIf=\\\" !p.IS_SUB_CHILD && p.SUB_CHILD_GROUP == 0 ||p.PARENT_ID == 0 \\\">\\r\\n\\r\\n                                    <div class=\\\"clearfix\\\"></div>\\r\\n                                    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\"\\r\\n                                           [id]=\\\"p.PRIVILEGE_ID\\\" [checked]=\\\"p.IS_Selected\\\" (change)=\\\"onChange(p.PRIVILEGE_ID,$event,p,s.PRIVILEGE_LISTS)\\\" name=\\\"example1\\\">\\r\\n                                    <label class=\\\"custom-control-label text-capitalize w-100\\\" style=\\\"font-weight:600;\\\" [for]=\\\"p.PRIVILEGE_ID\\\"><i *ngIf=\\\"p.PRIVILEGE_TYPE!='URL'\\\" class=\\\"fa fa-circle\\\"></i> {{p.PRIVILEGE_DESC}}</label>\\r\\n                                  </div>\\r\\n                                  <div class=\\\"custom-control custom-radio  p-0\\\" *ngIf=\\\"(p.IS_SUB_CHILD || p.SUB_CHILD_GROUP != 0 )&& p.PARENT_ID != 0 \\\">\\r\\n                                    <input id=\\\"radio{{p.PRIVILEGE_ID}}\\\" [checked]=\\\"p.IS_Selected\\\" [name]=\\\"p.SUB_CHILD_GROUP\\\" (click)=\\\"check($event,p,s.PRIVILEGE_LISTS)\\\" [value]=\\\"p.PRIVILEGE_ID\\\" type=\\\"radio\\\">\\r\\n                                    <label for=\\\"radio{{p.PRIVILEGE_ID}}\\\" class=\\\"radio-label text-capitalize\\\"><i class=\\\"fa fa-square\\\"></i> {{p.PRIVILEGE_DESC}} </label>\\r\\n                                  </div>\\r\\n                                </td>\\r\\n                              </tr>\\r\\n                            </ng-container>\\r\\n                          </ng-container>\\r\\n                        </tbody>\\r\\n                      </table>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 mb-4 d-flex justify-content-end\\\">\\r\\n          <a href=\\\"javascript:void(0);\\\" class=\\\"btn btn-success mr-2\\\" (click)=\\\"save()\\\"><i class=\\\"fa fa-save\\\"></i> Submit</a>\\r\\n          <a href=\\\"javascript:void(0);\\\" class=\\\"btn btn-danger\\\" (click)=\\\"cancelForm()\\\"><i class=\\\"fa fa-times\\\"></i> Cancel</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader\\\"></app-loader>\\r\\n</div>\\r\\n<div class=\\\"modal fade in show\\\" bsModal #treepopup=\\\"bs-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" style=\\\"display: none; padding-right: 10px;\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg modal-info \\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Report To</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"ClosePopup()\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <p-tree [value]=\\\"files2\\\" [(selection)]=\\\"reportid\\\" class=\\\"w-100\\\" selectionMode=\\\"single\\\" (onNodeSelect)=\\\"nodeSelect($event)\\\"></p-tree>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-danger form-btns\\\" (click)=\\\"ClosePopup()\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><i class=\\\"fa fa-times text-white\\\"></i> Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div bsModal #ServiceUsersListPopUp=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg modal-info mob-respt\\\" [ngClass]=\\\"{'disabled':loadSave}\\\">\\r\\n    <div class=\\\"modal-content\\\" style=\\\"z-index:1\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Users</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body scrolable-height p-0\\\" style=\\\"max-height:600px;overflow:visible;\\\">\\r\\n        <div class=\\\"clearfix\\\"></div>\\r\\n        <div class=\\\"panel m-0\\\">\\r\\n          <div class=\\\"panel-content \\\" [ngClass]=\\\"{'disabled':loadSave}\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-lg-4 col-md-4 col-sm-6 mb-2\\\">\\r\\n                <input class=\\\"form-control input-sm\\\" type=\\\"text\\\" [(ngModel)]='searchTxt' placeholder=\\\"Search By User Name\\\" (keyup)='updateFilter($event)'>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-8 col-md-8 col-sm-6 \\\">\\r\\n                <a class=\\\"btn btn-success form-btns mr-1\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"onSearch()\\\"><span><i class=\\\"fa fa-search\\\"></i> Search</span></a>\\r\\n                <a class=\\\"btn btn-danger form-btns mr-2\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"onReset()\\\"><span><i class=\\\"fa fa-refresh\\\"></i> Reset</span></a>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"clearfix\\\"></div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"table-responsive\\\">\\r\\n                  <div class=\\\"table table-striped\\\">\\r\\n                    <ngx-datatable #table class=\\\"bootstrap\\\"\\r\\n                                   [rows]=\\\"lstServiceUserNames.data\\\"\\r\\n                                   [columnMode]=\\\"'force'\\\"\\r\\n                                   [scrollbarH]=\\\"true\\\"\\r\\n                                   [rowHeight]=\\\"'40'\\\"\\r\\n                                   [headerHeight]=\\\"40\\\"\\r\\n                                   [footerHeight]=\\\"40\\\"\\r\\n                                   [externalPaging]=\\\"true\\\"\\r\\n                                   [externalSorting]=\\\"true\\\"\\r\\n                                   [loadingIndicator]=\\\"loadSave\\\"\\r\\n                                   [count]=\\\"lstServiceUserNames.pager.totalItems\\\"\\r\\n                                   [offset]=\\\"lstServiceUserNames.pager.currentPage\\\"\\r\\n                                   [limit]=\\\"lstServiceUserNames.pager.pageSize\\\"\\r\\n                                   (page)='setPage($event)'\\r\\n                                   (sort)=\\\"onSort($event)\\\">\\r\\n                      <ngx-datatable-column name=\\\"Name\\\" [sortable]=\\\"true\\\" prop=\\\"Name\\\"></ngx-datatable-column>\\r\\n                      <ngx-datatable-column name=\\\"Email\\\" [sortable]=\\\"true\\\" prop=\\\"Email\\\"></ngx-datatable-column>\\r\\n                      <ngx-datatable-column name=\\\"User Type\\\" [sortable]=\\\"false\\\" prop=\\\"UserTypeName\\\"></ngx-datatable-column>\\r\\n                      <ngx-datatable-column name=\\\"Role\\\" [sortable]=\\\"false\\\" prop=\\\"RoleName\\\"></ngx-datatable-column>\\r\\n                      <ngx-datatable-footer>\\r\\n                        <ng-template ngx-datatable-footer-template\\r\\n                                     let-rowCount=\\\"rowCount\\\"\\r\\n                                     let-pageSize=\\\"pageSize\\\"\\r\\n                                     let-selectedCount=\\\"selectedCount\\\"\\r\\n                                     let-currentPage=\\\"currentPage\\\"\\r\\n                                     let-offset=\\\"offset\\\"\\r\\n                                     let-isVisible=\\\"isVisible\\\">\\r\\n                          <div class=\\\"page-count\\\" style=\\\"max-width:170px;\\\">\\r\\n                            Total Records: {{rowCount}}\\r\\n                          </div>\\r\\n                          <div>\\r\\n                            <div style=\\\"color:black; margin-right:10px;\\\" class=\\\"page-size-record\\\">\\r\\n                              <span style=\\\"text-align:right; width:80px;vertical-align: middle;\\\">\\r\\n                                <ng-select [searchable]=\\\"false\\\" [items]=\\\"lstPageSize\\\" appendTo=\\\"body\\\" [(ngModel)]='pageSizeValue' dropzone=\\\"fixed\\\" [clearable]=\\\"false\\\" (change)=\\\"onChange($event)\\\" draggable=\\\"false\\\" [closeOnSelect]=\\\"true\\\"\\r\\n                                           bindLabel=\\\"text\\\" bindValue=\\\"text\\\"></ng-select>\\r\\n                              </span>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <datatable-pager [pagerLeftArrowIcon]=\\\"'fa fa-angle-left'\\\"\\r\\n                                           [pagerRightArrowIcon]=\\\"'fa fa-angle-right'\\\"\\r\\n                                           [pagerPreviousIcon]=\\\"'fa fa-angle-double-left'\\\"\\r\\n                                           [pagerNextIcon]=\\\"'fa fa-angle-double-right'\\\"\\r\\n                                           [page]=\\\"lstServiceUserNames.pager.currentPage\\\"\\r\\n                                           [size]=\\\"pageSizeValue\\\"\\r\\n                                           [count]=\\\"lstServiceUserNames.pager.totalItems\\\"\\r\\n                                           [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\r\\n                                           (change)=\\\"setPage($event)\\\">\\r\\n                          </datatable-pager>\\r\\n                        </ng-template>\\r\\n                      </ngx-datatable-footer>\\r\\n                    </ngx-datatable>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader\\\"></app-loader>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-danger form-btns\\\" (click)=\\\"close()\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><i class=\\\"fa fa-times text-white\\\"></i> Close</button>\\r\\n      </div>\\r\\n      <app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader-popup\\\"></app-loader>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3JvbGUvcm9sZS1hZGQtb3ItZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { CommonService, ModuleList } from '../shared/common.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { FormGroup, Validators, FormBuilder, FormArray } from '@angular/forms';\r\nimport { Role, RoleService, ParentModules } from './role.service';\r\nimport { RoleModule } from './role.service';\r\nimport { ConfirmationDialogService } from '../shared/confirmation-dialog/confirmation-dialog.service';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\nimport { parse } from 'querystring';\r\n\r\n@Component({\r\n  selector: 'app-role-add-or-edit',\r\n  templateUrl: './role-add-or-edit.component.html',\r\n  styleUrls: ['./role-add-or-edit.component.scss']\r\n})\r\nexport class RoleAddOrEditComponent implements OnInit {\r\n  @ViewChild('treepopup', { static: false }) treepopup: ModalDirective;\r\n  pageTitle: string;\r\n  loadSave: boolean = false;\r\n  read = false;\r\n  loadRoleModules = false;\r\n  roleForm: FormGroup;\r\n  lstUserType: any;\r\n  statuses: any;\r\n  Detail: any;\r\n  role: Role = new Role();\r\n  selectUpdateEnable: boolean = false;\r\n  errorMessage: string;\r\n  roleModulesData: RoleModule[] = [];\r\n  roledata: [];\r\n  selectedValue: any\r\n  isDisabled = '';\r\n  addOrUpdatePermission: boolean=false;\r\n  //modulePermission: ModuleList;\r\n  parentModule: ParentModules[] = []\r\n  roleTreeData: any;\r\n  files1: TreeNode[];\r\n  files2: TreeNode[];\r\n  reporttoname: any = '';\r\n  reporttoidselected: any;\r\n  reportid: string;\r\n  reportname: string;\r\n  rolegetid: any\r\n  modulePermission: any[] = [];\r\n  isUpdate: boolean = false;\r\n  isAdd: boolean = false;\r\n  //templateObjects: Template[] = new Array();\r\n  //parentModule1: ParentModules;\r\n  constructor(private commonService: CommonService,\r\n    private fb: FormBuilder,\r\n    private roleService: RoleService,\r\n    private dialogService: ConfirmationDialogService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private route: ActivatedRoute, private http: HttpClient) {\r\n    const priviledgeCode = this.route.snapshot.data.privilegeCode;\r\n    const moduleCode = this.route.snapshot.data.moduleCode;\r\n    this.modulePermission = this.commonService.getPermissiondata(moduleCode);\r\n\r\n    let add = this.modulePermission.find(m => m.privilegecode.toUpperCase() == priviledgeCode.toUpperCase());\r\n    if (add == undefined) {\r\n      this.addOrUpdatePermission = false;\r\n    } else {\r\n \r\n      this.addOrUpdatePermission = true;\r\n    }\r\n    \r\n\r\n    this.commonService.getMasterItemsList(\"manageuser_usertype_role\").subscribe((result: any) => {\r\n      this.lstUserType = this.commonService.masters;//.filter(x => x.masterName == \"UserType\");\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n    this.initForm();\r\n    this.getStatuses();\r\n\r\n    this.route.paramMap.subscribe(\r\n      params => {\r\n        const id = params.get('id');\r\n        this.rolegetid = id;\r\n        if (id) {\r\n\r\n          this.loadSave = true;\r\n          this.getRole(id);\r\n\r\n          //\r\n        }\r\n        else {\r\n          this.pageTitle = 'Add Role';\r\n    \r\n          this.getRoleModules(null);\r\n        }\r\n      }\r\n    );\r\n    //this.getFiles().then(files => {\r\n    //  this.files1 = files;\r\n    //});\r\n    //this.roleService\r\n    //   .get('json.json')\r\n    //   .subscribe((response: any) => {\r\n    //     this.files1 = response.data\r\n    //   });   \r\n    this.GetRoleNameForTree(this.rolegetid);\r\n  }\r\n\r\n  selectUser(event) {\r\n    this.roleModules.controls = [];\r\n    this.getRoleModules(event.value);\r\n    this.roleForm.patchValue({\r\n      readSelect: false,\r\n      addSelect: false,\r\n      deleteSelect: false,\r\n      updateSelect: false\r\n    });\r\n  }\r\n\r\n  getStatuses() {\r\n    this.commonService.getMasterItemsList(\"role_Status\").subscribe((response: any) => {\r\n      this.statuses = this.commonService.masters;\r\n    });\r\n  }\r\n\r\n  cancelForm() {\r\n    this.router.navigateByUrl(\"/role\");\r\n  }\r\n\r\n\r\n  getRole(id: string) {\r\n    this.roleService.getRoleById(id)\r\n      .subscribe(\r\n        (role: Role) => {\r\n          this.displayRole(role);\r\n          this.loadSave = false;\r\n        }, (error: any) => {\r\n          this.errorMessage = <any>error;\r\n          this.loadSave = false;\r\n        });\r\n  }\r\n\r\n  displayRole(role: Role): void {\r\n    if (this.roleForm) {\r\n      this.roleForm.reset();\r\n      this.parentModule.length = 0;\r\n    }\r\n    this.role = role;\r\n    console.log('role', this.role);\r\n    // console.log(\"RoleUserT\", this.role)\r\n    if (this.role.roleId === '') {\r\n      this.pageTitle = 'Add Role';\r\n    }\r\n    else {\r\n      this.pageTitle = `Edit Role: ${this.role.roleName}`;\r\n    }\r\n\r\n    this.userType.disable();\r\n    this.reportid = this.role.reporttoid;\r\n    this.reportname = this.role.reportto\r\n\r\n    // Update the data on the form\r\n    this.roleForm.patchValue({\r\n      reportto: this.role.reportto,\r\n      roleId: this.role.roleId,\r\n      roleName: this.role.roleName,\r\n      userType: this.role.userType.toString(),\r\n      roleDescription: this.role.roleDescription,\r\n      roleStatusId: this.role.roleStatusId.toString(),\r\n    });\r\n    // console.log(\"RoleModuleFor\", this.role.roleModuleModel);\r\n    this.role.roleModuleModel.forEach(m => {\r\n      if (m.isManageable === true) {\r\n        //alert(1);\r\n        this.roleModules.push(this.buildRoleModules(m));\r\n      }\r\n      else {\r\n        //Parent Modules\r\n        this.parentModule.push(new ParentModules(m.roleModuleModuleID, m.roleModuleModuleName));\r\n      }\r\n    });\r\n    if (this.role.isRoleAssined) {\r\n      this.roleForm.get('roleStatusId').disable();\r\n    }\r\n\r\n\r\n  }\r\n  buildRoleModules(roleModule: RoleModule): FormGroup {\r\n    console.log(\"RoleModule1\", roleModule);\r\n    return this.fb.group({\r\n      roleModuleId: roleModule.roleModuleId,\r\n      roleModuleRoleID: roleModule.roleModuleRoleID,\r\n      roleModuleModuleID: roleModule.roleModuleModuleID,\r\n      roleModuleModuleName: roleModule.roleModuleModuleName,\r\n      roleModuleName: roleModule.roleModuleName,\r\n      moduleDisplayOrder: roleModule.moduleDisplayOrder,\r\n      roleModuleNotificationFlag: roleModule.roleModuleNotificationFlag,\r\n      roleModuleEmailFlag: roleModule.roleModuleEmailFlag,\r\n      roleModuleAddFlag: roleModule.roleModuleAddFlag,\r\n      roleModuleUpdateFlag: roleModule.roleModuleUpdateFlag,\r\n      roleModuleSMSFlag: roleModule.roleModuleSMSFlag,\r\n      roleModuleReadFlag: roleModule.roleModuleReadFlag,\r\n      roleModuleDeleteFlag: roleModule.roleModuleDeleteFlag,\r\n      isEnableAddPermission: roleModule.isEnableAddPermission,\r\n      isEnableReadPermission: roleModule.isEnableReadPermission,\r\n      isEnableEditPermission: roleModule.isEnableEditPermission,\r\n      isEnableDeletePermission: roleModule.isEnableDeletePermission,\r\n      isManageable: roleModule.isManageable,\r\n      moduleParentModuleId: roleModule.moduleParentModuleId,\r\n      roleModuleIsView: roleModule.roleModuleIsView,\r\n      roleModuleIsViewShared: roleModule.roleModuleIsViewShared,\r\n      roleModuleIsViewOwn: roleModule.roleModuleIsViewOwn,\r\n      roleModuleIsViewAll: roleModule.roleModuleIsViewAll\r\n    });\r\n\r\n  }\r\n  getRoleModules(userId) {\r\n    //kate\r\n    this.loadSave = true;\r\n    this.parentModule = [];\r\n    this.loadRoleModules = true; // console.log(\"inn\")\r\n    this.roleService.getRoleModules(userId).subscribe((response: any) => {\r\n      //// console.log(\"reole  response\", response)\r\n      this.roleModulesData = response;\r\n      if (response) {\r\n        this.roleService.roleModules.forEach(m => {\r\n          //  this.roleModules.push(this.buildRoleModules(m));\r\n          //// console.log(\"RoleModule\",this.roleService.roleModules);\r\n          if (m.isManageable === true) {\r\n            this.roleModules.push(this.buildRoleModules(m));\r\n\r\n          }\r\n          else {\r\n            //Parent Modules\r\n            // let parentModule1: ParentModules;\r\n            // parentModule1.roleModuleId = m.roleModuleId;\r\n            //parentModule1.roleModuleModuleName = m.roleModuleModuleName;\r\n\r\n            this.parentModule.push(new ParentModules(m.roleModuleModuleID, m.roleModuleModuleName));\r\n\r\n            //this.parentModule.push(m.roleModuleId);\r\n            //this.parentModule. = m.roleModuleModuleName;\r\n            //this.parentModule.push(parentModule);\r\n          }\r\n\r\n        });\r\n        // console.log(\"RoleMiduleIsManageble\", this.roleModules);\r\n        // console.log(\"RoleMiduleIsManagebleFalse\", this.parentModule);\r\n        this.loadSave = false;\r\n        this.loadRoleModules = false;\r\n      }\r\n    }, error => {\r\n      this.loadRoleModules = false;\r\n      this.loadSave = false;\r\n    })\r\n    // console.log(\"this.parentModule\", this.parentModule);\r\n    var d = this.parentModule.filter(x => x.roleModuleId === \"442f8d12-92b0-42fd-aa0b-a71514d54d9f\")\r\n    // console.log(d);\r\n\r\n  }\r\n\r\n  save() {\r\n\r\n    console.log('this.roleForm.value', this.roleForm.value);\r\n    //   return;    \r\n\r\n\r\n    if (this.roleForm.valid) {\r\n      var selected = this.roleModules.controls.filter(m => m.get('roleModuleReadFlag').value === true\r\n        || m.get('roleModuleAddFlag').value === true\r\n        || m.get('roleModuleUpdateFlag').value === true\r\n        || m.get('roleModuleDeleteFlag').value === true);\r\n\r\n      this.loadSave = true;\r\n      this.roleService.checkRoleNameIsExist(this.roleForm.controls.roleId.value, this.roleForm.controls.roleName.value).subscribe(m => {\r\n        if (!m) {\r\n          if (selected.length != 0) {\r\n            this.roleService.saveRole(this.roleForm.value).subscribe((result: any) => {\r\n              if (result.statusCode == 200) {\r\n\r\n                this.toastr.success(result.responseMessage);\r\n                this.router.navigateByUrl(\"/role\");\r\n                setTimeout(() => { this.loadSave = false; }, 3000);\r\n              }\r\n              else {\r\n                this.loadSave = false;\r\n                this.toastr.error('Error!', 'Unable to save record.');\r\n              }\r\n            })\r\n          }\r\n          else {\r\n            this.loadSave = false;\r\n            this.dialogService.confirm(\"Role Access\", 'Please select atleast one Access Level.', 'Ok', 'Cancel', false).subscribe(confirmed => {\r\n\r\n            });\r\n          }\r\n        } else {\r\n          this.loadSave = false;\r\n          this.dialogService.confirm(\"Add Role\", `'${this.roleForm.controls.roleName.value}' role name is already exist.`, 'Ok', 'Cancel', false).subscribe(confirmed => {\r\n          });\r\n        }\r\n      });\r\n\r\n    }\r\n    else {\r\n      this.commonService.validateAllFormFields(this.roleForm);\r\n    }\r\n  }\r\n\r\n\r\n  enableSelectAll($event) {\r\n    if ($event.target.value === 'add') {\r\n      this.roleModules.controls.forEach(obj => {\r\n        obj.patchValue({\r\n          roleModuleAddFlag: $event.target.checked\r\n        });\r\n      });\r\n\r\n      //Start Read Role\r\n\r\n      this.roleModules.controls.forEach(obj => {\r\n        if ($event.target.checked == false && (obj.get('roleModuleUpdateFlag').value == true || obj.get('roleModuleDeleteFlag').value == true)) {\r\n          this.roleForm.patchValue({\r\n            readSelect: true\r\n          });\r\n          obj.patchValue({\r\n            roleModuleReadFlag: true,\r\n            roleModuleIsView: 'all'\r\n          });\r\n        } else if ($event.target.checked == true) {\r\n          this.roleForm.patchValue({\r\n            readSelect: true\r\n          });\r\n          obj.patchValue({\r\n            roleModuleReadFlag: true,\r\n            roleModuleIsView: 'all'\r\n          });\r\n        }\r\n\r\n      });\r\n\r\n      //End Read Role\r\n    }\r\n    else if ($event.target.value === 'read') {\r\n      if ($event.target.checked) {\r\n        this.roleModules.controls.forEach(obj => {\r\n          obj.patchValue({\r\n            roleModuleReadFlag: $event.target.checked,\r\n            roleModuleIsView: 'all'\r\n          });\r\n        });\r\n\r\n      }\r\n      else {\r\n        this.roleModules.controls.forEach(obj => {\r\n          obj.patchValue({\r\n            //roleModuleReadFlag: $event.target.checked,\r\n            roleModuleIsView: ''\r\n          });\r\n        });\r\n      }\r\n      if (!$event.target.checked) {\r\n        this.roleModules.controls.forEach(obj => {\r\n          obj.patchValue({\r\n            roleModuleAddFlag: false,\r\n            roleModuleUpdateFlag: false,\r\n            roleModuleDeleteFlag: false\r\n          });\r\n        });\r\n\r\n        this.roleForm.patchValue({\r\n          addSelect: false,\r\n          deleteSelect: false,\r\n          updateSelect: false,\r\n          readSelect: false\r\n        });\r\n      }\r\n      else {\r\n        this.roleModules.controls.forEach(obj => {\r\n          obj.patchValue({\r\n            roleModuleReadFlag: $event.target.checked,\r\n            roleModuleIsView: 'all'\r\n          });\r\n        });\r\n      }\r\n\r\n    }\r\n    else if ($event.target.value === 'update') {\r\n      this.roleModules.controls.forEach(obj => {\r\n        obj.patchValue({\r\n          roleModuleUpdateFlag: $event.target.checked\r\n        });\r\n      });\r\n\r\n      //Start Read Role\r\n\r\n      this.roleModules.controls.forEach(obj => {\r\n        if ($event.target.checked == false && (obj.get('roleModuleAddFlag').value == true || obj.get('roleModuleDeleteFlag').value == true)) {\r\n          this.roleForm.patchValue({\r\n            readSelect: true\r\n          });\r\n          obj.patchValue({\r\n            roleModuleReadFlag: true,\r\n           // roleModuleReadFlag: true,\r\n            roleModuleIsView: 'all'\r\n          });\r\n        } else if ($event.target.checked == true) {\r\n          this.roleForm.patchValue({\r\n            readSelect: true\r\n          });\r\n          obj.patchValue({\r\n            roleModuleReadFlag: true,\r\n            //roleModuleReadFlag: true,\r\n            roleModuleIsView: 'all'\r\n          });\r\n        }\r\n\r\n      });\r\n\r\n      //End Read Role\r\n\r\n    }\r\n    else if ($event.target.value === 'delete') {\r\n      this.roleModules.controls.forEach(obj => {\r\n        obj.patchValue({\r\n          roleModuleDeleteFlag: $event.target.checked\r\n        });\r\n      });\r\n\r\n      //Start Read Role\r\n\r\n      this.roleModules.controls.forEach(obj => {\r\n        if ($event.target.checked == false && (obj.get('roleModuleAddFlag').value == true || obj.get('roleModuleUpdateFlag').value == true)) {\r\n          this.roleForm.patchValue({\r\n            readSelect: true\r\n          });\r\n          obj.patchValue({\r\n            roleModuleReadFlag: true,\r\n            roleModuleIsView: 'all'\r\n          });\r\n        } else if ($event.target.checked == true) {\r\n          this.roleForm.patchValue({\r\n            readSelect: true\r\n          });\r\n          obj.patchValue({\r\n            roleModuleReadFlag: true,\r\n            roleModuleIsView: 'all'\r\n          });\r\n        }\r\n\r\n      });\r\n\r\n      //End Read Role\r\n    }\r\n    this.selectUpdateEnable = true;\r\n\r\n\r\n  }\r\n\r\n  enableTopHeader(type, control, $event) {\r\n\r\n    if (type === 'add') {\r\n      this.roleModules.controls.filter(m => m.get('roleModuleModuleID').value === control.get('roleModuleModuleID').value).forEach(obj => {\r\n\r\n        obj.patchValue({\r\n          roleModuleAddFlag: $event.target.checked\r\n        });\r\n      });\r\n\r\n      this.roleForm.patchValue({\r\n        addSelect: !this.roleModules.controls.some(m => m.get('roleModuleAddFlag').value === false)\r\n      });\r\n\r\n      //Start Read Role\r\n      this.roleModules.controls.filter(m => m.get('roleModuleModuleID').value === control.get('roleModuleModuleID').value).forEach(obj => {\r\n\r\n        if ($event.target.checked == false && (obj.get('roleModuleUpdateFlag').value == true || obj.get('roleModuleDeleteFlag').value == true)) {\r\n          obj.patchValue({\r\n            roleModuleReadFlag: true,\r\n            roleModuleIsView: 'all'\r\n          });\r\n        }\r\n        else if ($event.target.checked == true) {\r\n          obj.patchValue({\r\n            roleModuleReadFlag: true,\r\n            roleModuleIsView: 'all'\r\n          });\r\n        }\r\n      });\r\n\r\n      //End Read Role\r\n\r\n    }\r\n    else if (type === 'read') {\r\n      this.roleModules.controls.filter(m => m.get('roleModuleModuleID').value === control.get('roleModuleModuleID').value).forEach(obj => {\r\n\r\n        obj.patchValue({\r\n          roleModuleReadFlag: $event.target.checked\r\n        });\r\n        if (!$event.target.checked) {\r\n          obj.patchValue({\r\n            roleModuleAddFlag: false,\r\n            roleModuleDeleteFlag: false,\r\n            roleModuleUpdateFlag: false\r\n          });\r\n        }\r\n      });\r\n\r\n      this.roleForm.patchValue({\r\n        readSelect: !this.roleModules.controls.some(m => m.get('roleModuleReadFlag').value === false)\r\n      });\r\n\r\n      if (!$event.target.checked) {\r\n        this.roleForm.patchValue({\r\n          addSelect: false,\r\n          updateSelect: false,\r\n          deleteSelect: false\r\n        });\r\n      }\r\n\r\n    } else if (type === 'update') {\r\n      this.roleModules.controls.filter(m => m.get('roleModuleModuleID').value === control.get('roleModuleModuleID').value).forEach(obj => {\r\n\r\n        obj.patchValue({\r\n          roleModuleUpdateFlag: $event.target.checked\r\n        });\r\n      });\r\n\r\n      this.roleForm.patchValue({\r\n        updateSelect: !this.roleModules.controls.some(m => m.get('roleModuleUpdateFlag').value === false)\r\n      });\r\n\r\n      //Start Read Role\r\n      this.roleModules.controls.filter(m => m.get('roleModuleModuleID').value === control.get('roleModuleModuleID').value).forEach(obj => {\r\n\r\n        if (($event.target.checked == false) && (obj.get('roleModuleAddFlag').value == true || obj.get('roleModuleDeleteFlag').value == true)) {\r\n          obj.patchValue({\r\n            roleModuleReadFlag: true,\r\n            roleModuleIsView: 'all'\r\n          });\r\n        }\r\n        else if ($event.target.checked == true) {\r\n          obj.patchValue({\r\n            roleModuleReadFlag: true,\r\n            roleModuleIsView: 'all'\r\n          });\r\n        }\r\n      });\r\n\r\n      //End Read Role\r\n\r\n    } else if (type === 'delete') {\r\n      this.roleModules.controls.filter(m => m.get('roleModuleModuleID').value === control.get('roleModuleModuleID').value).forEach(obj => {\r\n\r\n        obj.patchValue({\r\n          roleModuleDeleteFlag: $event.target.checked\r\n        });\r\n      });\r\n\r\n      this.roleForm.patchValue({\r\n        deleteSelect: !this.roleModules.controls.some(m => m.get('roleModuleDeleteFlag').value === false)\r\n      });\r\n\r\n      //Start Read Role\r\n      this.roleModules.controls.filter(m => m.get('roleModuleModuleID').value === control.get('roleModuleModuleID').value).forEach(obj => {\r\n\r\n        if ($event.target.checked == false && (obj.get('roleModuleUpdateFlag').value == true || obj.get('roleModuleAddFlag').value == true)) {\r\n          obj.patchValue({\r\n            roleModuleReadFlag: true,\r\n            roleModuleIsView: 'all'\r\n          });\r\n        }\r\n        else if ($event.target.checked == true) {\r\n          obj.patchValue({\r\n            roleModuleReadFlag: true,\r\n            roleModuleIsView: 'all'\r\n          });\r\n        }\r\n      });\r\n\r\n      //End Read Role\r\n\r\n    }\r\n\r\n  }\r\n\r\n  get roleModules(): FormArray {\r\n    return <FormArray>this.roleForm.get('roleModules');\r\n  }\r\n\r\n\r\n\r\n  GetRoleNameForTree(id: any) {\r\n    this.roleService.GetRoleNameForTree(id).subscribe((result: any) => {\r\n      console.log('result', result)\r\n      this.files2 = JSON.parse(result).data;\r\n\r\n      console.log('this.files1', this.files2)\r\n    })\r\n\r\n  }\r\n\r\n  nodeSelect(e: any) {\r\n    console.log('sadasdf', e)\r\n    this.reporttoname = e.node.label;\r\n    this.reporttoidselected = e.node.data;\r\n    this.roleForm.get(\"reportto\").setValue(this.reporttoname);\r\n    this.roleForm.get(\"reporttoid\").setValue(this.reporttoidselected);\r\n    \r\n    this.treepopup.hide();\r\n  }\r\n\r\n  private initForm() {\r\n\r\n    this.roleForm = this.fb.group({\r\n      'roleId': [this.role.roleId, Validators.nullValidator],\r\n      'roleName': [this.role.roleName, [Validators.required, Validators.maxLength(50)]],\r\n      'roleDescription': [this.role.roleDescription, Validators.maxLength(200)],\r\n      'roleStatusId': [this.role.roleStatusId, Validators.required],\r\n      'addSelect': false,\r\n      'updateSelect': false,\r\n      'deleteSelect': false,\r\n      'readSelect': false,\r\n      'userType': [this.role.userType, Validators.required],\r\n      roleModules: this.fb.array([], Validators.required),\r\n      reportto: [''],\r\n      reporttoid: [''],\r\n\r\n    });\r\n  }\r\n\r\n\r\n  private dataUrl = 'assets';\r\n  selectedAllNodes: TreeNode[] = [];\r\n  openPopup() {\r\n\r\n\r\n    //this.GetRoleNameForTree();\r\n    this.treepopup.show();\r\n    this.files2.forEach(s => {\r\n      console.log('report', this.reportid);\r\n      let data: any = this.CheckId(s, this.reportid.toString());\r\n      if (data != null) {\r\n        \r\n        this.selectedAllNodes.forEach(node => {\r\n          node.expanded = true;\r\n        })\r\n\r\n      }\r\n      \r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  CheckId(s: TreeNode, selectedId: string) {\r\n    console.log('children', s.children);\r\n    if (s.data.toString() === selectedId) {\r\n      this.selectedAllNodes.push(s);\r\n      return s;\r\n    }\r\n    else if ((s.children != null && s.children.length != undefined)) {\r\n\r\n\r\n      let i = 0;\r\n      console.log('inchildren', s.children);\r\n  \r\n      if (s.children.length > 0) {\r\n        \r\n        while (s.children.length > i) {\r\n          let data: any = this.CheckId(s.children[i], selectedId);\r\n          if (data != null) {\r\n            this.selectedAllNodes.push(s);\r\n            return data;\r\n          }  \r\n          i++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ClosePopup() {\r\n    this.treepopup.hide();\r\n  }\r\n\r\n  //getFiles() {\r\n  //  return this.http.get('json')\r\n  //    .toPromise()\r\n  //    .then(res => (<TreeNode[]> JSON.parse(res.toString()).data));\r\n  //}\r\n  get roleId() { return this.roleForm.get('roleId'); }\r\n  get roleName() { return this.roleForm.get('roleName'); }\r\n  get addSelect() { return this.roleForm.get('addSelect'); }\r\n  get updateSelect() { return this.roleForm.get('updateSelect'); }\r\n  get deleteSelect() { return this.roleForm.get('deleteSelect'); }\r\n  get readSelect() { return this.roleForm.get('readSelect'); }\r\n  get roleDescription() { return this.roleForm.get('roleDescription'); }\r\n  get roleStatusId() { return this.roleForm.get('roleStatusId'); }\r\n  get userType() { return this.roleForm.get('userType'); }\r\n  get reportto() { return this.roleForm.get('reportto'); }\r\n  get reporttoid() { return this.roleForm.get('reporttoid'); }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RoleComponent } from './role.component';\r\nimport { RoleAddOrEditComponent } from './role-add-or-edit.component';\r\nimport { RoleeditComponent } from './roleedit.component';\r\nimport { AuthGuard } from '../../auth/auth.guard';\r\nimport { RoleViewComponent } from './role-view.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: RoleComponent, data: { title: 'List Role' } },\r\n  { path: 'addrole', component: RoleeditComponent, canActivate: [AuthGuard], data: { privilegeCode: 'RolesAdd' }},\n  { path: 'editrole/:id', component: RoleeditComponent, canActivate: [AuthGuard], data: { privilegeCode: 'RolesUpdate' }},\r\n  { path: 'editrole123/:id', component: RoleAddOrEditComponent },\r\n  { path: 'editrole123', component: RoleAddOrEditComponent },\r\n  { path: 'view/:id', component: RoleViewComponent }\r\n];\r\n \r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RoleRoutingModule { } \r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3JvbGUvcm9sZS12aWV3LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-role-view',\n  templateUrl: './role-view.component.html',\n  styleUrls: ['./role-view.component.scss']\n})\nexport class RoleViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3JvbGUvcm9sZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { RoleService } from './role.service';\r\nimport { CommonService, ModuleList } from '../shared/common.service';\r\nimport { ConfirmationDialogService } from '../shared/confirmation-dialog/confirmation-dialog.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgSelectComponent } from '@ng-select/ng-select';\r\nimport { DatatableComponent, SelectionType } from '@swimlane/ngx-datatable';\r\nimport { UserListingPopUpComponent } from './userlistingpopup/userlistingpopup.component';\r\n\n@Component({\n  selector: 'app-role',\n  templateUrl: './role.component.html',\n  styleUrls: ['./role.component.scss']\n})\nexport class RoleComponent implements OnInit {\n  @ViewChild('ServiceUsersListPopUp', { static: false }) ServiceUsersListPopup: UserListingPopUpComponent;\n  @ViewChild('clearDrp', { static: false }) clearDrop: NgSelectComponent;\r\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\r\n  @Input() offset: number;\r\n  loadSave: boolean = false;\r\n\r\n  id = \"\";\r\n  loading = false;\r\n  //modulePermission: ModuleList;\r\n  sortDir = 'desc';\r\n  sortColumn = 'RoleCreatedDate';\r\n  pagedData: any = {\r\n    pager: {},\r\n    data: []\r\n  };\r\n  roledata: any\r\n  listFilter = '';\r\n  deleteId: any = '';\r\n  SelectionType = SelectionType;\r\n  searchTxt = '';\r\n  selected = [];\r\n  lstPageSize: any\r\n  pageNumber = 0;\r\n  masterNameId: any;\r\n  clearM\r\n  pageSizeValue: number;\r\n  loginuserid: any;\n  modulePermission: any[] = [];\n  isAdd: boolean = false;\r\n  isUpdate: boolean = false;\r\n  isDelete: boolean = false;\n  currentPage: number;\n  constructor(private roleService: RoleService,\r\n    private commonService: CommonService, private router: Router,\r\n    private dialogService: ConfirmationDialogService, private activeRoute: ActivatedRoute,\r\n    private toaster: ToastrService) {\r\n    const moduleCode = this.activeRoute.snapshot.data.moduleCode;\r\n    this.modulePermission = this.commonService.getPermissiondata(moduleCode);\r\n    console.log('    this.modulePermission', this.modulePermission)\r\n\r\n\r\n    let add = this.modulePermission.find(m => m.privilegecode.toUpperCase() == 'ROLESADD');\r\n    console.log('    this.modulePermission',this.modulePermission)\r\n    if (add == undefined) {\r\n      add = \"null\";\r\n    } else {\r\n      this.isAdd = true;\r\n    }\r\n    let update = this.modulePermission.find(m => m.privilegecode.toUpperCase() == 'ROLESUPDATE');\r\n    if (update == undefined) {\r\n      update = \"null\";\r\n    } else {\r\n      this.isUpdate = true;\r\n    }\r\n\r\n    let deletedata = this.modulePermission.find(m => m.privilegecode.toUpperCase() == 'ROLESDELETE');\r\n    if (deletedata == undefined) {\r\n      deletedata = \"null\";\r\n    } else {\r\n      this.isDelete = true;\r\n    }\r\n\r\n    // console.log(\"moduleCode\", moduleCode);\r\n      this.commonService.getLoggedInName.subscribe((userdetail: any) => {\n        this.loginuserid = userdetail.id;\r\n    });\n  }\n\n  ngOnInit() {\n    this.pageNumber = 0;\r\n    this.pageSizeValue = 15;\r\n    this.getPageSizes();\r\n    this.search();\r\n    this.refresh();\r\n    this.getRoleDropDown();\n  }\n\n  updateFilter(event) {\r\n    this.searchTxt = event.target.value;\r\n    let keycode = (event.keyCode ? event.keyCode : event.which);\r\n    if (keycode === 13 || keycode === '13') {\r\n      this.search();\r\n    }\r\n  }\n\n  get curPage(): number {\r\n    return this.offset;\r\n  }\n  getPageSizes() {\r\n    this.commonService.getMasterItemsList(\"PageSize\").subscribe((res: any) => {\r\n      this.lstPageSize = this.commonService.masters;\r\n    })\r\n  }\n  getRoleDropDown() {\r\n    this.commonService.getMasterItemsList(\"manageuser_usertype_role\").subscribe((response: any) => {\r\n      this.roledata = this.commonService.masters;\r\n    });\r\n  }\n  onSort($event) {\r\n    this.selected = [];\r\n    this.deleteId = null;\r\n    const sort = $event.sorts[0]\r\n    this.sortDir = sort.dir;\r\n    this.sortColumn = sort.prop;\r\n    this.loading = true;\r\n    this.roleService.getRoleList(this.listFilter, this.masterNameId, this.sortColumn, this.sortDir, $event.page - 1, this.pageSizeValue, this.loginuserid).subscribe(response => {\r\n      this.pagedData = this.roleService.pagedData;\r\n      this.loading = false;\r\n    }, error => {\r\n      this.loading = false;\r\n    });\r\n  }\n\n  onChange($event) {\r\n    this.loading = true;\r\n    this.roleService.getRoleList(this.listFilter, this.masterNameId, this.sortColumn, this.sortDir, 0, this.pageSizeValue, this.loginuserid).subscribe(response => {\r\n      this.pagedData = this.roleService.pagedData;\r\n      this.loading = false;\r\n    }, error => {\r\n      this.loading = false;\r\n    });\r\n  }\r\n  setPage($event) {\r\n    this.pageNumber = $event.page - 1;\r\n    this.search();\r\n  }\r\n\r\n  search() {\r\n    this.loading = true;\r\n    this.roleService.getRoleList(this.listFilter, this.masterNameId, this.sortColumn, this.sortDir, this.pageNumber, this.pageSizeValue, this.loginuserid).subscribe(response => {\r\n      this.pagedData = this.roleService.pagedData;\r\n      this.offset = this.pageNumber+1;\r\n      this.selected = [];\r\n      this.deleteId = null;\r\n      this.loading = false;\r\n    }, error => {\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this.selected = [];\r\n    this.deleteId = null;\r\n    this.table.sorts = [];\r\n    this.loading = true;\r\n    this.listFilter = '';\r\n    this.sortDir = 'desc';\r\n    this.masterNameId = \"undefined\";\r\n\r\n    this.clearDrop.clearModel();\r\n    this.sortColumn = 'RoleCreatedDate';\r\n    this.pageSizeValue = 15;\r\n    this.roleService.getRoleList(this.listFilter, this.masterNameId, this.sortColumn, this.sortDir, 0, 10, this.loginuserid).subscribe(response => {\r\n      this.pagedData = this.roleService.pagedData;\r\n      this.loading = false;\r\n    }, error => {\r\n      this.loading = false;\r\n    });\r\n  }\n\n  refresh() {\r\n    this.selected = [];\r\n    this.deleteId = null;\r\n    this.loading = true;\r\n    this.roleService.getRoleList(this.listFilter, this.masterNameId, this.sortColumn, this.sortDir, 0, this.pageSizeValue, this.loginuserid).subscribe(response => {\r\n\r\n      this.pagedData = this.roleService.pagedData;\r\n      this.loading = false;\r\n    }, error => {\r\n      this.loading = false;\r\n    })\r\n  }\n  restUserTypeddl() {\r\n    this.masterNameId = 'undefined';\r\n  }\n  SetUserTypeValue(masternameId: string) {\r\n    this.masterNameId = masternameId;\r\n  }\n\n  DeleteRole(row: any) {\r\n    const message = `Are you sure you want to delete Role  \"${row.RoleName}\"?`;\r\n    this.dialogService.confirm('Delete Role', message).subscribe(confirmed => {\r\n      if (confirmed) {\r\n        this.roleService.DeleteRole(row.RoleId).subscribe(r => {\r\n          this.toaster.success(`Role \"${row.RoleName}\" has been deleted successfully`);\r\n          this.refresh();\r\n        }, error => {\r\n        });\r\n      }\r\n    });\r\n  }\n\n  disable(row: any) {\r\n    \r\n    const message = `Are you sure you want to disable role  \"${row.RoleName}\"?`;\r\n    this.dialogService.confirm('Disable Role', message).subscribe(confirmed => {\r\n      if (confirmed) {\r\n        this.roleService.setRoleStatus(row.RoleId, row.RoleStatusId).subscribe(r => {\r\n          this.toaster.success(`\"${row.RoleName}\" has been disabled  successfully`);\r\n          this.refresh();\r\n        }, error => {\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  enable(row: any) {\r\n    const message = `Are you sure you want to enable role  \"${row.RoleName}\"?`;\r\n    this.dialogService.confirm('Enable Role', message).subscribe(confirmed => {\r\n      if (confirmed) {\r\n        this.roleService.setRoleStatus(row.RoleId, row.RoleStatusId).subscribe(r => {\r\n          this.toaster.success(`\"${row.RoleName}\" has been enabled  successfully`);\r\n          this.refresh();\r\n        }, error => {\r\n        });\r\n      }\r\n    });\r\n  }\n  ApplyAdvanceFilter(e) {\n\r\n  }\n  GetcustomViewid(e) {\n\r\n  }\n  ShowUsersListPopup($event) {\n    this.ServiceUsersListPopup.show($event);\n  }\n\n  onSelect({ selected }) {\r\n    debugger\r\n    if (this.deleteId == \"\" || this.deleteId == null || this.deleteId == 'undefined') {\r\n      this.selected.splice(0, this.selected.length);\r\n      this.selected.push(...selected);\r\n      this.deleteId = null;\r\n      this.deleteId = \"\";\r\n      for (let i = 0; i < selected.length; i++) {\r\n        this.deleteId += selected[i].RoleIDAuto.toString() + \",\";\r\n      }\r\n\r\n    }\r\n    else {\r\n      this.deleteId = null;\r\n      this.deleteId = \"\";\r\n      for (let i = 0; i < selected.length; i++) {\r\n        this.deleteId += selected[i].RoleIDAuto.toString() + \",\";\r\n      }\r\n    }\r\n  }\n\n  deleteAll() {\r\n    if (this.deleteId != null && this.deleteId != \"\") {\r\n      const message = `Are you sure you want to delete selected role(s)?`;\r\n      this.dialogService.confirm('DELETE ROLES(S)', message).subscribe(confirmed => {\r\n        if (confirmed) {\r\n          this.roleService.DeleteAllRole(this.deleteId,\"tblroles\").subscribe(r => {\r\n            this.toaster.success(`Selected record(s) has been deleted successfully`);\r\n            this.deleteId = \"\";\r\n            this.selected = [];\r\n            this.refresh();\r\n          }, error => {\r\n          });\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.toaster.error(\"Please select at least one row.\");\r\n    }\r\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { RoleComponent } from './role.component';\nimport { RoleService } from './role.service';\nimport { RoleRoutingModule } from './role-routing.module';\nimport { RoleAddOrEditComponent } from './role-add-or-edit.component';\nimport { TreeModule } from 'primeng/tree';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { RoleeditComponent } from './roleedit.component';\nimport { RoleViewComponent } from './role-view.component';\nimport { UserListingPopUpComponent } from './userlistingpopup/userlistingpopup.component';\n@NgModule({\n  declarations: [\n    RoleComponent,\n    RoleAddOrEditComponent,\n    RoleeditComponent,\n    RoleViewComponent,\n    UserListingPopUpComponent\n  ],\n  imports: [\n    CommonModule,\n    RoleRoutingModule,\n    TreeModule,\n    ModalModule,  \n    SharedModule\n  ],\n  providers: [\n    RoleService\n  ]\n})\nexport class RoleModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n  private dataUrl = 'assets';\r\n  roles: Role[] = [];\r\n  roleModules: RoleModule[] = [];\n  pagedData: any;\r\n  public baseUri = `${environment.WebApiBaseUrl}`;\n  public roleModuleUri = `${environment.WebApiBaseUrl}Role`;\n  constructor(private http: HttpClient) { }\n\n  getRoleList(RoleName: string, masternameId: string, sortColumn: string, sortDir, page: number, pageSize: number, userId: string): Observable<any> {\r\n    return this.http.get(this.baseUri + `Role/GetRoleList?rolename=${RoleName}&masternameId=${masternameId}&sortColumn=${sortColumn}&sortDir=${sortDir}&page=${page}&pageSize=${pageSize}&userId=${userId}`)\r\n      .pipe(\r\n        map((response: any) => {\r\n          this.pagedData = response;\r\n          return true;\r\n        })\r\n      );\r\n  }\n\n  setRoleStatus(roleId: any, status: any) {\r\n    return this.http.get(this.baseUri + `Role/ChangedRoleStatusById?roleId=${roleId}&roleStatus=${status}`)\r\n  }\n  DeleteAllRole(deleteId: any, tableName: any,) {\n    return this.http.get(this.baseUri + `common/DeleteRecords?primaryKey=${deleteId}&tableName=${tableName}`)\n      \n  }\n  DeleteRole(roleId: any) {\r\n    return this.http.get(this.baseUri + `Role/DeletedRoleById?roleId=${roleId}`)\r\n  }\n\r\n  checkRoleNameIsExist(pid: string, pname: string) {\r\n    return this.http.get(`${this.roleModuleUri}/CheckRoleNameIsExist?id=${pid}&name=${pname}`)\r\n      .pipe(\r\n        map((response) => {\r\n          return response;\r\n        })\r\n      );\r\n  }\r\n\r\n  getRoleModules(id) {//\r\n    // console.log(`${this.roleModuleUri}/GetRoleModule?userTypeId=${id}`);\r\n    return this.http.get(`${this.roleModuleUri}/GetRoleModule?userTypeId=${id}`)\r\n      .pipe(\r\n        map((response: any) => {\r\n        this.roleModules = response;\r\n          return true;\r\n        })\r\n      );\r\n  }\r\n  get(filename: string) {\r\n    return this.http.get(`${this.dataUrl}/${filename}`);\r\n  }\r\n\r\n  getRoleById(id: string) {\r\n    return this.http.get<Role>(`${this.roleModuleUri}/GetRoleById?id=${id}`)\r\n      .pipe(\r\n      tap(data =>  console.log('Role DAta by Id',data)),\r\n      );\r\n  }\r\n  GetRoleNameForTree(id: string) {\r\n    return this.http.get(`${this.roleModuleUri}/GetRoleNameForTree?id=${id}`);\r\n      \r\n  }\r\n  GetRoleDataByid(id: string) {\r\n    return this.http.get(`${this.roleModuleUri}/GetRoleDataByid?id=${id}`);\r\n      \r\n  } SaveRoledata(json: string) {\r\n    return this.http.post\r\n      (`${this.roleModuleUri}/SaveRole?json=${json}`,null);\r\n      \r\n  }\r\n  getRoletabdata(id: any,roleid:any) {\r\n    return this.http.get(`${this.roleModuleUri}/getRoletabdata?ROLEID=${roleid}&usertypeid=${id}`);\r\n      \r\n  }\r\n  GetServiceUsers(searchtxt, sortColumn, sortDir, pageIndex, pageSize, roleId): Observable<any> {\r\n    return this.http.get(`${this.baseUri}Role/GetUserList?searchtxt=${searchtxt}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${pageIndex}&pageSize=${pageSize}&roleId=${roleId}`)\r\n  }\r\n  saveRole(role: Role) {\r\n     console.log(\"RolePOST\",role);\r\n    return this.http.post(this.roleModuleUri, role)\r\n  }\n\n}\nexport class ParentModules {\r\n  roleModuleId: string;\r\n  roleModuleModuleName: string;\n  constructor(mid: any, mname: any) {\r\n    this.roleModuleId = '';\r\n    this.roleModuleModuleName = '';\r\n    this.roleModuleId = mid; this.roleModuleModuleName = mname;\r\n  }\r\n}\nexport class RoleModule {\r\n  roleModuleId: string;\r\n  roleModuleRoleID: string;\r\n  roleModuleModuleID: string;\r\n  roleModuleModuleName: string;\r\n  moduleDisplayOrder: number;\r\n  roleModuleName: string;\r\n  roleModuleAddFlag: boolean;\r\n  roleModuleUpdateFlag: boolean;\r\n  roleModuleReadFlag: boolean;\r\n  roleModuleDeleteFlag: boolean;\r\n  roleModuleNotificationFlag: boolean;\r\n  roleModuleEmailFlag: boolean;\r\n  roleModuleSMSFlag: boolean;\r\n  isEnableAddPermission: boolean;\r\n  isEnableReadPermission: boolean;\r\n  isEnableEditPermission: boolean;\r\n  isEnableDeletePermission: boolean;\r\n  isManageable: boolean;\r\n  moduleParentModuleId: string;\r\n  roleModuleIsViewShared: boolean;\r\n  roleModuleIsViewOwn: boolean;\r\n  roleModuleIsView: string;\r\n  roleModuleIsViewAll: boolean;\r\n  constructor() {\r\n    this.roleModuleId = '';\r\n    this.roleModuleModuleID = '';\r\n    this.roleModuleRoleID = '';\r\n    this.moduleDisplayOrder = 0;\r\n    this.roleModuleName = '';\r\n    this.roleModuleModuleName = '';\r\n    this.roleModuleAddFlag = false;\r\n    this.roleModuleDeleteFlag = false;\r\n    this.roleModuleEmailFlag = false;\r\n    this.roleModuleNotificationFlag = false;\r\n    this.roleModuleReadFlag = false;\r\n    this.roleModuleSMSFlag = false;\r\n    this.roleModuleUpdateFlag = false;\r\n    this.isEnableAddPermission = false;\r\n    this.isEnableReadPermission = false;\r\n    this.isEnableEditPermission = false;\r\n    this.isEnableDeletePermission = false;\r\n    this.isManageable =false;\r\n    this.moduleParentModuleId = '';\r\n    this.roleModuleIsViewShared=false;\r\n    this.roleModuleIsViewOwn = false;\r\n    this.roleModuleIsView= '';\r\n   this. roleModuleIsViewAll=false;\r\n  }\r\n}\r\n\r\nexport class Role {\r\n  roleId: string;\r\n  roleName: string;\r\n  reportto: string;\r\n  reporttoid: string;\r\n  roleDescription: string;\r\n  roleStatusId: string;\r\n  isRoleAssined: boolean;\r\n  userType: string;\r\n  isDisabled: boolean;\r\n  roleModuleModel: RoleModule[];\r\n\r\n  constructor() {\r\n    this.roleId = '';\r\n    this.roleName = '';\r\n    this.reportto = '';\r\n    this.reporttoid = '';\r\n    this.roleDescription = '';\r\n    this.isRoleAssined = false;\r\n    this.isDisabled= false;\r\n    this.roleModuleModel = [];\r\n\r\n  }\r\n  \r\n}\nexport class saveRoleModel {\n  roleId: number;\r\n  userTypeId: string;\r\n  roleStatusId: string;\r\n  roleName: string;\r\n  reporttoid : string;\r\n  roleDescription: string;\r\n  privilegesIds: string;\r\n  constructor() {\r\n    this.roleId = 0,\r\n      this.userTypeId = '',\r\n      this.roleStatusId = '',\r\n      this.roleName = '',\r\n      this.reporttoid = '';\r\n      this.roleDescription = '',\r\n      this.privilegesIds=''\r\n  }\r\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3JvbGUvcm9sZWVkaXQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { Role, RoleModule, ParentModules, RoleService, saveRoleModel } from './role.service';\nimport { ModuleList, CommonService } from '../shared/common.service';\nimport { TreeNode } from 'primeng/api';\nimport { ConfirmationDialogService } from '../shared/confirmation-dialog/confirmation-dialog.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-roleedit',\n  templateUrl: './roleedit.component.html',\n  styleUrls: ['./roleedit.component.scss']\n})\nexport class RoleeditComponent implements OnInit {\n  @ViewChild('treepopup', { static: false }) treepopup: ModalDirective;\n  pageTitle: string;\n  loadSave: boolean = false;\n  read = false;\n  loadRoleModules = false;\n  roleForm: FormGroup;\n  lstUserType: any;\n  statuses: any;\n  Detail: any;\n  role: Role = new Role();\n  saveRoleModel: saveRoleModel = new saveRoleModel();\n  selectUpdateEnable: boolean = false;\n  errorMessage: string;\n  roleModulesData: RoleModule[] = [];\n  roledata: [];\n  selectedValue: any\n  isDisabled = '';\n  addOrUpdatePermission: boolean=false;\n // modulePermission: ModuleList;\n  parentModule: ParentModules[] = []\n  roleTreeData: any;\n  files1: TreeNode[];\n  files2: TreeNode[];\n  reporttoname: any = '';\n  reporttoidselected: any;\n  reportid: string;\n  reportname: string;\n  rolegetid: any\n  tabdata: any;\n  selected: any[] = [];\n  radiobuttondata: any[] = [];\n  selectedid: any;\n  count: any;\n  values: any;\n  tabshow: boolean = false;\n  radiobutton: string = '';\n  privilageid: string = '';\n  privilageidArray: any[] = []; \n  roleautoid: any;\n  privilageList: any[] = [];\n  modulePermission: any[] = [];\n  lstWidgets: any[] = [];\n  FirstWidgetId: any;\n  isLoanHomi: boolean = false;\n  //templateObjects: Template[] = new Array();\n  //parentModule1: ParentModules;\n  constructor(private commonService: CommonService,\n    private fb: FormBuilder,\n    private roleService: RoleService,\n    private dialogService: ConfirmationDialogService,\n    private router: Router,\n    private toastr: ToastrService,\n    private route: ActivatedRoute, private http: HttpClient) {\n    const priviledgeCode = this.route.snapshot.data.privilegeCode;\n    const moduleCode = this.route.snapshot.data.moduleCode;\n    this.modulePermission = this.commonService.getPermissiondata(moduleCode);\n  \n    let add = this.modulePermission.find(m => m.privilegecode.toUpperCase() == priviledgeCode.toUpperCase());\n    if (add == undefined) {\n      this.addOrUpdatePermission = false;\n    } else {\n\n      this.addOrUpdatePermission = true;\n    }\n    this.commonService.getLoggedInName.subscribe((userdetail: any) => {\n      console.log('userdetail', userdetail);\n      if (userdetail.companyType.toUpperCase() == 'COMPANYTYPEFINANCIALINSTITUTE') {\n        this.isLoanHomi = true;\n      }\n    });\n    this.commonService.getMasterItemsList(\"manageuser_usertype_role\").subscribe((result: any) => {\n      this.lstUserType = this.commonService.masters;//.filter(x => x.masterName == \"UserType\");\n      console.log('lstUserType', this.lstUserType);\n    })\n  }\n\n  ngOnInit() {    \n\n\n    this.initForm();\n    this.getStatuses();\n\n    this.route.paramMap.subscribe(\n      params => {\n        const id = params.get('id');\n        this.rolegetid = id;\n        if (id) {\n\n          this.loadSave = true;\n          //this.getRole(id);\n          this.GetRoleDataByid(id);  \n\n          //\n        }\n        else {\n          this.pageTitle = 'Add Role';\n         \n         // this.getRoleModules(null);\n        }\n      }\n    );\n    //this.getFiles().then(files => {  \n    //  this.files1 = files;\n    //});\n    //this.roleService\n    //   .get('json.json')\n    //   .subscribe((response: any) => {\n    //     this.files1 = response.data\n    //   });   \n    this.GetRoleNameForTree(this.rolegetid);\n  }\n\n  selectUser(event) {\n    \n    this.getRoletabdata(event.value);  \n    \n  }\n\n  getStatuses() {\n    this.commonService.getMasterItemsList(\"role_Status\").subscribe((response: any) => {\n      this.statuses = this.commonService.masters;\n    });\n  }\n\n  cancelForm() {\n    this.router.navigateByUrl(\"/role\");\n  }\n\n\n  //getRole(id: string) {\n  //  this.addOrUpdatePermission = this.;\n  //  this.roleService.getRoleById(id)\n  //    .subscribe(\n  //      (role: Role) => {\n  //        this.displayRole(role);\n  //        this.loadSave = false;\n  //      }, (error: any) => {\n  //        this.errorMessage = <any>error;\n  //        this.loadSave = false;\n  //      });\n  //}\n\n  //displayRole(role: Role): void {\n  //  if (this.roleForm) {\n  //    this.roleForm.reset();\n  //    this.parentModule.length = 0;\n  //  }\n  //  this.role = role;\n  //  console.log('role', this.role);\n  //  // console.log(\"RoleUserT\", this.role)\n  //  if (this.role.roleId === '') {\n  //    this.pageTitle = 'Add Role';\n  //  }\n  //  else {\n  //    this.pageTitle = `Edit Role: ${this.role.roleName}`;\n  //  }\n\n  //  this.userType.disable();\n  //  this.reportid = this.role.reporttoid;\n  //  this.reportname = this.role.reportto\n\n  //  // Update the data on the form\n  //  this.roleForm.patchValue({\n  //    reportto: this.role.reportto,\n  //    roleId: this.role.roleId,\n  //    roleName: this.role.roleName,\n  //    userType: this.role.userType.toString(),\n  //    roleDescription: this.role.roleDescription,\n  //    roleStatusId: this.role.roleStatusId.toString(),\n  //  });\n  //  // console.log(\"RoleModuleFor\", this.role.roleModuleModel);\n  //  this.role.roleModuleModel.forEach(m => {\n  //    if (m.isManageable === true) {\n  //      //alert(1);\n  //      this.roleModules.push(this.buildRoleModules(m));\n  //    }\n  //    else {\n  //      //Parent Modules\n  //      this.parentModule.push(new ParentModules(m.roleModuleModuleID, m.roleModuleModuleName));\n  //    }\n  //  });\n  //  if (this.role.isRoleAssined) {\n  //    this.roleForm.get('roleStatusId').disable();\n  //  }\n\n\n  //}\n  //buildRoleModules(roleModule: RoleModule): FormGroup {\n  //  console.log(\"RoleModule1\", roleModule);\n  //  return this.fb.group({\n  //    roleModuleId: roleModule.roleModuleId,\n  //    roleModuleRoleID: roleModule.roleModuleRoleID,\n  //    roleModuleModuleID: roleModule.roleModuleModuleID,\n  //    roleModuleModuleName: roleModule.roleModuleModuleName,\n  //    roleModuleName: roleModule.roleModuleName,\n  //    moduleDisplayOrder: roleModule.moduleDisplayOrder,\n  //    roleModuleNotificationFlag: roleModule.roleModuleNotificationFlag,\n  //    roleModuleEmailFlag: roleModule.roleModuleEmailFlag,\n  //    roleModuleAddFlag: roleModule.roleModuleAddFlag,\n  //    roleModuleUpdateFlag: roleModule.roleModuleUpdateFlag,\n  //    roleModuleSMSFlag: roleModule.roleModuleSMSFlag,\n  //    roleModuleReadFlag: roleModule.roleModuleReadFlag,\n  //    roleModuleDeleteFlag: roleModule.roleModuleDeleteFlag,\n  //    isEnableAddPermission: roleModule.isEnableAddPermission,\n  //    isEnableReadPermission: roleModule.isEnableReadPermission,\n  //    isEnableEditPermission: roleModule.isEnableEditPermission,\n  //    isEnableDeletePermission: roleModule.isEnableDeletePermission,\n  //    isManageable: roleModule.isManageable,\n  //    moduleParentModuleId: roleModule.moduleParentModuleId,\n  //    roleModuleIsView: roleModule.roleModuleIsView,\n  //    roleModuleIsViewShared: roleModule.roleModuleIsViewShared,\n  //    roleModuleIsViewOwn: roleModule.roleModuleIsViewOwn,\n  //    roleModuleIsViewAll: roleModule.roleModuleIsViewAll\n  //  });\n\n  //}\n  //getRoleModules(userId) {\n  //  //kate\n  //  this.loadSave = true;\n  //  this.parentModule = [];\n  //  this.loadRoleModules = true; // console.log(\"inn\")\n  //  this.roleService.getRoleModules(userId).subscribe((response: any) => {\n  //    //// console.log(\"reole  response\", response)\n  //    this.roleModulesData = response;\n  //    if (response) {\n  //      this.roleService.roleModules.forEach(m => {\n  //        //  this.roleModules.push(this.buildRoleModules(m));\n  //        //// console.log(\"RoleModule\",this.roleService.roleModules);\n  //        if (m.isManageable === true) {\n  //          this.roleModules.push(this.buildRoleModules(m));\n\n  //        }\n  //        else {\n  //          //Parent Modules\n  //          // let parentModule1: ParentModules;\n  //          // parentModule1.roleModuleId = m.roleModuleId;\n  //          //parentModule1.roleModuleModuleName = m.roleModuleModuleName;\n\n  //          this.parentModule.push(new ParentModules(m.roleModuleModuleID, m.roleModuleModuleName));\n\n  //          //this.parentModule.push(m.roleModuleId);\n  //          //this.parentModule. = m.roleModuleModuleName;\n  //          //this.parentModule.push(parentModule);\n  //        }\n\n  //      });\n  //      // console.log(\"RoleMiduleIsManageble\", this.roleModules);\n  //      // console.log(\"RoleMiduleIsManagebleFalse\", this.parentModule);\n  //      this.loadSave = false;\n  //      this.loadRoleModules = false;\n  //    }\n  //  }, error => {\n  //    this.loadRoleModules = false;\n  //    this.loadSave = false;\n  //  })\n  //  // console.log(\"this.parentModule\", this.parentModule);\n  //  var d = this.parentModule.filter(x => x.roleModuleId === \"442f8d12-92b0-42fd-aa0b-a71514d54d9f\")\n  //  // console.log(d);\n\n  //}\n\n  save() {\n    if (this.roleForm.valid) {\n      this.roleService.checkRoleNameIsExist(this.roleForm.controls.roleId.value, this.roleForm.controls.roleName.value).subscribe(m => {\n        if (!m) {\n          let dataas: string;\n          dataas = this.radiobuttondata.map(x => x.Id).join(\",\");\n\n\n          console.log(dataas);\n          if (dataas != '') {\n            this.privilageid = this.privilageid.concat(',')\n\n            console.log(this.privilageid);\n            this.privilageid = this.privilageid.concat(dataas)\n          }\n\n          console.log(this.privilageid);\n          console.log('this.roleForm.value', this.roleForm.value);\n          if (this.privilageid != '' && this.privilageid != undefined) {\n\n\n            this.saveRoleModel.userTypeId = this.roleForm.value.userType,\n              this.saveRoleModel.roleId = this.roleautoid == null ? 0 : this.roleautoid,\n              this.saveRoleModel.roleStatusId = this.roleForm.value.roleStatusId,\n              this.saveRoleModel.roleName = this.roleForm.value.roleName\n            this.saveRoleModel.reporttoid = this.roleForm.value.reporttoid\n\n            this.saveRoleModel.roleDescription = this.roleForm.value.roleDescription\n            this.saveRoleModel.privilegesIds = this.privilageid\n\n            var data = JSON.stringify(this.saveRoleModel);\n            console.log('data', data);\n\n           \n            this.roleService.SaveRoledata(data).subscribe((result: any) => {\n\n              var resultdata = JSON.parse(result);\n              console.log('dataresult', resultdata);\n              if (resultdata.MSG == 'SUCCESS') {\n                this.toastr.success('Role has been added successfully.');\n                this.router.navigateByUrl(\"/role\");\n              }\n              else if (resultdata.MSG == 'UPDATE_SUCCESS') {\n                this.toastr.success('Role has been updated successfully.');\n                this.router.navigateByUrl(\"/role\");\n              }\n              else {\n                this.toastr.error('Error!', 'Unable to save record.');\n              }\n            })\n          }\n          else {\n            this.dialogService.confirm(\"Role Access\", 'Please select atleast one Access Level.', 'Ok', 'Cancel', false).subscribe(confirmed => {\n\n            });\n          }\n        }\n        else {\n          this.dialogService.confirm(\"Add Role\", `'${this.roleForm.controls.roleName.value}' role name is already exist.`, 'Ok', 'Cancel', false).subscribe(confirmed => {\n          });\n\n        }\n      });\n    } \n       \n    else {\n      this.commonService.validateAllFormFields(this.roleForm);\n    }\n  }     \n\n    //console.log('this.roleForm.value', this.roleForm.value);\n    //   return;    \n     \n\n    //if (this.roleForm.valid) {\n    //  var selected = this.roleModules.controls.filter(m => m.get('roleModuleReadFlag').value === true\n    //    || m.get('roleModuleAddFlag').value === true\n    //    || m.get('roleModuleUpdateFlag').value === true\n    //    || m.get('roleModuleDeleteFlag').value === true);\n\n    //  this.loadSave = true;\n    //  this.roleService.checkRoleNameIsExist(this.roleForm.controls.roleId.value, this.roleForm.controls.roleName.value).subscribe(m => {\n    //    if (!m) {  \n    //      if (selected.length != 0) {\n    //        this.roleService.saveRole(this.roleForm.value).subscribe((result: any) => {\n    //          if (result.statusCode == 200) {\n\n    //            this.toastr.success(result.responseMessage);\n    //            this.router.navigateByUrl(\"/role\");\n    //            setTimeout(() => { this.loadSave = false; }, 3000);\n    //          }\n    //          else {\n    //            this.loadSave = false;\n    //            this.toastr.error('Error!', 'Unable to save record.');\n    //          }\n    //        })\n    //      }\n    //      else {\n    //        this.loadSave = false;\n    //        this.dialogService.confirm(\"Role Access\", 'Please select atleast one Access Level.', 'Ok', 'Cancel', false).subscribe(confirmed => {\n\n    //        });\n    //      }\n    //    } else {\n    //      this.loadSave = false;\n    //      this.dialogService.confirm(\"Add Role\", `'${this.roleForm.controls.roleName.value}' role name is already exist.`, 'Ok', 'Cancel', false).subscribe(confirmed => {\n    //      });\n    //    }\n    //  });\n\n    //}\n    //else {\n    //  this.commonService.validateAllFormFields(this.roleForm);\n    //}\n  \n         \n\n  //enableSelectAll($event) {\n  //  if ($event.target.value === 'add') {\n  //    this.roleModules.controls.forEach(obj => {\n  //      obj.patchValue({\n  //        roleModuleAddFlag: $event.target.checked\n  //      });\n  //    });\n\n  //    //Start Read Role\n\n  //    this.roleModules.controls.forEach(obj => {\n  //      if ($event.target.checked == false && (obj.get('roleModuleUpdateFlag').value == true || obj.get('roleModuleDeleteFlag').value == true)) {\n  //        this.roleForm.patchValue({\n  //          readSelect: true\n  //        });\n  //        obj.patchValue({\n  //          roleModuleReadFlag: true,\n  //          roleModuleIsView: 'all'\n  //        });\n  //      } else if ($event.target.checked == true) {\n  //        this.roleForm.patchValue({\n  //          readSelect: true\n  //        });\n  //        obj.patchValue({\n  //          roleModuleReadFlag: true,\n  //          roleModuleIsView: 'all'\n  //        });\n  //      }\n\n  //    });\n\n  //    //End Read Role\n  //  }\n  //  else if ($event.target.value === 'read') {\n  //    if ($event.target.checked) {\n  //      this.roleModules.controls.forEach(obj => {\n  //        obj.patchValue({\n  //          roleModuleReadFlag: $event.target.checked,\n  //          roleModuleIsView: 'all'\n  //        });\n  //      });\n\n  //    }\n  //    else {\n  //      this.roleModules.controls.forEach(obj => {\n  //        obj.patchValue({\n  //          //roleModuleReadFlag: $event.target.checked,\n  //          roleModuleIsView: ''\n  //        });\n  //      });\n  //    }\n  //    debugger\n  //    if (!$event.target.checked) {\n  //      this.roleModules.controls.forEach(obj => {\n  //        obj.patchValue({\n  //          roleModuleAddFlag: false,\n  //          roleModuleUpdateFlag: false,\n  //          roleModuleDeleteFlag: false\n  //        });\n  //      });\n\n  //      this.roleForm.patchValue({\n  //        addSelect: false,\n  //        deleteSelect: false,\n  //        updateSelect: false,\n  //        readSelect: false\n  //      });\n  //    }\n  //    else {\n  //      this.roleModules.controls.forEach(obj => {\n  //        obj.patchValue({\n  //          roleModuleReadFlag: $event.target.checked,\n  //          roleModuleIsView: 'all'\n  //        });\n  //      });\n  //    }\n\n  //  }\n  //  else if ($event.target.value === 'update') {\n  //    this.roleModules.controls.forEach(obj => {\n  //      obj.patchValue({\n  //        roleModuleUpdateFlag: $event.target.checked\n  //      });\n  //    });\n\n  //    //Start Read Role\n\n  //    this.roleModules.controls.forEach(obj => {\n  //      if ($event.target.checked == false && (obj.get('roleModuleAddFlag').value == true || obj.get('roleModuleDeleteFlag').value == true)) {\n  //        this.roleForm.patchValue({\n  //          readSelect: true\n  //        });\n  //        obj.patchValue({\n  //          roleModuleReadFlag: true,\n  //          // roleModuleReadFlag: true,\n  //          roleModuleIsView: 'all'\n  //        });\n  //      } else if ($event.target.checked == true) {\n  //        this.roleForm.patchValue({\n  //          readSelect: true\n  //        });\n  //        obj.patchValue({\n  //          roleModuleReadFlag: true,\n  //          //roleModuleReadFlag: true,\n  //          roleModuleIsView: 'all'\n  //        });\n  //      }\n\n  //    });\n\n  //    //End Read Role\n\n  //  }\n  //  else if ($event.target.value === 'delete') {\n  //    this.roleModules.controls.forEach(obj => {\n  //      obj.patchValue({\n  //        roleModuleDeleteFlag: $event.target.checked\n  //      });\n  //    });\n\n  //    //Start Read Role\n\n  //    this.roleModules.controls.forEach(obj => {\n  //      if ($event.target.checked == false && (obj.get('roleModuleAddFlag').value == true || obj.get('roleModuleUpdateFlag').value == true)) {\n  //        this.roleForm.patchValue({\n  //          readSelect: true\n  //        });\n  //        obj.patchValue({\n  //          roleModuleReadFlag: true,\n  //          roleModuleIsView: 'all'\n  //        });\n  //      } else if ($event.target.checked == true) {\n  //        this.roleForm.patchValue({\n  //          readSelect: true\n  //        });\n  //        obj.patchValue({\n  //          roleModuleReadFlag: true,\n  //          roleModuleIsView: 'all'\n  //        });\n  //      }\n\n  //    });\n\n  //    //End Read Role\n  //  }\n  //  this.selectUpdateEnable = true;\n\n\n  //}\n\n  //enableTopHeader(type, control, $event) {      \n\n  //  if (type === 'add') {\n  //    this.roleModules.controls.filter(m => m.get('roleModuleModuleID').value === control.get('roleModuleModuleID').value).forEach(obj => {\n\n  //      obj.patchValue({\n  //        roleModuleAddFlag: $event.target.checked\n  //      });\n  //    });\n\n  //    this.roleForm.patchValue({\n  //      addSelect: !this.roleModules.controls.some(m => m.get('roleModuleAddFlag').value === false)\n  //    });\n\n  //    //Start Read Role\n  //    this.roleModules.controls.filter(m => m.get('roleModuleModuleID').value === control.get('roleModuleModuleID').value).forEach(obj => {\n\n  //      if ($event.target.checked == false && (obj.get('roleModuleUpdateFlag').value == true || obj.get('roleModuleDeleteFlag').value == true)) {\n  //        obj.patchValue({\n  //          roleModuleReadFlag: true,\n  //          roleModuleIsView: 'all'\n  //        });\n  //      }\n  //      else if ($event.target.checked == true) {\n  //        obj.patchValue({\n  //          roleModuleReadFlag: true,\n  //          roleModuleIsView: 'all'\n  //        });\n  //      }\n  //    });\n\n  //    //End Read Role\n\n  //  }\n  //  else if (type === 'read') {\n  //    this.roleModules.controls.filter(m => m.get('roleModuleModuleID').value === control.get('roleModuleModuleID').value).forEach(obj => {\n\n  //      obj.patchValue({\n  //        roleModuleReadFlag: $event.target.checked\n  //      });\n  //      if (!$event.target.checked) {\n  //        obj.patchValue({\n  //          roleModuleAddFlag: false,\n  //          roleModuleDeleteFlag: false,\n  //          roleModuleUpdateFlag: false\n  //        });\n  //      }\n  //    });\n\n  //    this.roleForm.patchValue({\n  //      readSelect: !this.roleModules.controls.some(m => m.get('roleModuleReadFlag').value === false)\n  //    });\n\n  //    if (!$event.target.checked) {\n  //      this.roleForm.patchValue({\n  //        addSelect: false,\n  //        updateSelect: false,\n  //        deleteSelect: false\n  //      });\n  //    }\n\n  //  } else if (type === 'update') {\n  //    this.roleModules.controls.filter(m => m.get('roleModuleModuleID').value === control.get('roleModuleModuleID').value).forEach(obj => {\n\n  //      obj.patchValue({\n  //        roleModuleUpdateFlag: $event.target.checked\n  //      });\n  //    });\n\n  //    this.roleForm.patchValue({\n  //      updateSelect: !this.roleModules.controls.some(m => m.get('roleModuleUpdateFlag').value === false)\n  //    });\n\n  //    //Start Read Role\n  //    this.roleModules.controls.filter(m => m.get('roleModuleModuleID').value === control.get('roleModuleModuleID').value).forEach(obj => {\n\n  //      if (($event.target.checked == false) && (obj.get('roleModuleAddFlag').value == true || obj.get('roleModuleDeleteFlag').value == true)) {\n  //        obj.patchValue({\n  //          roleModuleReadFlag: true,\n  //          roleModuleIsView: 'all'\n  //        });\n  //      }\n  //      else if ($event.target.checked == true) {\n  //        obj.patchValue({\n  //          roleModuleReadFlag: true,\n  //          roleModuleIsView: 'all'\n  //        });\n  //      }\n  //    });\n\n  //    //End Read Role\n\n  //  } else if (type === 'delete') {\n  //    this.roleModules.controls.filter(m => m.get('roleModuleModuleID').value === control.get('roleModuleModuleID').value).forEach(obj => {\n\n  //      obj.patchValue({\n  //        roleModuleDeleteFlag: $event.target.checked\n  //      });\n  //    });\n\n  //    this.roleForm.patchValue({\n  //      deleteSelect: !this.roleModules.controls.some(m => m.get('roleModuleDeleteFlag').value === false)\n  //    });\n\n  //    //Start Read Role\n  //    this.roleModules.controls.filter(m => m.get('roleModuleModuleID').value === control.get('roleModuleModuleID').value).forEach(obj => {\n\n  //      if ($event.target.checked == false && (obj.get('roleModuleUpdateFlag').value == true || obj.get('roleModuleAddFlag').value == true)) {\n  //        obj.patchValue({\n  //          roleModuleReadFlag: true,\n  //          roleModuleIsView: 'all'\n  //        });\n  //      }\n  //      else if ($event.target.checked == true) {\n  //        obj.patchValue({\n  //          roleModuleReadFlag: true,\n  //          roleModuleIsView: 'all'\n  //        });\n  //      }\n  //    });\n\n  //    //End Read Role\n\n  //  }\n\n  //}\n\n  //get roleModules(): FormArray {\n  //  return <FormArray>this.roleForm.get('roleModules');\n  //}\n\n\n\n  GetRoleNameForTree(id: any) {\n    this.roleService.GetRoleNameForTree(id).subscribe((result: any) => {\n      console.log('result', result)\n      this.files2 = JSON.parse(result).data;\n\n      console.log('this.files1', this.files2)\n    })\n\n  }\n\n  nodeSelect(e: any) {\n    console.log('sadasdf', e)\n    this.reporttoname = e.node.label;\n    this.reporttoidselected = e.node.data;\n    this.roleForm.get(\"reportto\").setValue(this.reporttoname);\n    this.roleForm.get(\"reporttoid\").setValue(this.reporttoidselected);\n    console.log('this.reporttoname', this.reporttoname)\n    console.log('this.reporttoid', this.reporttoid)\n    this.treepopup.hide();\n  }\n\n  private initForm() {\n\n    this.roleForm = this.fb.group({\n      'roleId': [this.role.roleId, Validators.nullValidator],\n      'roleName': [this.role.roleName, [Validators.required, Validators.maxLength(50)]],\n      'roleDescription': [this.role.roleDescription, Validators.maxLength(200)],\n      'roleStatusId': [this.role.roleStatusId, Validators.required],\n      //'addSelect': false,\n      //'updateSelect': false,\n      //'deleteSelect': false,\n      //'readSelect': false,\n      'userType': [this.role.userType, Validators.required],\n     // roleModules: this.fb.array([], Validators.required),\n      reportto: [''],\n      reporttoid: [''],\n\n    });\n  }\n\n\n  private dataUrl = 'assets';\n  selectedAllNodes: TreeNode[] = [];\n  openPopup() {\n\n\n    //this.GetRoleNameForTree();\n    this.treepopup.show();\n    this.files2.forEach(s => {\n      console.log('report', this.reportid);\n      let data: any = this.CheckId(s, this.reportid.toString());\n      if (data != null) {\n\n        this.selectedAllNodes.forEach(node => {\n          node.expanded = true;\n        })\n\n      }\n\n    })\n  }\n\n\n\n\n  CheckId(s: TreeNode, selectedId: string) {\n    console.log('children', s.children);\n    if (s.data.toString() === selectedId) {\n      this.selectedAllNodes.push(s);\n      return s;\n    }\n    else if ((s.children != null && s.children.length != undefined)) {\n\n\n      let i = 0;\n      console.log('inchildren', s.children);\n\n      if (s.children.length > 0) {\n\n        while (s.children.length > i) {\n          let data: any = this.CheckId(s.children[i], selectedId);\n          if (data != null) {\n            this.selectedAllNodes.push(s);\n            return data;\n          }\n          i++;\n        }\n      }\n    }\n  }\n  ClosePopup() {\n    this.treepopup.hide();\n  }\n\n  getRoletabdata(usertypeid, id = null) {\n    this.loadSave = true;\n    this.tabshow = true;  \n    setTimeout(() => {\n    this.roleService.getRoletabdata(usertypeid, id).subscribe((result: any) => {\n      this.tabdata = result;\n\n      this.tabdata = JSON.parse(this.tabdata);\n      console.log(\"tabdata\", this.tabdata);\n      if (this.tabdata != null) {\n        (this.tabdata as any[]).forEach(i => {\n          (i.SUB_MODULES as any[]).forEach(s => {\n            i[\"parentIsSelected\"] = false;\n            (s.PRIVILEGE_LISTS as any[]).forEach(d => {\n\n              if (d.IS_SUB_CHILD === true && d.IS_Selected === 1) {\n                this.radiobuttondata.push({ Id: d.PRIVILEGE_ID, GroupId: d.SUB_CHILD_GROUP });\n              } else if (d.IS_SUB_CHILD === false && d.IS_Selected === 1) {\n                //debugger;\n                this.privilageidArray.push({ Id: d.PRIVILEGE_ID });\n                i.parentIsSelected = true;\n                //this.parentIsSelected = 1;\n\n              }\n               if (d.IS_SUB_CHILD === false && d.IS_Selected === 0) {\n                 i.parentIsSelected = false;\n              }\n\n            })\n          });\n        })\n      }\n      if (this.privilageidArray.length > 0) {\n        this.privilageid = this.privilageidArray.map(x => x.Id).join(',');\n        this.selected = this.privilageid.split(',').map(function (item) {\n          return parseInt(item, 10);\n        });\n      }\n      this.loadSave = false;\n\n      //console.log(\"radiobutton365656565\", this.radiobuttondata);\n      //console.log(\"checkbox12\", this.privilageidArray);\n      //console.log(\"checkbox\", this.privilageid);\n    });\n  },2000);\n        \n  }\n  getPriviledgesByType(list, type) {\n    return list.filter(item =>{ return item.PRIVILEGE_TYPE == type})\n  }\n  getUniquePriviledgesType(list) {\n    return list.map(item => item.PRIVILEGE_TYPE)\n      .filter((value, index, self) => self.indexOf(value) === index)\n  }\n  onChangeMainCheckbox(event, e, s) {\n    console.log(s);\n    const checked = event.target.checked;\n    let data: any[] = [];\n    data = s.PRIVILEGE_LISTS;\n    let radio = data.find(s => s.DEFAULT_VIEW != 0 && s.PRIVILEGE_TYPE.toUpperCase() === 'URL');  \n    let parentid = data.find(s => s.PRIVILEGE_TYPE.toUpperCase() === 'URL' && s.PARENT_ID === 0)\n    if (checked) {\n      data.forEach(s => {\n        if (s.IS_Selected != 1 && s.IS_SUB_CHILD === false) {\n          this.selected.push(s.PRIVILEGE_ID);\n          s.IS_Selected = 1;\n        }\n      })\n      if (radio.IS_Selected != 1) {\n\n        var ind = this.radiobuttondata.findIndex(x => x.GroupId.toString() == radio.SUB_CHILD_GROUP.toString())\n\n        if (ind == -1) {\n          this.radiobuttondata.push({ Id: radio.PRIVILEGE_ID, GroupId: radio.SUB_CHILD_GROUP });\n          radio.IS_Selected = 1;\n        }\n      }\n\n    }\n    else {\n      data.forEach(s => {\n        if (s.IS_Selected === 1 && s.IS_SUB_CHILD === false) {\n          s.IS_Selected = 0;\n          const indexOfList = this.selected.indexOf(s.PRIVILEGE_ID);\n          if (indexOfList != -1) {\n            this.selected.splice(indexOfList, 1);\n          }\n        }\n      })\n      data.forEach(s => {\n        if (s.IS_SUB_CHILD === true) {\n\n          s.IS_Selected = 0;\n          var radioindlist = this.radiobuttondata.findIndex(x => x.GroupId.toString() == s.SUB_CHILD_GROUP.toString())\n          if (radioindlist != -1) {\n            this.radiobuttondata.splice(radioindlist, 1);\n          }\n        }\n      })\n      \n    }\n    console.log('selected', this.selected.toString());\n    this.privilageid = this.selected.toString();\n    console.log('radiobuttondataafter', this.radiobuttondata);\n  }\n\n  onChange(Id: any, event,data,plist:any[]) {\n    const checked = event.target.checked;\n             \n    let id = data.PARENT_ID;\n    let radio = plist.find(s => s.DEFAULT_VIEW != 0);\n    console.log('radio', radio);\n    console.log('data', data);\n    console.log('plist', plist);\n    if (checked) {\n    \n      this.selected.push(Id);\n      data.IS_Selected = 1;\n      if (id != 0 && data.PRIVILEGE_TYPE == 'URL') {\n        let parent = plist.find(s => s.PRIVILEGE_ID.toString() === id.toString());\n        if (parent.IS_Selected != 1 && parent.PRIVILEGE_TYPE == 'URL') {\n          this.selected.push(parent.PRIVILEGE_ID);\n          parent.IS_Selected = 1;\n        } \n      }\n      if (radio.IS_Selected != 1 && data.PRIVILEGE_TYPE == 'URL') {\n          \n          var ind = this.radiobuttondata.findIndex(x => x.GroupId.toString() == radio.SUB_CHILD_GROUP.toString())\n          \n          if (ind == -1) {\n            this.radiobuttondata.push({ Id: radio.PRIVILEGE_ID, GroupId: radio.SUB_CHILD_GROUP });\n            radio.IS_Selected = 1;\n          }\n        } \n    }\n    else {\n\n        \n\n      if (data.PARENT_ID === 0 && data.PRIVILEGE_TYPE == 'URL') {\n        let parentdata: any[] = [];   \n        parentdata = plist.filter(x => x.IS_Selected == 1 );\n        console.log('parentdata', parentdata);\n        parentdata.forEach(s => {\n          s.IS_Selected = 0;\n          const indexOfList = this.selected.indexOf(s.PRIVILEGE_ID);\n          console.log('indexOfList', indexOfList);\n          if (indexOfList != -1) {\n            this.selected.splice(indexOfList, 1);\n          }\n          \n          var radioindlist = this.radiobuttondata.findIndex(x => x.GroupId.toString() == s.SUB_CHILD_GROUP.toString())\n          if (radioindlist != -1 ) {\n            this.radiobuttondata.splice(radioindlist, 1);\n          }\n\n\n\n        })\n      }\n      else {\n        const index = this.selected.indexOf(Id);\n        data.IS_Selected = 0;\n        this.selected.splice(index, 1);\n      }\n       \n      \n    }\n    console.log('radiobuttondataafter', this.radiobuttondata);\n    this.values = this.selected.toString();\n    const count = this.selected.length;\n    this.count = count;         \n    console.log('selected',  this.selected.toString());\n    this.privilageid = this.selected.toString();\n  }\n  check(e, data, plist: any[]) {\n    let parentid = data.PARENT_ID;\n    let parent = plist.find(s => s.PRIVILEGE_ID.toString() === parentid.toString());\n    if (parent.IS_Selected != 1) {\n      parent.IS_Selected = 1;\n      this.selected.push(parent.PRIVILEGE_ID);\n      this.privilageid = this.selected.toString();\n\n    }\n\n    var ind = this.radiobuttondata.findIndex(x => x.GroupId == e.target.name)\n\n\n    if (ind == -1) {\n      this.radiobuttondata.push({ Id: e.target.value, GroupId: e.target.name });\n      data.IS_Selected = 1;\n    }\n    else {\n      var id = this.radiobuttondata[ind].Id;\n            var changedata = plist.find(s => s.PRIVILEGE_ID.toString() === id.toString());\n    \n      changedata.IS_Selected = 0;\n      this.radiobuttondata.splice(ind, 1);\n      \n      data.IS_Selected = 1;\n      this.radiobuttondata.push({ Id: e.target.value, GroupId: e.target.name });\n    }\n    \n         \n    \n        \n    console.log(this.radiobuttondata);\n   \n  }\n  GetRoleDataByid(id) {\n    this.loadSave = true;\n    this.roleService.GetRoleDataByid(id).subscribe((result: any) => {\n\n      //console.log('result123', JSON.parse(result));\n      let resultdata: any[] = [];    \n      resultdata.push(JSON.parse(result));\n     \n      this.roleautoid = resultdata[0].data[0].RoleIDAuto;\n      this.getRoletabdata(resultdata[0].data[0].UserTypeID, resultdata[0].data[0].RoleId)\n      this.reportid = resultdata[0].data[0].ReportTo;\n      this.reportname = resultdata[0].data[0].reporttoname\n      console.log('result123', resultdata[0].data[0]);\n\n      this.roleForm.patchValue({\n        reportto: resultdata[0].data[0].reporttoname,\n        roleId: resultdata[0].data[0].RoleId,\n        roleName: resultdata[0].data[0].RoleName,\n        userType: resultdata[0].data[0].UserTypeID == null ? resultdata[0].data[0].UserTypeID : resultdata[0].data[0].UserTypeID.toString(),\n        roleDescription: resultdata[0].data[0].RoleDescription,\n        roleStatusId: resultdata[0].data[0].RoleStatusId == null ? resultdata[0].data[0].RoleStatusId : resultdata[0].data[0].RoleStatusId.toString(),\n       \n      });\n    \n    })\n  \n  }\n  isChecked(p: any): boolean {\n    if (p.IS_Selected == 1) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n \n\n  //getFiles() {\n  //  return this.http.get('json')\n  //    .toPromise()\n  //    .then(res => (<TreeNode[]> JSON.parse(res.toString()).data));\n  //}        \n  get roleId() { return this.roleForm.get('roleId'); }\n  get roleName() { return this.roleForm.get('roleName'); } \n  get addSelect() { return this.roleForm.get('addSelect'); }\n  get updateSelect() { return this.roleForm.get('updateSelect'); }\n  get deleteSelect() { return this.roleForm.get('deleteSelect'); }\n  get readSelect() { return this.roleForm.get('readSelect'); }\n  get roleDescription() { return this.roleForm.get('roleDescription'); }\n  get roleStatusId() { return this.roleForm.get('roleStatusId'); }\n  get userType() { return this.roleForm.get('userType'); }\n  get reportto() { return this.roleForm.get('reportto'); }\n  get reporttoid() { return this.roleForm.get('reporttoid'); }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3JvbGUvdXNlcmxpc3Rpbmdwb3B1cC91c2VybGlzdGluZ3BvcHVwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { SelectionType, DatatableComponent } from '@swimlane/ngx-datatable';\nimport { CommonService } from '../../shared/common.service';\nimport { RoleService } from '../role.service';\n\n@Component({\n  selector: 'app-userlistingpopup',\n  templateUrl: './userlistingpopup.component.html',\n  styleUrls: ['./userlistingpopup.component.scss']\n})\nexport class UserListingPopUpComponent implements OnInit {\n  @ViewChild('ServiceUsersListPopUp', { static: false }) ServiceUsersPopup: ModalDirective;\n  loadSave: boolean = false;\n  UserName: any;\n  sortDir: any = 'desc';\n  sortColumn: any = 'Id';\n  @ViewChild('table', { static: false }) table: DatatableComponent;\n  @Input() offset: number;\n  lstServiceUserNames: any = {\n    pager: {},\n    data: []\n  }\n  SelectionType = SelectionType;\n  selected = [];\n  lstPageSize: any;\n  searchTxt: any;\n  pageSizeValue: any = 10;\n  pageNo: any = 0;\n  currentPage: number;\n  roleId: any;\n  constructor(private commonService: CommonService, private serviceRoleService: RoleService) { }\n\n  ngOnInit() {\n    //debugger;\n    this.pageNo = 1;\n    this.pageSizeValue = 10;\n    this.getPageSizes();\n    this.searchTxt = '';\n    this.refresh();\n  }\n  show(data) {\n    this.pageSizeValue = 10;\n    this.pageNo = 1;\n    this.currentPage = 1;\n    this.UserName = data.Name;\n    this.roleId = data.RoleId;\n    this.loadSave = true;\n    this.ServiceUsersPopup.show();\n    this.loadSave = false;\n    this.serviceRoleService.GetServiceUsers(this.searchTxt, this.sortColumn, this.sortDir, 1, this.pageSizeValue, this.roleId).subscribe(resp => {\n      setTimeout(() => {\n        this.lstServiceUserNames = resp;\n        this.offset = this.pageNo + 1;\n        this.loadSave = false;\n      }, 200);\n    }, err => {\n      this.loadSave = false;\n    });\n  }\n  close() {\n    this.loadSave = false;\n    this.ServiceUsersPopup.hide();\n  }\n  get curPage(): number {\n    return this.offset;\n  }\n  refresh() {\n    this.table.sorts = [];\n    this.serviceRoleService.GetServiceUsers(this.searchTxt, this.sortColumn, this.sortDir, this.pageNo, this.pageSizeValue, this.roleId).subscribe(resp => {\n      setTimeout(() => {\n        this.lstServiceUserNames = resp;\n        this.offset = this.pageNo + 1;\n        this.loadSave = false;\n      }, 200);\n    }, err => {\n      this.loadSave = false;\n    });\n  }\n  setPage($event) {\n    //debugger;\n    if (typeof $event.page == \"undefined\")\n    {\n      this.loadSave = false;\n    }\n    else {\n      this.loadSave = true;\n    }\n    this.pageNo = $event.page;   \n    this.refresh();\n  }\n  onSort($event) {\n    const sort = $event.sorts[0]\n    this.sortDir = sort.dir;\n    this.sortColumn = sort.prop;\n    this.serviceRoleService.GetServiceUsers(this.searchTxt, this.sortColumn, this.sortDir, this.pageNo, this.pageSizeValue, this.roleId).subscribe(resp => {\n      setTimeout(() => {\n        this.lstServiceUserNames = resp;\n        this.table.recalculate();\n        this.table.recalculateColumns();\n        this.loadSave = false;\n      }, 200);\n    }, err => {\n      this.loadSave = false;\n    });\n  }\n  getPageSizes() {\n    this.commonService.getMasterItemsList(\"PageSize\").subscribe((res: any) => {\n      this.lstPageSize = this.commonService.masters;\n    })\n  }\n  onChange($event) {\n    this.serviceRoleService.GetServiceUsers(this.searchTxt, this.sortColumn, this.sortDir, this.pageNo, this.pageSizeValue, this.roleId).subscribe(resp => {\n      setTimeout(() => {\n        this.lstServiceUserNames = resp;\n        this.table.recalculate();\n        this.table.recalculateColumns();\n        this.loadSave = false;\n      }, 200);\n    }, err => {\n      this.loadSave = false;\n    });\n  }\n  onReset() {\n    this.sortDir = 'desc';\n    this.sortColumn = 'Id';\n    this.pageNo = 1;\n    this.pageSizeValue = 10;\n    this.searchTxt = '';\n    this.refresh();\n  }\n  onSearch() {\n    this.pageNo = 1;\n    this.pageSizeValue = 10;\n    this.refresh();\n  }\n  updateFilter(event) {\n    this.searchTxt = event.target.value;\n    let keycode = (event.keyCode ? event.keyCode : event.which);\n    if (keycode === 13 || keycode === '13') {\n      this.onSearch();\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}