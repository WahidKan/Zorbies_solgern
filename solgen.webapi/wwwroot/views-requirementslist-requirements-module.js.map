{"version":3,"sources":["./src/app/views/requirementslist/addeditrequirements/addeditrequirements.component.html","./src/app/views/requirementslist/requirementslist.component.html","./src/app/views/requirementslist/addeditrequirements/addeditrequirements.component.ts","./src/app/views/requirementslist/requirements-routing.module.ts","./src/app/views/requirementslist/requirements.module.ts","./src/app/views/requirementslist/requirements.service.ts","./src/app/views/requirementslist/requirementslist.component.scss","./src/app/views/requirementslist/requirementslist.component.ts"],"names":[],"mappings":"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","file":"views-requirementslist-requirements-module.js","sourcesContent":["export default \"<div bsModal #addEditRequirementPopup=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg modal-info req_pop\\\" [ngClass]=\\\"{'disabled':loadSave}\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">{{title}}</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"addForm\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"row  mb-2\\\">\\r\\n            <div class=\\\"col-12 col-md-12 col-lg-12\\\"><h3 class=\\\"form-heading ng-star-inserted ml-0 mt-0\\\"><span>Information:</span></h3></div>\\r\\n\\r\\n            <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n              <label>Requirement Name:<span class=\\\"text-danger\\\">*</span></label>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Requirement Name\\\" formControlName=\\\"requirementName\\\">\\r\\n                <small *ngIf=\\\"requirementName.invalid && (requirementName.dirty || requirementName.touched) && requirementName.errors?.required\\\"\\r\\n                       style=\\\"color:red;\\\">Please select Requirement Name</small>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n              <label>Pertains To:</label>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <ng-select [items]=\\\"lstPertainsTo\\\"\\r\\n                           placeholder=\\\"None\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\" formControlName=\\\"pertainsTo\\\" [closeOnSelect]=\\\"true\\\">\\r\\n                </ng-select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n              <label>Record Type:<span class=\\\"text-danger\\\"></span></label>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"recordType\\\" disabled>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n              <label>Required by:</label>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <ng-select [items]=\\\"lstRequiredBy\\\"\\r\\n                           placeholder=\\\"None\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\" formControlName=\\\"requiredby\\\" [closeOnSelect]=\\\"true\\\">\\r\\n                </ng-select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n              <label>Type:</label>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <ng-select [items]=\\\"lstType\\\"\\r\\n                           placeholder=\\\"None\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\" formControlName=\\\"type\\\" [closeOnSelect]=\\\"true\\\">\\r\\n                </ng-select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n              <label>Service Territory:</label>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <ng-select [items]=\\\"lstServiceTerritory\\\"\\r\\n                           placeholder=\\\"None\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\" formControlName=\\\"serviceTerritory\\\" [closeOnSelect]=\\\"true\\\">\\r\\n                </ng-select>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n              <label>Is Active:</label>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"switch\\\">\\r\\n                  <input type=\\\"checkbox\\\" id=\\\"customCheck1\\\" formControlName=\\\"isActive\\\">\\r\\n                  <span class=\\\"slider round\\\"><span>Yes</span></span>\\r\\n                </label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12 col-lg-6\\\">\\r\\n              <label>Description:</label>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <textarea type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"description\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row mb-2\\\">\\r\\n            <div class=\\\"col-12 col-md-12 col-lg-12\\\"><h3 class=\\\"form-heading ng-star-inserted ml-0 mt-0\\\"><span>Requirement Process Information:</span></h3></div>\\r\\n\\r\\n            <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n              <label>Permitting Cost:</label>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Please enter Permitting Cost\\\" formControlName=\\\"permittingCost\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n              <label>How to call for Inspection:</label>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"callforInspection\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n              <label>Approval Duration (days):</label>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"approvalDuration\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n              <label>How to submit for PTO:</label>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"submitforPTO\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n              <label>Duration to get Meter installed:</label>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"meterInstalled\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n              <label>How Approval will be Received:</label>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"approvalReceived\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n              <label>Notes:</label>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <textarea type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"Notes\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row mb-2\\\">\\r\\n            <div class=\\\"col-12 col-md-12 col-lg-12\\\"><h3 class=\\\"form-heading ng-star-inserted ml-0 mt-0\\\"><span>System Information:</span></h3></div>\\r\\n\\r\\n            <div class=\\\"col-md-12 col-lg-6\\\">\\r\\n              <label>External ID:</label>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <textarea type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"externalID\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n              <label>Owner:</label>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"Owner\\\" disabled>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success form-btns\\\" (click)=\\\"Save()\\\"><i class=\\\"fa fa-save text-white\\\"></i> Save</button>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-danger form-btns\\\" (click)=\\\"close()\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><i class=\\\"fa fa-times text-white\\\"></i> Cancel</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader-popup\\\"></app-loader>\\r\\n\\r\\n\"","export default \"<div class=\\\"header float-left w-100 mb-2\\\">\\r\\n  <h2 class=\\\"float-left pr-2\\\"><strong>Requirements</strong></h2>\\r\\n  <div class=\\\"breadcrumb-wrapper\\\">\\r\\n    <ol class=\\\"breadcrumb\\\">\\r\\n      <li>\\r\\n        <a routerLink=\\\"/dashboard\\\">Dashboard</a>\\r\\n      </li>\\r\\n      <li class=\\\"active\\\">Requirements</li>\\r\\n    </ol>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"clearfix\\\"></div>\\r\\n\\r\\n<div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-12 portlets\\\">\\r\\n      <div class=\\\"panel\\\">\\r\\n        <div class=\\\"panel-header border-bottom pb-3 btn-iconres\\\">\\r\\n          <div class=\\\"row mt-2\\\">\\r\\n            <div class=\\\"col-md-12 col-xl-8\\\">\\r\\n              <div class=\\\"row searchfield\\\">\\r\\n                <div class=\\\"col-lg-3 float-left mb-lg-0 mb-2\\\">\\r\\n                  <input class=\\\"form-control input-sm\\\" type=\\\"text\\\" [(ngModel)]='listFilter' placeholder=\\\"Search By Name\\\" (keyup)='updateFilter($event)'>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-6 float-left pl-3 pl-lg-0\\\">\\r\\n                  <a class=\\\"btn btn-success form-btns mr-1\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"search()\\\" tooltip=\\\"Search\\\"><span><i class=\\\"fa fa-search\\\"></i></span></a>\\r\\n                  <a class=\\\"btn btn-danger form-btns mr-1\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"reset()\\\" tooltip=\\\"Reset\\\"><span><i class=\\\"fa fa-refresh\\\"></i></span></a>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12 col-xl-4\\\">\\r\\n              <div class=\\\"dt-buttons\\\">\\r\\n                <a *ngIf='isAdd' class=\\\"btn btn-success mr-1\\\" (click)=\\\"showAddRequirementModel()\\\" href=\\\"javascript:void(0);\\\" tooltip=\\\"Add Requirement\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\r\\n                <a *ngIf='isDelete' class=\\\"btn btn-danger form-btns\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"deleteAll()\\\" tooltip=\\\"Delete\\\"><span><i class=\\\"fa fa-trash\\\"></i></span></a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"panel-content px-3 pagination2 table-responsive no-padding\\\">\\r\\n          <ngx-datatable #table class=\\\"bootstrap table table-hover table-dynamic\\\"\\r\\n                         [rows]=\\\"requirementListingData.data\\\"\\r\\n                         [columnMode]=\\\"'force'\\\"\\r\\n                         [headerHeight]=\\\"40\\\"\\r\\n                         [footerHeight]=\\\"40\\\"\\r\\n                         [scrollbarH]=\\\"true\\\"\\r\\n                         [rowHeight]=\\\"'40'\\\"\\r\\n                         [externalPaging]=\\\"true\\\"\\r\\n                         [externalSorting]=\\\"true\\\"\\r\\n                         [loadingIndicator]=\\\"loadSave\\\"\\r\\n                         [count]=\\\"requirementListingData.pager.totalItems\\\"\\r\\n                         [offset]=\\\"requirementListingData.pager.curPage\\\"\\r\\n                         [limit]=\\\"requirementListingData.pager.pageSize\\\"\\r\\n                         (page)='setPage($event)'\\r\\n                         (sort)=\\\"onSort($event)\\\"\\r\\n                         [selectionType]=\\\"SelectionType.checkbox\\\"\\r\\n                         [selectAllRowsOnPage]=\\\"false\\\"\\r\\n                         [selected]=\\\"selected\\\"\\r\\n                         (select)=\\\"onSelect($event)\\\">\\r\\n            <ngx-datatable-column [width]=\\\"42\\\"\\r\\n                                  [sortable]=\\\"false\\\"\\r\\n                                  [canAutoResize]=\\\"false\\\"\\r\\n                                  [draggable]=\\\"false\\\"\\r\\n                                  [resizeable]=\\\"false\\\"\\r\\n                                  [headerCheckboxable]=\\\"true\\\"\\r\\n                                  [checkboxable]=\\\"true\\\">\\r\\n            </ngx-datatable-column>\\r\\n\\r\\n\\r\\n            <ngx-datatable-column name=\\\"Requirement Name\\\" prop=\\\"Name\\\" [sortable]=\\\"true\\\"></ngx-datatable-column>\\r\\n            <ngx-datatable-column name=\\\"Pertains To\\\" prop=\\\"pertainName\\\" [sortable]=\\\"true\\\"></ngx-datatable-column>\\r\\n            <ngx-datatable-column name=\\\"Record Type\\\" prop=\\\"RecordTypeName__c\\\" [sortable]=\\\"true\\\"></ngx-datatable-column>\\r\\n            <ngx-datatable-column name=\\\"Type\\\" prop=\\\"typeName\\\" [sortable]=\\\"true\\\"></ngx-datatable-column>\\r\\n            <ngx-datatable-column name=\\\"Service Territory\\\" prop=\\\"serviceTerritoryName\\\" [sortable]=\\\"true\\\"></ngx-datatable-column>\\r\\n            <ngx-datatable-column name=\\\"Status\\\" [sortable]=\\\"true\\\" prop=\\\"isActive\\\" [maxWidth]=\\\"100\\\" headerClass=\\\"text-center\\\">\\r\\n              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                <div>\\r\\n                  <span class=\\\"status-box bg-success\\\" *ngIf=\\\"row.isActive == 1\\\">Active</span>\\r\\n                  <span class=\\\"status-box bg-danger\\\" *ngIf=\\\"row.isActive == 0\\\">InActive</span>\\r\\n                </div>\\r\\n              </ng-template>\\r\\n            </ngx-datatable-column>\\r\\n\\r\\n            <ngx-datatable-column name=\\\"Action\\\" [sortable]=\\\"false\\\" [maxWidth]=\\\"100\\\" headerClass=\\\"text-center\\\">\\r\\n              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                <div class=\\\"text-center\\\">\\r\\n                  <a *ngIf='isUpdate' (click)=\\\"editRequirement(row)\\\" title=\\\"Edit\\\"><i class=\\\"fa fa-pencil text-success pr-2\\\"></i></a>\\r\\n                  <a *ngIf='isDelete' title=\\\"Click to delete.\\\" (click)=\\\"DeleteRequirement(row)\\\" href=\\\"javascript:void(0);\\\"><i class=\\\"fa fa-trash text-danger\\\"></i></a>\\r\\n                </div>\\r\\n              </ng-template>\\r\\n            </ngx-datatable-column>\\r\\n            <ngx-datatable-footer>\\r\\n              <ng-template ngx-datatable-footer-template\\r\\n                           let-rowCount=\\\"rowCount\\\"\\r\\n                           let-pageSize=\\\"pageSize\\\"\\r\\n                           let-selectedCount=\\\"selectedCount\\\"\\r\\n                           let-curPage=\\\"curPage\\\"\\r\\n                           let-offset=\\\"offset\\\"\\r\\n                           let-isVisible=\\\"isVisible\\\">\\r\\n                <div>\\r\\n                  <div style=\\\"color:black; margin-right:10px;\\\" class=\\\"page-size-record\\\" *ngIf='(rowCount  > 0)'>\\r\\n                    <span style=\\\"text-align:right; width:80px;vertical-align: middle;\\\">\\r\\n                      <ng-select [searchable]=\\\"false\\\" [items]=\\\"lstPageSize\\\" appendTo=\\\"body\\\" [(ngModel)]='pageSizeValue' dropzone=\\\"fixed\\\" [clearable]=\\\"false\\\" (change)=\\\"onChange($event)\\\" draggable=\\\"false\\\" [closeOnSelect]=\\\"true\\\"\\r\\n                                 bindLabel=\\\"text\\\" bindValue=\\\"text\\\"></ng-select>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"page-count\\\" *ngIf='(rowCount  > 0)'>\\r\\n                  {{commonService.PageString(requirementListingData.pager.currentPage,requirementListingData.pager.pageSize,rowCount)}}\\r\\n                </div>\\r\\n                <datatable-pager [pagerLeftArrowIcon]=\\\"'fa fa-angle-left'\\\"\\r\\n                                 [pagerRightArrowIcon]=\\\"'fa fa-angle-right'\\\"\\r\\n                                 [pagerPreviousIcon]=\\\"'fa fa-angle-double-left'\\\"\\r\\n                                 [pagerNextIcon]=\\\"'fa fa-angle-double-right'\\\"\\r\\n                                 [page]=\\\"requirementListingData.pager.currentPage\\\"\\r\\n                                 [size]=\\\"pageSizeValue\\\"\\r\\n                                 [count]=\\\"requirementListingData.pager.totalItems\\\"\\r\\n                                 [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\r\\n                                 (change)=\\\"setPage($event)\\\">\\r\\n                </datatable-pager>\\r\\n\\r\\n\\r\\n              </ng-template>\\r\\n            </ngx-datatable-footer>\\r\\n          </ngx-datatable>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n<!--=========================================  newRequirementPopup ===============================================-->\\r\\n\\r\\n<div class=\\\"modal fade in show\\\" bsModal #newRequirementPopup=\\\"bs-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" style=\\\"display: none; padding-right: 10px;\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg modal-info \\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">{{title}}</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"Closemodel()\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\" style=\\\"height:100%;\\\">\\r\\n\\r\\n        <div class=\\\"login-container\\\">\\r\\n          <div class=\\\"login-main\\\">\\r\\n            <div class=\\\"login-box req_bx\\\">\\r\\n\\r\\n              <form [formGroup]=\\\"newRequirementForm\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"row mb-2\\\">\\r\\n                  <div class=\\\"col-md-1\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-11\\\">\\r\\n                    <label>Select a record type:</label>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-3\\\">\\r\\n\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-9\\\">\\r\\n                    <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                      <input id=\\\"isTrackable\\\" formControlName=\\\"isCheckBox\\\" value=\\\"0\\\" type=\\\"radio\\\">\\r\\n                      <label for=\\\"isTrackable\\\" class=\\\"radio-label\\\">Trackable   <p>For requirments that use status or date tracking </p></label>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"ustom-control custom-radio custom-control-inline\\\">\\r\\n                      <input id=\\\"isInformational\\\" formControlName=\\\"isCheckBox\\\" value=\\\"1\\\" type=\\\"radio\\\">\\r\\n                      <label for=\\\"isInformational\\\" class=\\\"radio-label\\\">Informational <p>For requiments that do not require status or date tracking</p></label>\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <a class=\\\"btn btn-success text-white mr-2\\\" (click)=\\\"openAddNewRequirementPopup()\\\"><i class=\\\"fa fa-save\\\"></i> Next</a>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-danger form-btns\\\" (click)=\\\"Closemodel()\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><i class=\\\"fa fa-times text-white\\\"></i> Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--===============================================================================================================-->\\r\\n\\r\\n<!--================================================== Add Edit  RequirementPopup =======================================-->\\r\\n<app-addeditrequirements #addEditRequirementPopup (callGetRequirementListingData)=\\\"callRequirementListingData()\\\"></app-addeditrequirements>\\r\\n\\r\\n<!--======================================================================================================================-->\\r\\n\\r\\n\\r\\n<app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader-popup\\\"></app-loader>\\r\\n\"","import { Component, OnInit, ViewChild, ElementRef, Output, EventEmitter} from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { strategy } from '@angular-devkit/core/src/experimental/jobs';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { RequirementModel, RequirementsService } from '../requirements.service';\r\nimport { CommonService } from '../../shared/common.service';\r\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-addeditrequirements',\n  templateUrl: './addeditrequirements.component.html'\n})\nexport class AddeditrequirementsComponent implements OnInit {\n  @ViewChild('addEditRequirementPopup', { static: false }) modalAddEditRequirementPopup: ModalDirective;\n\n  @Output() callGetRequirementListingData = new EventEmitter<string>();\n\n  requirementModel: RequirementModel = new RequirementModel();\n  title: string;\n  lstPertainsTo: any;\n  lstType: any;\n  lstServiceTerritory: any;\n  lstRequiredBy: any;\n  loadSave = false;\n  addForm: FormGroup;\n\n  constructor(private fb: FormBuilder,\n    private requirementsService: RequirementsService,\n    private commonService: CommonService,\n    private el: ElementRef,\n    private toaster: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.initForm();\n    this.GetlstPertainsTo();\n    this.GetlstType();\n    this.GetlstServiceTerritory();\n    this.GetlstRequiredBy();\n  }\n\n\n  show(row, recordType, id) {\n    this.GetlstServiceTerritory();\n    debugger;\n    console.log(\"row\", row);\n    console.log(\"add\", this.addForm);\n    if (id == null) {\n      this.addForm.reset();\n      this.title = 'New Requirement'\n      this.addForm.controls.recordType.setValue(recordType);\n      this.modalAddEditRequirementPopup.show();\n    }\n    else {\n      if (id != null) {\r\n     \r\n        this.title =\"Edit Requirement \"\r\n        this.addForm.patchValue({\r\n          id: row.Id,\r\n          Owner: row.CreatedBy,\r\n          description: row.Description,\r\n          isActive: row.isActive,\r\n          Notes: row.Notes,\r\n          requirementName: row.Name,\r\n          meterInstalled: row.MeterInstalled,\r\n          permittingCost: row.permittingCost,\r\n          submitforPTO: row.SubmitforPTO,\r\n          callforInspection: row.callforInspection,\r\n          approvalDuration: row.approvalDuration,\r\n          requiredby: row.Required_by__c,\r\n          recordType: row.RecordTypeName__c,\r\n          externalID: row.ExternalID,\r\n          approvalReceived: row.ApprovalReceived,\r\n          type: row.Type__c,\r\n          pertainsTo: row.PertainsTo != null ? row.PertainsTo.toString() : null ,\r\n          serviceTerritory: row.serviceTerritoryId != null ? row.serviceTerritoryId.toString():null,\r\n        })\r\n        \r\n        this.modalAddEditRequirementPopup.show();\r\n      }\r\n    }\n    console.log(\"this.addForm\", this.addForm);\n  }\n\n  close() {\n    this.modalAddEditRequirementPopup.hide();\r\n  }\n  Save() {\n    debugger;\n    if (this.addForm.valid) {\r\n        this.loadSave = true;\r\n      this.requirementModel.Id = this.addForm.value.id;\r\n      this.requirementModel.requirementName = this.addForm.value.requirementName;\r\n      this.requirementModel.pertainsTo = this.addForm.value.pertainsTo;\r\n      this.requirementModel.recordType = this.addForm.value.recordType;\r\n      this.requirementModel.requiredby = this.addForm.value.requiredby;\r\n      this.requirementModel.type = this.addForm.value.type;\r\n      this.requirementModel.serviceTerritory = this.addForm.value.serviceTerritory;\r\n      this.requirementModel.isActive = this.addForm.value.isActive;\r\n      this.requirementModel.description = this.addForm.value.description;\r\n      this.requirementModel.permittingCost = this.addForm.value.permittingCost;\r\n      this.requirementModel.callforInspection = this.addForm.value.callforInspection;\r\n      this.requirementModel.approvalDuration = this.addForm.value.approvalDuration;\r\n      this.requirementModel.submitforPTO = this.addForm.value.submitforPTO;\r\n      this.requirementModel.meterInstalled = this.addForm.value.meterInstalled;\r\n      this.requirementModel.approvalReceived = this.addForm.value.approvalReceived;\r\n      this.requirementModel.Notes = this.addForm.value.Notes;\r\n      this.requirementModel.externalID = this.addForm.value.externalID;\r\n      this.requirementModel.Owner = this.addForm.value.Owner;\r\n      this.requirementsService.addeditRequirement(this.requirementModel).subscribe((result: any) => {\r\n        debugger;\r\n        if (result.statusCode == 200) {\r\n          this.callGetRequirementListingData.emit();\r\n            this.modalAddEditRequirementPopup.hide();\r\n            this.loadSave = false;\r\n            this.toaster.success(result.responseMessage);\r\n\r\n          }\r\n          else {\r\n            this.loadSave = false;\r\n            this.toaster.error(result.responseMessage);\r\n          }\r\n        })\r\n    }\r\n    else {\r\n      for (const key of Object.keys(this.addForm.controls)) {\r\n        if (this.addForm.controls[key].invalid) {\r\n          const invalidControl = this.el.nativeElement.querySelector('[formcontrolname=\"' + key + '\"]');\r\n          console.log(\"sddasd\", invalidControl);\r\n          invalidControl.focus();\r\n          break;\r\n        }\r\n      }\r\n\r\n      this.commonService.validateAllFormFields(this.addForm);\r\n    }\r\n  }\n\n  private initForm() {\n    this.addForm = this.fb.group({\n      id: [null],\n      requirementName: ['', Validators.required],\n      pertainsTo: [null, Validators.nullValidator],\n      requiredby: [null, Validators.nullValidator],\n      type: [null, Validators.nullValidator],\n      serviceTerritory: [null, Validators.nullValidator],\n      isActive: [null, Validators.nullValidator],\n      description: [null, Validators.nullValidator],\n      permittingCost: [null, Validators.nullValidator],\n      callforInspection: [null, Validators.nullValidator],\n      approvalDuration: [null, Validators.nullValidator],\n      submitforPTO: [null, Validators.nullValidator],\n      meterInstalled: [null, Validators.nullValidator],\n      approvalReceived: [null, Validators.nullValidator],\n      Notes: [null, Validators.nullValidator],\n      externalID: [null, Validators.nullValidator],\n      Owner: [null, Validators.nullValidator],\n      recordType: [null, Validators.nullValidator],\n    })\n  }\n\n\n  get requirementName() { return this.addForm.get('requirementName'); }\n  get pertainsTo() { return this.addForm.get('pertainsTo'); }\n  get requiredby() { return this.addForm.get('requiredby'); }\n  get type() { return this.addForm.get('type'); }\n  get serviceTerritory() { return this.addForm.get('serviceTerritory'); }\n  get isActive() { return this.addForm.get('isActive'); }\n  get description() { return this.addForm.get('description'); }\n  get permittingCost() { return this.addForm.get('permittingCost'); }\n  get callforInspection() { return this.addForm.get('callforInspection'); }\n  get approvalDuration() { return this.addForm.get('approvalDuration'); }\n  get submitforPTO() { return this.addForm.get('submitforPTO'); }\n  get meterInstalled() { return this.addForm.get('meterInstalled'); }\n  get approvalReceived() { return this.addForm.get('approvalReceived'); }\n  get Notes() { return this.addForm.get('Notes'); }\n  get externalID() { return this.addForm.get('externalID'); }\n  get Owner() { return this.addForm.get('Owner'); }\n  get recordType() { return this.addForm.get('recordType'); }\n\n  GetlstPertainsTo() {\r\n    this.commonService.getMasterItemsList(\"PertainsTo\").subscribe((result: any) => {\r\n      this.lstPertainsTo = this.commonService.masters;\r\n    })\r\n  }\n\n  GetlstType() {\r\n    this.commonService.getMasterItemsList(\"Type\").subscribe((result: any) => {\r\n      this.lstType = this.commonService.masters;\r\n    })\r\n  }\n\n  GetlstRequiredBy() {\r\n    this.commonService.getMasterItemsList(\"Account\").subscribe((result: any) => {\r\n      this.lstRequiredBy = this.commonService.masters;\r\n    })\r\n  }\n\n  GetlstServiceTerritory() {\r\n    this.commonService.getMasterItemsList(\"ServiceTerritory\").subscribe((result: any) => {\r\n      this.lstServiceTerritory = this.commonService.masters;\r\n    })\r\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RequirementslistComponent } from './requirementslist.component';\r\n\nconst routes: Routes = [\n  { path: '', component: RequirementslistComponent }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class RequirementsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RequirementslistComponent } from './requirementslist.component';\r\nimport { RequirementsService } from './requirements.service';\r\nimport { RequirementsRoutingModule } from './requirements-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AddeditrequirementsComponent } from './addeditrequirements/addeditrequirements.component';\n\n@NgModule({\n  declarations: [RequirementslistComponent, AddeditrequirementsComponent],\n  imports: [\n    CommonModule,\n    RequirementsRoutingModule,\n    SharedModule, ModalModule\n  ],\n  providers: [RequirementsService],\n  bootstrap:[]\n})\nexport class RequirementsModule { }\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class RequirementsService {\n  public baseUri = `${environment.WebApiBaseUrl}`;\n  constructor(private http: HttpClient) { }\n\n\n  addeditRequirement(RequirementModel: RequirementModel) {\n    debugger;\n    return this.http.post(this.baseUri + `workorder/AddeditRequirement`, RequirementModel);//AddeditRequirement\n  }\n\n  GetRequirementListingData(name: string, sortColumn: string, sortDir, page: number, pageSize: number): Observable<any> {\n    if (typeof name == \"undefined\" || name == null) { name = null; }\n    else { name = encodeURIComponent((name)); }\n\n    return this.http.get(`${this.baseUri}workorder/GetRequirementListingData?name=${name}&sortColumn=${sortColumn}&sortDir=${sortDir}&page=${page}&pageSize=${pageSize}`)\n  }\n\n}\nexport class RequirementModel {\n  Id: string;\n  requirementName: string;\n  pertainsTo: string;\n  recordType: string;\n  requiredby: string;\n  type: string;\n  serviceTerritory: string;\n  isActive: string;\n  description: string;\n  permittingCost: string;\n  callforInspection: string;\n  approvalDuration: string;\n  submitforPTO: string;\n  meterInstalled: string;\n  approvalReceived: string;\n  Notes: string;\n  externalID: string;\n  Owner: string;\n  constructor() {\n    this.Id = \"\";\n    this.requirementName = \"\";\n    this.pertainsTo = \"\";\n    this.recordType = \"\";\n    this.requiredby = \"\";\n    this.type = \"\";\n    this.serviceTerritory = \"\";\n    this.isActive = \"\";\n    this.description = \"\";\n    this.permittingCost = \"\";\n    this.callforInspection = \"\";\n    this.approvalDuration = \"\";\n    this.submitforPTO = \"\";\n    this.meterInstalled = \"\";\n    this.approvalReceived = \"\";\n    this.Notes = \"\";\n    this.externalID = \"\";\n    this.Owner = \"\";\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3JlcXVpcmVtZW50c2xpc3QvcmVxdWlyZW1lbnRzbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { SelectionType, NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { AddeditrequirementsComponent } from './addeditrequirements/addeditrequirements.component';\r\nimport { RequirementsService } from './requirements.service';\r\nimport { CommonService } from '../shared/common.service';\r\nimport { ConfirmationDialogService } from '../shared/confirmation-dialog/confirmation-dialog.service';\r\nimport { WorkorderService } from '../workorder/workorderservice.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\n@Component({\n  selector: 'app-requirementslist',\n  templateUrl: './requirementslist.component.html',\n  styleUrls: ['./requirementslist.component.scss']\n})\nexport class RequirementslistComponent implements OnInit {\n  deleteId: any;\n  @ViewChild('newRequirementPopup', { static: false }) newRequirementModelPopup: ModalDirective;\n  @ViewChild('addEditRequirementPopup', { static: false }) addEditRequirementPopup: AddeditrequirementsComponent;\n  listFilter = '';\n  curPage: number;\n  isAdd: boolean = true;\n  isUpdate: boolean = true;\n  isDelete: boolean = true;\n  isEdit = true;\n  loadSave: boolean = false;\n  requirementListingData: any = {\n    pager: {},\n    data: []\n  };\n  tableName = 'tblAccountsRequirement_backup';\n  @Input() offset: number;\n  loading = false;\n  sortDir = 'desc';\n  sortColumn = 'Id';\n  title: any;\n  selected = [];\n  SelectionType = SelectionType;\n  pageSizeValue: number;\n  lstPageSize: any\n  newRequirementForm: FormGroup;  \n  Id: any;\n  recordType: string;\n\n  constructor(private fb: FormBuilder,\n    private requirementsService: RequirementsService,\n    private commonService: CommonService,\n    private dialogService: ConfirmationDialogService,\n    private workorderService: WorkorderService,\n    private toaster: ToastrService  ) { }\n\n  ngOnInit() {\n    this.listFilter = '';\n    this.curPage= 1;\n    this.pageSizeValue = 10;\n    this.getListingGridData();\n    this.initNewRequirementForm();\n    this.getPageSizes();\n  }\n\n\n  updateFilter(event) {\n    this.listFilter = event.target.value;\n    this.curPage = 1;\n    let keycode = (event.keyCode ? event.keyCode : event.which);\n    if (keycode === 13 || keycode === '13') {\n      this.getListingGridData();\n    }\n  }\n  getListingGridData() {\n    this.selected = [];\n    this.deleteId = null;\n    this.offset = 1;\r\n    this.loadSave = true;\r\n    this.requirementsService.GetRequirementListingData(this.listFilter, this.sortColumn, this.sortDir, this.curPage, this.pageSizeValue).subscribe(result => {\r\n      this.requirementListingData = result;\r\n      this.offset = 1;    \r\n      this.loadSave = false;\r\n    }, error => {\r\n      this.loadSave = false;\r\n    })\r\n  }\n  search() {\r\n    this.getListingGridData();\r\n  }\n\n  reset() {\r\n    this.listFilter = '';\r\n    this.curPage = 1;\r\n    this.sortDir = 'desc';\r\n    this.sortColumn = 'Id';\r\n    this.getListingGridData();\r\n  }\n\n\r\n  private initNewRequirementForm() {\n    this.newRequirementForm = this.fb.group({\n      isCheckBox: [''],\n    });\n  };\n\n\n  get isCheckBox() { return this.newRequirementForm.get('isCheckBox'); }\n\n\n  showAddRequirementModel() {\r\n    debugger;\r\n    this.title = \"New Requirement\";\r\n    this.newRequirementForm.reset({ isCheckBox: \"0\" });\r\n    this.newRequirementModelPopup.show();\r\n  }\n\n  openAddNewRequirementPopup() {\n    debugger;\n    this.newRequirementModelPopup.hide();\n    if (this.isCheckBox.value==0) {\r\n      this.recordType = 'Trackable';\r\n    }\n    else {\r\n      this.recordType = 'Informational';\r\n    }\n    this.addEditRequirementPopup.show('', this.recordType,this.Id, );\r\n  }\n\n  Closemodel() {\n    this.newRequirementModelPopup.hide();\r\n  }\n\n\n\n  setPage($event) {\r\n    debugger;\r\n    this.loading = true;\r\n    var ab = $event.page;\r\n    this.curPage = ab;\r\n    this.getListingGridData();\r\n  }\n\n  onSort($event) {\r\n    const sort = $event.sorts[0]\r\n    this.sortDir = sort.dir;\r\n    this.sortColumn = sort.prop;\r\n    this.getListingGridData();\r\n  }\n\n  editRequirement(row: any) {\n    console.log(\"row\", row);\n    this.title = \"Edit Skill\";\n    this.isEdit = true;\n    this.addEditRequirementPopup.show(row, this.recordType, row.Id);\n  }\n  onSelect({ selected }) {\n    debugger;\n    if (this.deleteId == \"\" || this.deleteId == null || this.deleteId == 'undefined') {\n      this.selected.splice(0, this.selected.length);\n      this.selected.push(...selected);\n      this.deleteId = null;\n      this.deleteId = \"\";\n      for (let i = 0; i < selected.length; i++) {\n        this.deleteId += selected[i].Id.toString() + \",\";\n      }\n    }\n    else {\n      this.deleteId = null;\n      this.deleteId = \"\";\n      for (let i = 0; i < selected.length; i++) {\n        this.deleteId += selected[i].Id.toString() + \",\";\n      }\n    }\n  }\n\n  onChange($event) {\n    this.curPage = 1;\n    this.getListingGridData();\n  }\n\n  DeleteRequirement(row: any) {\n    debugger;\n    const message = `Are you sure you want to delete Requirement  \"${row.Name}\"?`;\n    this.dialogService.confirm('Delete Requirement', message).subscribe(confirmed => {\n      if (confirmed) {\n        debugger;\n        this.workorderService.DeleteRecords(row.Id, this.tableName).subscribe(r => {\n          this.toaster.success(`Requirement \"${row.Name}\" has been deleted successfully`);\n          this.getListingGridData(); \n        }, error => {\n        });\n      }\n    });\r\n  }\n\n  deleteAll() {\n    debugger;\n    console.log(\"this.deleteId\", this.deleteId);\n    if (this.deleteId != null && this.deleteId != \"\") {\n      const message = `Are you sure you want to delete Requirement(s)\"`;\n      this.dialogService.confirm('Delete Requirement(s)', message).subscribe(confirmed => {\n        if (confirmed) {\n          this.workorderService.DeleteRecords(this.deleteId, this.tableName).subscribe(r => {\n            this.toaster.success(`Record(s) has been deleted successfully`);\n            this.deleteId = \"\";\n            this.selected = [];\n            this.getListingGridData();\n          }, error => {\n          });\n        }\n      });\n    }\n    else {\n      this.toaster.error(\"Please select at least one row.\");\n    }\n  }\n\n  getPageSizes() {\n    this.commonService.getMasterItemsList(\"PageSize\").subscribe((res: any) => {\n      this.lstPageSize = this.commonService.masters;\n    })\n  }\n  callRequirementListingData() {\n    debugger;\n    this.loadSave = true;\n    this.getListingGridData();\r\n    this.loadSave = false;\r\n  }\n}\n"],"sourceRoot":"webpack:///"}