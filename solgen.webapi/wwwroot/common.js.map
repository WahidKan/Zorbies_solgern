{"version":3,"sources":["./src/app/views/campaign/campaign.service.ts","./src/app/views/location/locationlist.service.ts","./src/app/views/product/productlist.service.ts","./src/app/views/queue/queueservice.service.ts","./src/app/views/solgencontactlist/customcontactlist.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CampaignService {\n  public baseUri = `${environment.WebApiBaseUrl}`;\r\n  customFieldsList: any;\n  leadEditPage: any;\r\n  pagedData: any;\n  constructor(private http: HttpClient) { }\n\n\n  GetCampaignlist(name: string, userType: string, sortColumn: string, sortDir, page: number, pageSize: number, loginuserid: string, custom_view_id: string, searchFilter: string, moduleName: string, submoduleName: string, companyId: number): Observable<any> {\r\n    if (typeof name == \"undefined\" || name == null) { name = null; }\r\n    else { name = encodeURIComponent((name)); }\r\n\r\n    return this.http.get(`${this.baseUri}Campaign/GetCampaignList?nameSearch=${name}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${page}&pageSize=${pageSize}&custom_view_id=${custom_view_id}&moduleName=${moduleName}&submoduleName=${submoduleName}`)\r\n  }\n\n  GetCustomFieldsList(modulename: any, submoduleName: any, companyId: any, Id: any, displayType:any) {\n    return this.http.get(`${this.baseUri}vendor/GetCustomFields?moduleName=${modulename}&strType=${submoduleName}&companyId=${companyId}&PrimaryId=${Id}&displayCode=${displayType}`)\n      .pipe(\n        map((response: any) => {\n          this.customFieldsList = response;\n          return true;\n        })\n      );\n  }\n\n  DeleteRecords(deleteId: any, tableName: any, ) {\r\n    return this.http.get(this.baseUri + `common/DeleteRecords?primaryKey=${deleteId}&tableName=${tableName}`)\r\n      .pipe(\r\n        map((response: any) => {\r\n          this.leadEditPage = response;\r\n          return true;\r\n        })\r\n      );\r\n  }\n  getViewList(name: string, userType: string, sortColumn: string, sortDir, page: number, pageSize: number, ModuleName: any, SubModuleName: any, companyId: number) {\n\n    return this.http.get(this.baseUri + `Common/GetCustomViewName?nameSearch=${name}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${page}&pageSize=${pageSize}&ModuleName=${ModuleName}&SubModuleName=${SubModuleName}&companyId=${companyId}`)\n      .pipe(\n        map((response: any) => {\n          this.pagedData = response;\n          return true;\n        })\n      );\n  }\n  addOrUpdateCampaign(campaignJsonData: campaignJsonData) {\r\n    return this.http.post(this.baseUri + `Campaign/AddOrUpdateCampaign`, campaignJsonData);\r\n  }\n\n  GetCampaignMembersList(campaignId, sortColumn, sortDir, pageIndex, pageSize): Observable<any> {\n    return this.http.get(this.baseUri + `Campaign/GetCampaignMembersList?campaignId=${campaignId}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${pageIndex}&pageSize=${pageSize}`);\r\n  }\n\n  GetCampaignProposalsList(campaignId, sortColumn, sortDir, pageIndex, pageSize): Observable<any> {\n    return this.http.get(this.baseUri + `Campaign/GetCampaignProposalsList?campaignId=${campaignId}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${pageIndex}&pageSize=${pageSize}`);\r\n  }\n\n  GetCampaignLeadsList(campaignId, sortColumn, sortDir, pageIndex, pageSize): Observable<any> {\n    return this.http.get(this.baseUri + `Campaign/GetCampaignLeadsList?campaignId=${campaignId}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${pageIndex}&pageSize=${pageSize}`);\r\n  }\n\n\n}\n\nexport class campaignJsonData {\n  campaignId: string;\n  FormJsonData: string;\n  moduleCode: string;\n  subModuleCode: string;\n  companyId: string;\n  userId: string;\n  constructor() {\n    this.campaignId = \"\";\n    this.FormJsonData = \"\";\n    this.moduleCode = \"\";\n    this.subModuleCode = \"\";\n    this.companyId = \"\";\n    this.userId = \"\";\n  }\n}\n\n\nexport class CheckboxData {\n  controlname: string;\n  controlvalues: string;\n  constructor() {\n    this.controlname = \"\";\n    this.controlvalues = \"\";\r\n  }\n}\n\nexport class lstRelatedModel {\n  title: string;\n  data: any[];\n  constructor() {\n    this.title = \"\";\n    this.data = [];\r\n  }\n}\n\nexport class CampaignTopViewModel {\n  ColumnName: string;\n  DisplayName: string;\n  DisplayOrder: number;\n  Value: string;\n  ref_value: string;\n  field_route: string;\n  constructor() {\n    this.ColumnName = \"\";\n    this.DisplayName = \"\";\r\n    this.Value = \"\";\r\n    this.DisplayOrder = 1;\r\n    this.ref_value= \"\";\r\n    this.field_route = \"\";\r\n\r\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService {\n\n  public baseUri = `${environment.WebApiBaseUrl}`;\n  pagedData: any;\n  editPage: any;\n  customFieldsList: any;\n  constructor(private http: HttpClient) { }\n\n  GetLocationList(nameSearch: string, sortColumn: string, page: number, pageSize: number, sortDir: string, loginuserid: string, moduleName: string, submoduleName: string, companyId: number, custom_view_id: string, searchFilter: string): Observable<any> {\n    if (typeof nameSearch == \"undefined\" || nameSearch == null) { nameSearch = null; }\n    else { nameSearch = encodeURIComponent((nameSearch)); }\n    return this.http.get(`${this.baseUri}location/GetLocationList?nameSearch=${nameSearch}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${page}&pageSize=${pageSize}&userId=${loginuserid}&moduleName=${moduleName}&submoduleName=${submoduleName}&companyId=${companyId}&custom_view_id=${custom_view_id}&searchFilter=${searchFilter}`)\n      .pipe(\n        map((response: any) => {\n          this.pagedData = response;\n          return true;\n        })\n      );\n  }\n  GetCustomFieldsList(modulename: any, submoduleName: any, companyId: any, Id: any,  displayType: any) {\n    return this.http.get(`${this.baseUri}vendor/GetCustomFields?moduleName=${modulename}&strType=${submoduleName}&companyId=${companyId}&PrimaryId=${Id}&displayCode=${displayType}`)\n      .pipe(\n        map((response: any) => {\n          this.customFieldsList = response;\n          return true;\n        })\n      );\n  }\n  GetLocationDetails(id: any, moduleName: any, submoduleName: any, companyId: number, userId: string) {\n    return this.http.get(this.baseUri + `location/GetLocationById?id=${id}&moduleName=${moduleName}&submoduleName=${submoduleName}`)\n      .pipe(\n        map((response: any) => {\n          this.editPage = response;\n          return true;\n        })\n      );\n  }\n  addEditForm(JsonData: JsonData) {\n    return this.http.post(this.baseUri + `location/AddEditLocation`, JsonData);\n  }\n  DeleteRecords(deleteId: any, tableName: any, ) {\n    return this.http.get(this.baseUri + `common/DeleteRecords?primaryKey=${deleteId}&tableName=${tableName}`)\n      .pipe(\n        map((response: any) => {\n          this.editPage = response;\n          return true;\n        })\n      );\n  }\n\n  //GetCustomFieldsList(modulename: any, submoduleName: any, companyId: any, Id: any, displayType: any) {\n  //  return this.http.get(`${this.baseUri}vendor/GetCustomFields?moduleName=${modulename}&strType=${submoduleName}&companyId=${companyId}&PrimaryId=${Id}&displayCode=${displayType}`)\n  //    .pipe(\n  //      map((response: any) => {\n  //        this.customFieldsList = response;\n  //        return true;\n  //      })\n  //    );\n  //}\n}\n  export class JsonData {\n  Id: string;\n  FormJsonData: string;\n  moduleCode: string;\n  subModuleCode: string;\n  companyId: string;\n  userId: string;\n  constructor() {\n    this.Id = \"\";\n    this.FormJsonData = \"\";\n    this.moduleCode = \"\";\n    this.subModuleCode = \"\";\n    this.companyId = \"\";\n    this.userId = \"\";\n  }\n}\n\nexport class CheckboxData {\n  controlname: string;\n  controlvalues: string;\n  constructor() {\n    this.controlname = \"\";\n    this.controlvalues = \"\";\n  }\n}\nexport class CampaignTopViewModel {\n  ColumnName: string;\n  DisplayName: string;\n  DisplayOrder: number;\n  Value: string;\n  constructor() {\n    this.ColumnName = \"\";\n    this.DisplayName = \"\";\n    this.Value = \"\";\n    this.DisplayOrder = 1;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductListService {\n  public baseUri = `${environment.WebApiBaseUrl}`;\n  //prodctEditPage: any;\n  pagedData: any;\n  editPage: any;\n  customFieldsList: any;\n  constructor(private http: HttpClient) { }\n\n  GetProductList(nameSearch: string, sortColumn: string, page: number, pageSize: number, sortDir: string, loginuserid: string, moduleName: string, submoduleName: string, companyId: number, custom_view_id: string, searchFilter: string): Observable<any> {\n    if (typeof nameSearch == \"undefined\" || nameSearch == null) { nameSearch = null; }\n    else {\n      //nameSearch = \"ProductName like '%\" + nameSearch + \"%'\";\r\n      nameSearch = encodeURIComponent((nameSearch));\r\n    }\n    return this.http.get(`${this.baseUri}product/GetProductList?nameSearch=${nameSearch}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${page}&pageSize=${pageSize}&userId=${loginuserid}&moduleName=${moduleName}&submoduleName=${submoduleName}&companyId=${companyId}&custom_view_id=${custom_view_id}&searchFilter=${searchFilter}`)\n  }\n\n  GetProductDetails(id: any, moduleName: any, submoduleName: any, companyId: number, userId: string) {\n    return this.http.get(this.baseUri + `product/GetProductById?id=${id}&moduleName=${moduleName}&submoduleName=${submoduleName}`)\n      .pipe(\n        map((response: any) => {\n          //// console.log(\"responseService12\", response);\n          this.editPage = response;\n          return true;\n        })\n      );\n  }\n\n  GetCustomFieldsList(modulename: any, submoduleName: any, companyId: any, Id: any, displayType: string) {\n    return this.http.get(`${this.baseUri}vendor/GetCustomFields?moduleName=${modulename}&strType=${submoduleName}&companyId=${companyId}&PrimaryId=${Id}&displayCode=${displayType}`)\n      .pipe(\n        map((response: any) => {\n          this.customFieldsList = response;\n          return true;\n        })\n      );\n  }\n  addEditForm(JsonData: JsonData) {\n    return this.http.post(this.baseUri + `product/AddEditProduct`, JsonData);\n  }\n\n  GeProductListing() {\n    return this.http.get(`${this.baseUri}Common/GeProductListing`)\n\r\n\r\n  }\n  DeleteRecords(deleteId: any, tableName: any, ) {\r\n    return this.http.get(this.baseUri + `common/DeleteRecords?primaryKey=${deleteId}&tableName=${tableName}`)\r\n      .pipe(\r\n        map((response: any) => {\r\n          this.editPage = response;\r\n          return true;\r\n        })\r\n      );\r\n  }\n\n  GetPriceBookList(name: string, sortColumn: string, sortDir: string, page: number, pageSize: number, productid: any): Observable<any> {\n    //debugger;\n    if (typeof name == \"undefined\" || name == null) { name = null; }\n    else { name = encodeURIComponent((name)); }\n    return this.http.get(`${this.baseUri}product/GetPriceBookList?nameSearch=${name}&SortColumn=${sortColumn}&SortDir=${sortDir}&PageNo=${page}&PageSize=${pageSize}&productid=${productid}`)\n      .pipe(\n        map((response: any) => {\n          this.pagedData = response;\n          return true;\n        })\n      );\n  }\n\n  GetProductPriceBooksList(productId, sortColumn, sortDir, pageIndex, pageSize): Observable<any> {\n    return this.http.get(this.baseUri + `product/GetProductsPriceBooksList?productId=${productId}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${pageIndex}&pageSize=${pageSize}`);\r\n  }\n\n  GetProductCampaignsList(productId, sortColumn, sortDir, pageIndex, pageSize): Observable<any> {\n    return this.http.get(this.baseUri + `product/GetProductCampaignsList?productId=${productId}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${pageIndex}&pageSize=${pageSize}`);\r\n  }\n\n\n}\n  export class JsonData {\n  Id: string;\n  FormJsonData: string;\n  moduleCode: string;\n  subModuleCode: string;\n  companyId: string;\n  userId: string;\n  constructor() {\n    this.Id = \"\";\n    this.FormJsonData = \"\";\n    this.moduleCode = \"\";\n    this.subModuleCode = \"\";\n    this.companyId = \"\";\n    this.userId = \"\";\n  }\n}\n\n\nexport class CheckboxData {\n  controlname: string;\n  controlvalues: string;\n  constructor() {\n    this.controlname = \"\";\n    this.controlvalues = \"\";\r\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueueserviceService {\n  public baseUri = `${environment.WebApiBaseUrl}`;\n  pagedData: any;\n  customFieldsList: any;\n  userList: any;\n  editPage: any;\n  constructor(private http: HttpClient) { }\n\n  GetCustomFieldsList(modulename: any, submoduleName: any, companyId: any, Id: any) {\n    return this.http.get(`${this.baseUri}vendor/GetCustomFields?moduleName=${modulename}&strType=${submoduleName}&companyId=${companyId}&PrimaryId=${Id}`)\n      .pipe(\n        map((response: any) => {\n          this.customFieldsList = response;\n          return true;\n        })\n      );\n  }\n\n  GetUsersList(companyId: any, Id: any) {\n    return this.http.get(`${this.baseUri}Queue/GetUsersList?companyId=${companyId}&PrimaryId=${Id}`)\n      .pipe(\n        map((response: any) => {\n          this.userList = response;\n          return true;\n        })\n      );\n  }\n\n\n\n  addEditForm(jsonData: JsonData) {\n    return this.http.post(this.baseUri + `Queue/AddEditQueue`, jsonData);\n  }\n  DeleteRecords(deleteId: any, tableName: any,) {\r\n    return this.http.get(this.baseUri + `common/DeleteRecords?primaryKey=${deleteId}&tableName=${tableName}`)\r\n      .pipe(\r\n        map((response: any) => {\r\n          this.editPage = response;\r\n          return true;\r\n        })\r\n      );\r\n  }\n\n  GetQueueList(listFilter: string, sortColumn: string, page: number, pageSize: number, sortDir: string, loginuserid: string, moduleName: string, submoduleName: string, companyId: number, custom_view_id: string): Observable<any> {\n    if (typeof listFilter == \"undefined\" || listFilter == null) { listFilter = null; }\n    else { listFilter = encodeURIComponent((listFilter)); }\n    return this.http.get(`${this.baseUri}Queue/GetQueueList?listFilter=${listFilter}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${page}&pageSize=${pageSize}&userId=${loginuserid}&moduleName=${moduleName}&submoduleName=${submoduleName}&companyId=${companyId}&custom_view_id=${custom_view_id}`)\n  }\n\n  GetQueueUserList(listuserFilter: string, sortColumnUserList: string, sortDirUserList: string, currentPageUserList: number, pageSizeValueUserList: number, id: string): Observable<any> {\n    if (typeof listuserFilter == \"undefined\" || listuserFilter == null) { listuserFilter = null; }\n    else { listuserFilter = encodeURIComponent((listuserFilter)); }\n    return this.http.get(`${this.baseUri}Queue/GetQueueUserList?listFilter=${listuserFilter}&sortColumn=${sortColumnUserList}&sortDir=${sortDirUserList}&pageIndex=${currentPageUserList}&pageSize=${pageSizeValueUserList}&primaryKey=${id}`)\n  }\n}\nexport class CheckboxData {\n  controlname: string;\n  controlvalues: string;\n  constructor() {\n    this.controlname = \"\";\n    this.controlvalues = \"\";\n  }\n}\nexport class JsonData {\n  Id: string;\n  FormJsonData: string;\n  moduleCode: string;\n  selecteddata: any = []; \n  subModuleCode: string;\n  companyId: string;\n  userId: string;\n  constructor() {\n    this.Id = \"\";\n    this.FormJsonData = \"\";\n    this.moduleCode = \"\";\n    this.subModuleCode = \"\";\n    this.companyId = \"\";\n    this.userId = \"\";\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomContactListService {\n  public baseUri = `${environment.WebApiBaseUrl}`;\n  pagedData: any;\n  editPage: any;\n  customFieldsList: any;\n  constructor(private http: HttpClient) { }\n\n  GetSolgenContactList(listFiltertext: string, userType: string, sortColumn: string, sortDir, page: number, pageSize: number, loginuserid: string, custom_view_id: string, searchFilter: string, moduleName: string, submoduleName: string, companyId: number, isCheckboxTick: any): Observable<any> {\n    if (typeof listFiltertext == \"undefined\" || listFiltertext == null) { listFiltertext = null; }\n    else { listFiltertext = encodeURIComponent((listFiltertext)); }\n    return this.http.get(`${this.baseUri}Bank/GetSolgenContactList?listFilter=${listFiltertext}&userType=${userType}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${page}&pageSize=${pageSize}&userId=${loginuserid}&custom_view_id=${custom_view_id}&searchFilter=${searchFilter}&moduleName=${moduleName}&submoduleName=${submoduleName}&companyId=${companyId}&isAllRecords=${isCheckboxTick}`)\n  } \n\n  getViewList(name: string, userType: string, sortColumn: string, sortDir, page: number, pageSize: number, ModuleName: any, SubModuleName: any, companyId: number) {\n\n    return this.http.get(this.baseUri + `Common/GetCustomViewName?nameSearch=${name}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${page}&pageSize=${pageSize}&ModuleName=${ModuleName}&SubModuleName=${SubModuleName}&companyId=${companyId}`)\n      .pipe(\n        map((response: any) => {\n          this.pagedData = response;\n          return true;\n        })\n      );\n  }\n  GetSolgenContactDetails(id: any, moduleName: any, submoduleName: any, companyId: number, userId: string) {\n    return this.http.get(this.baseUri + `common/GetCustomContactById?id=${id}&moduleName=${moduleName}&submoduleName=${submoduleName}`)\n      .pipe(\n        map((response: any) => {\n          //// console.log(\"responseService12\", response);\n          this.editPage = response;\n          return true;\n        })\n      );\n  }\n\n  GetCustomFieldsList(modulename: any, submoduleName: any, companyId: any, Id: any, displayType:any) {\n    return this.http.get(`${this.baseUri}vendor/GetCustomFields?moduleName=${modulename}&strType=${submoduleName}&companyId=${companyId}&PrimaryId=${Id}&displayCode=${displayType}`)\n      .pipe(\n        map((response: any) => {\n          this.customFieldsList = response;\n          return true;\n        })\n      );\n  }\n\n  GetOpportunityview(opid: any, stageid:any) {\n    return this.http.get(`${this.baseUri}bank/GetOpportunityview?opid=${opid}&stageid=${stageid}`);\n      \n  }\n  getopportunitystage() {\n    return this.http.get(`${this.baseUri}bank/getopportunitystage`);\r\n  }\n  DeleteRecords(deleteId: any, tableName: any,) {\r\n    return this.http.get(this.baseUri + `common/DeleteRecords?primaryKey=${deleteId}&tableName=${tableName}`)\r\n      .pipe(\r\n        map((response: any) => {\r\n          this.editPage = response;\r\n          return true;\r\n        })\r\n      );\r\n  }\n  addEditForm(JsonData: JsonData, leadid: any, accountid: any, opportunityid:any) {\n    return this.http.post(this.baseUri + `Contact/AddEditContact?leadid=${leadid}&accountid=${accountid}&opportunityid=${opportunityid}`, JsonData);\n  }\n\n  CheckUserDuplicateORAssociate(email: any) {\n    return this.http.get(this.baseUri + `Contact/CheckUserDuplicateORAssociateContact?emailID=${email}`);\n  }\n\n  GetCampaignMembersList(contId, sortColumn, sortDir, pageIndex, pageSize): Observable<any> {\n    return this.http.get(this.baseUri + `contact/GetOpportuniryByContact?contId=${contId}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${pageIndex}&pageSize=${pageSize}`);\r\n  }\n  GetRelatedAccountForContactList(contId, sortColumn, sortDir, pageIndex, pageSize): Observable<any> {\n    return this.http.get(this.baseUri + `contact/GetRelatedAccountForContactList?contId=${contId}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${pageIndex}&pageSize=${pageSize}`);\r\n  }\n  GetCampaignProposalsList(campaignId, sortColumn, sortDir, pageIndex, pageSize): Observable<any> {\n    return this.http.get(this.baseUri + `Campaign/GetCampaignProposalsList?campaignId=${campaignId}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${pageIndex}&pageSize=${pageSize}`);\r\n  }\n\n  refreshLeadsList(contId, sortColumn, sortDir, pageIndex, pageSize): Observable<any> {\n    return this.http.get(this.baseUri + `contact/GetLeadByContactId?contId=${contId}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${pageIndex}&pageSize=${pageSize}`);\r\n  }\n  GetProposalsListByContactId(contId, sortColumn, sortDir, pageIndex, pageSize) {\n    return this.http.get(this.baseUri + `contact/GetProposalsListByContactId?contId=${contId}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${pageIndex}&pageSize=${pageSize}`);\r\n  }\n  addOrUpdateFiles(AppointmentSetUpModel: FormData) {\n    return this.http.post(this.baseUri + `workorder/addOrUpdateFiles`, AppointmentSetUpModel);\n  }\n\n  GetcontractViewFileList(contId, sortColumn, sortDir, pageIndex, pageSize, modulename, submoduleName): Observable<any> {\n    return this.http.get(this.baseUri + `workorder/GetServiceGetFileList?ServiceId=${contId}&sortColumn=${sortColumn}&sortDir=${sortDir}&pageIndex=${pageIndex}&pageSize=${pageSize}&modulename=${modulename}&submoduleName=${submoduleName}`);\n  }\n}\nexport class JsonData {\n  Id: string;\n  FormJsonData: string;\n  moduleCode: string;\n  subModuleCode: string;\n  companyId: string;\n  userId: string;\n  constructor() {\n    this.Id = \"\";\n    this.FormJsonData = \"\";\n    this.moduleCode = \"\";\n    this.subModuleCode = \"\";\n    this.companyId = \"\";\n    this.userId = \"\";\n  }\n}\nexport class CheckboxData {\n  controlname: string;\n  controlvalues: string;\n  constructor() {\n    this.controlname = \"\";\n    this.controlvalues = \"\";\r\n  }\n}\n\n\nexport class lstRelatedModel {\n  title: string;\n  data: any[];\n  constructor() {\n    this.title = \"\";\n    this.data = [];\r\n  }\n}\n\nexport class ContactTopViewModel {\n  ColumnName: string;\n  DisplayName: string;\n  DisplayOrder: number;\n  Value: string;\n  constructor() {\n    this.ColumnName = \"\";\n    this.DisplayName = \"\";\r\n    this.Value = \"\";\r\n    this.DisplayOrder = 1;\r\n  }\n}\n"],"sourceRoot":"webpack:///"}