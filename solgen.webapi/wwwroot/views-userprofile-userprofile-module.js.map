{"version":3,"sources":["./src/app/views/userprofile/userprofile.component.html","./src/app/views/userprofile/userProfile.service.ts","./src/app/views/userprofile/userprofile-routing.module.ts","./src/app/views/userprofile/userprofile.component.ts","./src/app/views/userprofile/userprofile.module.ts"],"names":[],"mappings":"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","file":"views-userprofile-userprofile-module.js","sourcesContent":["export default \"<style>  .pwdtoggle > div {\\r\\n    width: 46px !important;\\r\\n    height: 46px !important;\\r\\n  }\\r\\n</style>\\r\\n<div class=\\\"header float-left w-100 mb-2\\\">\\r\\n  <h2 class=\\\"float-left pr-2\\\"><strong>My Profile</strong></h2>\\r\\n  <div class=\\\"breadcrumb-wrapper\\\">\\r\\n    <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a routerLink=\\\"/dashboard\\\">Dashboard</a></li>\\r\\n      <li class=\\\"active\\\">{{pageTitle}}</li>\\r\\n    </ol>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"clearfix\\\"></div>\\r\\n<div class=\\\"panel\\\">\\r\\n  <section class=\\\"dashboard-header section-padding\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row d-flex align-items-md-stretch\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <div class=\\\"bg-white pb-4\\\">\\r\\n            <div class=\\\"col-md-12 mt-4 p-1\\\">\\r\\n              <form [formGroup]=\\\"userProfileForm\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-12 col-md-12 col-lg-4\\\">\\r\\n                    <label>First Name:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"firstName\\\" maxlength=\\\"50\\\"\\r\\n                             [ngClass]=\\\"{'is-invalid': (firstName.invalid && (firstName.dirty || firstName.touched) && (firstName.errors?.required || firstName.errors?.maxlength)) }\\\">\\r\\n                      <small *ngIf=\\\"firstName.invalid && (firstName.dirty || firstName.touched) && firstName.errors?.required\\\"\\r\\n                             class=\\\"text-danger\\\">First Name is required</small>\\r\\n                      <input type=\\\"hidden\\\" formControlName=\\\"Id\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-12 col-md-12 col-lg-4\\\">\\r\\n                    <label>Last Name:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"lastName\\\" maxlength=\\\"50\\\"\\r\\n                             [ngClass]=\\\"{'is-invalid': (lastName.invalid && (lastName.dirty || lastName.touched) && (lastName.errors?.required || lastName.errors?.maxlength)) }\\\">\\r\\n                      <small *ngIf=\\\"lastName.invalid && (lastName.dirty || lastName.touched) && lastName.errors?.required\\\"\\r\\n                             class=\\\"text-danger\\\">Last Name is required</small>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-12 col-md-12 col-lg-4\\\">\\r\\n                    <label>Email:</label><span class=\\\"text-danger\\\">*</span>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" maxlength=\\\"50\\\"\\r\\n                             [ngClass]=\\\"{'is-invalid': (email.invalid && (email.dirty || email.touched) && (email.errors?.required || email.errors?.email)) }\\\">\\r\\n                      <small *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors?.required\\\"\\r\\n                             class=\\\"text-danger\\\">Email is required</small>\\r\\n                      <small *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors?.email\\\"\\r\\n                             class=\\\"text-danger\\\">Please enter valid email address</small>\\r\\n                      <input type=\\\"hidden\\\" formControlName=\\\"hdnEmail\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-12 col-md-12 col-lg-4\\\">\\r\\n                    <label>Phone:</label>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <p-inputMask styleClass=\\\"form-control\\\" mask=\\\"(999) 999-9999\\\" formControlName=\\\"phone\\\" placeholder=\\\"(___) ___-____\\\"></p-inputMask>\\r\\n                      <!--<input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"phone\\\" maxlength=\\\"50\\\" />-->\\r\\n                      <!--<small *ngIf=\\\"phone.touched && phone.errors?.pattern\\\"\\r\\n             class=\\\"text-danger\\\">Please enter valid Phone</small>-->\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-12 col-sm-12 col-md-12 col-lg-4\\\">\\r\\n                    <label>Select Profile Image:</label>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-10 col-lg-10 mb-0\\\">\\r\\n                          <div class=\\\"custom-file w-100\\\">\\r\\n                            <input class=\\\"custom-file-input\\\" #file type=\\\"file\\\" name='file' #fileInput accept=\\\"image/x-png,image/gif,image/jpeg\\\" (change)=\\\"setFile($event)\\\" lang=\\\"es\\\">\\r\\n                            <label class=\\\"custom-file-label\\\">{{fileName}}</label>\\r\\n                          </div>\\r\\n                          <small><i class=\\\"text-primary\\\">Valid image format is image/x-png, image/gif, image/jpeg and limit upto 10MB.</i> </small>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2 col-lg-2 mb-0\\\" *ngIf=\\\"imageLink!=''\\\">\\r\\n                          <span class=\\\"uploadedimg\\\">\\r\\n                            <img src={{imageLink}} alt=\\\"img\\\" style=\\\"height:37px; width:40px; cursor:pointer\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"><a href=\\\"javascript:void(0);\\\" (click)=\\\"delImage(userID,fileUrl)\\\" *ngIf=\\\"imageLink.indexOf('NoImage')<0\\\"><i title=\\\"Delete\\\" class=\\\"fas fa-trash-alt\\\"></i></a>\\r\\n                          </span>\\r\\n\\r\\n                          <div id=\\\"myModal\\\" style=\\\" background: none !important;\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n                            <div class=\\\"modal-dialog\\\" style=\\\"max-height:320px!important; max-width:320px!important; \\\">\\r\\n                              <div class=\\\"\\\">\\r\\n                                <button type=\\\"button\\\" class=\\\"close\\\" style=\\\"color: #fff!important; \\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n                              </div>\\r\\n                              <div class=\\\"modal-content\\\">\\r\\n                                <div class=\\\"text-center\\\">\\r\\n                                  <img src={{imageLink}} alt=\\\"img\\\" style=\\\"height:320px!important;width:320px!important; \\\" class=\\\"img-responsive\\\">\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-12 col-md-12 col-lg-4\\\">\\r\\n                    <label>Address:</label>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <textarea class=\\\"form-control\\\" formControlName=\\\"address\\\" maxlength=\\\"500\\\"></textarea>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-12 col-md-12 col-lg-4\\\">\\r\\n                    <label>City:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"city\\\" maxlength=\\\"50\\\"\\r\\n                             [ngClass]=\\\"{'is-invalid': (city.invalid && (city.dirty || city.touched) && (city.errors?.required || city.errors?.maxlength)) }\\\">\\r\\n                      <small *ngIf=\\\"city.invalid && (city.dirty || city.touched) && city.errors?.required\\\"\\r\\n                             class=\\\"text-danger\\\">City is required</small>\\r\\n                      <input type=\\\"hidden\\\" formControlName=\\\"Id\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n                    <label>Country:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <ng-select [items]=\\\"countryLists\\\" placeholder=\\\"Select country\\\" formControlName=\\\"county\\\"\\r\\n                                 bindLabel=\\\"text\\\" bindValue=\\\"value\\\"\\r\\n                                 [ngClass]=\\\"{'is-invalid': (county.invalid && (county.dirty || county.touched) && county.errors?.required) }\\\"></ng-select>\\r\\n                      <small *ngIf=\\\"county.invalid && (county.dirty || county.touched) && county.errors?.required\\\" class=\\\"text-danger\\\">Please select country</small>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-12 col-md-12 col-lg-4\\\">\\r\\n                    <label>State:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <ng-select [items]=\\\"statesList\\\" placeholder=\\\"Select State\\\" formControlName=\\\"state\\\"\\r\\n                                 bindLabel=\\\"text\\\" bindValue=\\\"stateGuidValues\\\"\\r\\n                                 [ngClass]=\\\"{'is-invalid': (state.invalid && (state.dirty || state.touched) && state.errors?.required) }\\\"></ng-select>\\r\\n                      <small *ngIf=\\\"state.invalid && (state.dirty || state.touched) && state.errors?.required\\\" class=\\\"text-danger\\\">Please select State</small>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n                    <label>Zip Code:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Zip Code\\\" formControlName=\\\"zipCode\\\"\\r\\n                             [ngClass]=\\\"{'is-invalid': (zipCode.invalid && (zipCode.dirty || zipCode.touched) && (zipCode.errors?.required || zipCode.errors?.maxlength)) }\\\">\\r\\n                      <small *ngIf=\\\"zipCode.invalid && (zipCode.dirty || zipCode.touched) && zipCode.errors?.required\\\"\\r\\n                             class=\\\"text-danger\\\">Zip Code is required</small>\\r\\n                      <small *ngIf=\\\"zipCode.invalid && (zipCode.dirty || zipCode.touched) && zipCode.errors?.maxlength\\\"\\r\\n                             class=\\\"text-danger\\\">Zip Code can not be greater than 5 characters.</small>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n                    <label>Time Format:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <ng-select [items]=\\\"lstTimeFormat\\\" placeholder=\\\"Select Time Format\\\" formControlName=\\\"timeFormat\\\"\\r\\n                                 bindLabel=\\\"text\\\" bindValue=\\\"value\\\" [ngClass]=\\\"{'is-invalid': (timeFormat.invalid && (timeFormat.dirty || timeFormat.touched) && timeFormat.errors?.required) }\\\"></ng-select>\\r\\n                      <small *ngIf=\\\"timeFormat.invalid && (timeFormat.dirty || timeFormat.touched) && timeFormat.errors?.required\\\" class=\\\"text-danger\\\">Please select Time Zone</small>\\r\\n\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n                    <label>Time Zone:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <ng-select [items]=\\\"lstTimeZone\\\" placeholder=\\\"Select Time Zone\\\" formControlName=\\\"timeZoneId\\\"\\r\\n                                 bindLabel=\\\"text\\\" bindValue=\\\"value\\\" [ngClass]=\\\"{'is-invalid': (timeZoneId.invalid && (timeZoneId.dirty || timeZoneId.touched) && timeZoneId.errors?.required) }\\\"></ng-select>\\r\\n                      <small *ngIf=\\\"timeZoneId.invalid && (timeZoneId.dirty || timeZoneId.touched) && timeZoneId.errors?.required\\\" class=\\\"text-danger\\\">Please select Time Zone</small>\\r\\n\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-12 col-lg-4\\\" *ngIf=\\\"IsDealer\\\">\\r\\n                    <label>Company URL:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <a target=\\\"_blank\\\" href='http://{{dealerCompanyUrl}}'>{{dealerCompanyUrl}}</a>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"col-12 p-0 text-right\\\">\\r\\n                  <a href=\\\"javascript:void(0);\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateUserProfile()\\\"><i class=\\\"fa fa-save\\\"></i> Submit</a>\\r\\n                  <!--<a href=\\\"javascript:void(0)\\\" class=\\\"btn blue-btn form-btns\\\" data-toggle=\\\"modal\\\" data-target=\\\"#headerpassword\\\"><i class=\\\"fa fa-key\\\"></i> Change Password</a>-->\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div #changePassModal class=\\\"modal fade\\\" id=\\\"headerpassword\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"headerexampleModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n      <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n          <div class=\\\"modal-header\\\">\\r\\n            <h4 class=\\\"modal-title\\\" id=\\\"headerexampleModalLabel\\\">Change Password</h4>\\r\\n            <button #closeButton type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n          </div>\\r\\n          <div class=\\\"modal-body\\\">\\r\\n            <form [formGroup]=\\\"changePasswordForm\\\">\\r\\n              <div class=\\\"row mt-3\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <label>Current Password:</label><span class=\\\"text-danger\\\">*</span>\\r\\n                  <div class=\\\"form-group pwdtoggle\\\">\\r\\n                    <input class=\\\"form-control\\\" type=\\\"password\\\" passwordToggle formControlName=\\\"currentPassword\\\"\\r\\n                           [ngClass]=\\\"{'is-invalid': (currentPassword.invalid && (currentPassword.dirty || currentPassword.touched) && (currentPassword.errors?.required || currentPassword.errors?.maxlength)) }\\\">\\r\\n                    <small *ngIf=\\\"currentPassword.invalid && (currentPassword.dirty || currentPassword.touched) && currentPassword.errors?.required\\\"\\r\\n                           class=\\\"text-danger\\\">Current Password is required</small>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <label>New Password:</label><span class=\\\"text-danger\\\">*</span>\\r\\n                  <div class=\\\"form-group pwdtoggle\\\">\\r\\n                    <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"newPassword\\\" passwordToggle\\r\\n                           [ngClass]=\\\"{'is-invalid': (newPassword.invalid && (newPassword.dirty || newPassword.touched) && (newPassword.errors?.required || newPassword.errors?.maxlength)) }\\\">\\r\\n                    <small *ngIf=\\\"newPassword.invalid && (newPassword.dirty || newPassword.touched) && newPassword.errors?.required\\\"\\r\\n                           class=\\\"text-danger\\\">New Password is required</small>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <label>Confirm Password:</label><span class=\\\"text-danger\\\">*</span>\\r\\n                  <div class=\\\"form-group pwdtoggle\\\">\\r\\n                    <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" passwordToggle\\r\\n                           [ngClass]=\\\"{'is-invalid': (confirmPassword.invalid && (confirmPassword.dirty || confirmPassword.touched) && (confirmPassword.errors?.required || confirmPassword.errors?.maxlength)) }\\\">\\r\\n                    <small *ngIf=\\\"confirmPassword.invalid && (confirmPassword.dirty || confirmPassword.touched) && confirmPassword.errors?.required\\\"\\r\\n                           class=\\\"text-danger\\\">Confirm Password is required</small>\\r\\n                    <small *ngIf=\\\"!confirmPassword.valid  && confirmPassword.hasError('notmatch')\\\"\\r\\n                           class=\\\"text-danger\\\">Confirm password does not match</small>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                  <p class=\\\"alert-warning p-2\\\">Note: Password should be combination of lower case, upper case, numeric and special character.</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n          <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success form-btns\\\" (click)=\\\"changePassword();\\\"><i class=\\\"fa fa-save\\\"></i> Save changes</button>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-danger form-btns\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><i class=\\\"fa fa-times text-white\\\"></i> Close</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </section>\\r\\n\\r\\n  <app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader\\\"></app-loader>\\r\\n\\r\\n</div>\\r\\n\"","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment'\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserprofileService {\n  public baseUri = `${environment.WebApiBaseUrl}`;\n\n  constructor(private http: HttpClient) { }\n\n  getUserProfile() {\n    return this.http.get(this.baseUri + `UserProfile/GetUserDetail`);\n  }\n  getDealerAccountDetail() {\n    return this.http.get(this.baseUri + `UserProfile/GetDealerAccountDetail`);\n  }\n\n  getCountryList() {\n    return this.http.get(this.baseUri + `ManageInsurance/GetCountryList`);\r\n  }\n\n  getStateList() {\r\n    return this.http.get(this.baseUri + `ManageInsurance/GetStateList`);\r\n  }\n\n  updateUserProfile(userProfileModel: FormData) {  \n    return this.http.post(this.baseUri + `UserProfile/updateUserProfile`, userProfileModel);\n  }\n  uploadProfilePic(profilePic: File) {\n    return this.http.post(this.baseUri + `UserProfile/UploadProfilePic`, profilePic);\n  }\n  delImage(id: any, imgname: any) {\r\n    const url = this.baseUri + `UserProfile/DeleteUserImage?id=${id}&imgname=${imgname}`;\r\n    return this.http.delete(url)\r\n      .pipe(\r\n        map((response: any) => {\r\n          return true;\r\n        }));\r\n  }\n}\n\nexport class UserProfileModal {\n  FirstName: string;\n  LastName: string;\n  UserType: string;\n  Email: string;\n  PhoneNumber: string;\n  Address: string;\n  City: string;\n  County: string;\n  State: string;\n  ZipCode: string;\n  Position: string;\n  employeeType: string;\n  isActive: boolean;\n  notes: string;\n  profilePic: string;\n  Id: string;\n  timeZoneId: string;\n  timeFormat:string\n  constructor() {\n    this.FirstName = \"\";\n    this.LastName = \"\";\n    this.UserType = \"\";\n    this.Email = \"\";\n    this.PhoneNumber = \"\";\n    this.Address = \"\";\n    this.City = \"\";\n    this.County = \"\";\n    this.State = \"\";\n    this.ZipCode\n    this.Position = \"\";\n    this.employeeType = \"\";\n    this.isActive = false;\n    this.notes = \"\";\n    this.Id = \"\";\n    this.profilePic = \"\";\n    this.timeZoneId = \"\";\n    this.timeFormat = \"\";\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserprofileComponent } from './userprofile.component';\r\n\nconst routes: Routes = [\n  { path: '', component: UserprofileComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserprofileService, UserProfileModal } from './userProfile.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { CommonService, Master, ChangePasswordModel, UserDetails, ModuleList } from '../shared/common.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\nimport { ConfirmationDialogService } from '../shared/confirmation-dialog/confirmation-dialog.service';\r\nimport { NgxPasswordToggleModule } from 'ngx-password-toggle';\r\nimport { Location } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'app-userprofile',\r\n  templateUrl: './userprofile.component.html'\r\n})\r\nexport class UserprofileComponent implements OnInit {\r\n    @ViewChild('fileInput', { static: false }) fileInput;;\r\n  @ViewChild('changePassModal', { static: false }) public modal: ModalDirective;\r\n  @ViewChild('closeButton', { static: false }) button: ElementRef;\r\n  \r\n  userModel: UserProfileModal = new UserProfileModal();\r\n  fileName = 'Select File'; imageLink = ''; fileUrl = ''; userID = null;\r\n  isUploadImageValid = true;\r\n  selectedFiles: File[];\r\n  passwordModel: ChangePasswordModel = new ChangePasswordModel();\r\n  loadSave = false;\r\n  modulePermission: ModuleList;\r\n  pageTitle: string;\r\n  statesList: any;\r\n  countryLists: any;\r\n  lstTimeZone: any;\r\n  lstTimeFormat: any;\r\n  dealerCompanyUrl: any;\r\n  IsDealer: boolean = false;\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private fbPassword: FormBuilder,\r\n    private userService: UserprofileService,\r\n    private commonService: CommonService,\r\n    private router: Router,\r\n    private toaster: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private http: HttpClient, private dialogService: ConfirmationDialogService ,private location:Location) { }\r\n\r\n  userProfileForm = this.fb.group({\r\n    firstName: ['', Validators.required],\r\n    lastName: ['', Validators.required],\r\n    userType: [null, Validators.required],\r\n    email: ['', [Validators.required, Validators.email]],\r\n    //phone: ['', Validators.pattern(\"^[0-9]*$\")],\r\n    phone: [''],\r\n    address: [''],\r\n    city: ['', [Validators.required]],\r\n    county: ['', [Validators.required]],\r\n    state: [null, Validators.required],\r\n    zipCode: [null, Validators.required],\r\n    timeZoneId: [null, Validators.required],\r\n    timeFormat: ['12', Validators.required],\r\n    position: [null],\r\n    empType: [null],\r\n    isActive: [''],\r\n    notes: [''],\r\n    Id: [null],\r\n    profilePic: [''],\r\n    'file': '',\r\n    'filename': null,\r\n    hdnEmail: [''],\r\n  });\r\n  get firstName() { return this.userProfileForm.get('firstName'); }\r\n  get lastName() { return this.userProfileForm.get('lastName'); }\r\n  get userType() { return this.userProfileForm.get('userType'); }\r\n  get email() { return this.userProfileForm.get('email'); }\r\n  get phone() { return this.userProfileForm.get('phone'); }\r\n  get address() { return this.userProfileForm.get('address'); }\r\n  get city() { return this.userProfileForm.get('city'); }\r\n  get county() { return this.userProfileForm.get('county'); }\r\n  get state() { return this.userProfileForm.get('state'); }\r\n  get zipCode() { return this.userProfileForm.get('zipCode'); }\r\n\r\n  get position() { return this.userProfileForm.get('position'); }\r\n  get empType() { return this.userProfileForm.get('empType'); }\r\n  get isActive() { return this.userProfileForm.get('isActive'); }\r\n  get notes() { return this.userProfileForm.get('notes'); }\r\n  get Id() { return this.userProfileForm.get('Id'); }\r\n  get profilePic() { return this.userProfileForm.get('profilePic'); }\r\n  get filename() { return this.userProfileForm.get('filename'); }\r\n  get hdnEmail() { return this.userProfileForm.get('hdnEmail'); }\r\n  get timeZoneId() { return this.userProfileForm.get('timeZoneId'); }\r\n  get timeFormat() { return this.userProfileForm.get('timeFormat'); }\r\n\r\n\r\n  private prepareFormDataForupdateUserProfile() {  \r\n    const input = new FormData();\r\n    input.append('firstName', this.firstName.value);\r\n    input.append('firstName', this.firstName.value);\r\n    input.append('lastName', this.lastName.value);\r\n    input.append('userType', this.userType.value);\r\n    input.append('email', this.email.value);\r\n    input.append('phoneNumber', this.phone.value);\r\n    input.append('profilePic', this.profilePic.value);\r\n    input.append('address', this.address.value);\r\n    input.append('city', this.city.value);\r\n    input.append('county', this.county.value);\r\n    input.append('state', this.state.value);\r\n    input.append('zipCode', this.zipCode.value);\r\n\r\n    input.append('position', this.position.value);\r\n    input.append('isActive', this.isActive.value);\r\n    input.append('notes', this.notes.value);\r\n    input.append('timeZoneId', this.timeZoneId.value);\r\n    input.append('timeFormat', this.timeFormat.value);\r\n    input.append('Id', this.Id.value);\r\n\r\n    if (this.commonService.isUploadImageValid) {\r\n      if (this.filename.value !== null) {\r\n        input.append('filename', this.filename.value);\r\n      }\r\n    }\r\n\r\n    const fileBrowser = this.fileInput.nativeElement;\r\n    if (fileBrowser.files && fileBrowser.files[0]) {\r\n      \r\n      input.append('file', fileBrowser.files[0]);\r\n    }\r\n\r\n    return input;\r\n  }\r\n\r\n  fillForm() {\r\n    this.userService.getUserProfile().subscribe((result: any) => {\r\n      if (result) {\r\n        this.loadSave = false;\r\n        debugger;\r\n        this.userProfileForm.patchValue({\r\n          Id: result.id,\r\n          firstName: result.firstName,\r\n          lastName: result.lastName,\r\n          userType: result.userType,\r\n          email: result.email,\r\n          phone: result.phoneNumber,\r\n          address: result.address,\r\n          city: result.city,\r\n          county: parseInt(result.county),\r\n          state: result.state,\r\n          zipCode: result.zipCode,\r\n          isActive: result.isActive,\r\n          notes: result.notes,\r\n          profilePic: result.profilePic,\r\n          hdnEmail: result.email,\r\n          timeZoneId: result.timezone,\r\n          timeFormat: result.timeformat\r\n        });\r\n        this.imageLink = result.profilePicLink;\r\n        this.fileUrl = result.profilePic;\r\n      }\r\n    }) \r\n   // this.email.disable();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getTimeFormatList();\r\n    this.commonService.getLoggedInName.subscribe((userdetail: any) => {\r\n      if (typeof userdetail.id !== 'undefined' && userdetail.id != null)\r\n        this.userID = userdetail.id;\r\n\r\n      if (userdetail.userType == \"usertypedealer\") {\r\n        this.IsDealer = true;\r\n      }\r\n      else { this.IsDealer = false; }\r\n\r\n    });\r\n    this.pageTitle = 'My Profile';\r\n    this.fillForm();\r\n    this.getState();\r\n    this.getCountryDropdownList();\r\n    this.getTimeZoneList();\r\n    this.GetDealerDetail();\r\n\r\n  }\r\n\r\n  getTimeFormatList() {\r\n      this.lstTimeFormat = this.commonService.getTimeFormatList();\r\n  }\r\n\r\n  getTimeZoneList() {\r\n    this.commonService.getTimeZoneList().subscribe(resp => {\r\n      this.lstTimeZone = JSON.parse(resp);\r\n    })\r\n  }\r\n\r\n  getCountryDropdownList() {\r\n    this.userService.getCountryList().subscribe((result: any) => {\r\n     \r\n      this.countryLists = result;\r\n    })\r\n  }\r\n\r\n  getState() {\r\n    this.userService.getStateList().subscribe((result: any) => {\r\n      var data = result;\r\n      this.statesList = data;\r\n    })\r\n  }\r\n\r\n  updateUserProfile() {\r\n    console.log(\"sdsdsdds\", this.userProfileForm.controls['email'].value);\r\n    let isUpdate = true;\r\n    if (this.userProfileForm.valid) {\r\n      if (this.userProfileForm.controls['email'].value != this.userProfileForm.value.hdnEmail) {\r\n        this.dialogService.confirm('User profile', 'If you update your Email then you will be logged out automatically, Are you sure you want to update Email?').subscribe(confirmed => {\r\n          if (confirmed) {\r\n            this.update(2);\r\n          }\r\n          else {\r\n            this.userProfileForm.patchValue({ email: this.userProfileForm.value.hdnEmail });\r\n          }\r\n        });\r\n      }\r\n      else {//same email\r\n        this.update(1)\r\n      }  \r\n    }\r\n    else {\r\n      this.commonService.validateAllFormFields(this.userProfileForm);\r\n    }\r\n  }\r\n\r\n  Back() {\r\n    this.router.navigateByUrl(\"/dashboard\");\r\n  }\r\n  update(reload: any) {\r\n    this.loadSave = true;\r\n    this.userModel.Id = this.userProfileForm.value.Id;\r\n    this.userModel.FirstName = this.userProfileForm.value.firstName;\r\n    this.userModel.LastName = this.userProfileForm.value.lastName;\r\n    this.userModel.PhoneNumber = this.userProfileForm.value.phone;\r\n    this.userModel.Address = this.userProfileForm.value.address;\r\n    this.userModel.isActive = this.userProfileForm.value.isActive == \"\" ? false : true;\r\n    this.userModel.notes = this.userProfileForm.value.notes;\r\n    this.userModel.profilePic = this.userProfileForm.value.profilePic;\r\n    this.userModel.Email = this.userProfileForm.value.email;\r\n    this.userModel.City = this.userProfileForm.value.city;\r\n    this.userModel.County = this.userProfileForm.value.county;\r\n    this.userModel.State = this.userProfileForm.value.state;\r\n    this.userModel.ZipCode = this.userProfileForm.value.zipCode;\r\n    this.userModel.timeZoneId = this.timeZoneId.value;\r\n    this.userModel.timeFormat = this.timeFormat.value;\r\n    if (this.fileUrl != null) {\r\n      this.userModel.profilePic = this.fileUrl;\r\n    }\r\n    const formDataUserModel = this.prepareFormDataForupdateUserProfile();\r\n    this.userService.updateUserProfile(formDataUserModel).subscribe((result: any) => {\r\n      if (result.statusCode == 200) {\r\n        this.toaster.success(result.responseMessage);\r\n        if (reload == 1) {\r\n          window.location.reload();\r\n        }\r\n        else if (reload == 2) {\r\n          this.commonService.logoutFromMyPrifle();\r\n        }\r\n      }\r\n      else {\r\n        this.loadSave = false;\r\n        this.toaster.error(result.responseMessage);\r\n      }\r\n    }, err => {\r\n      this.loadSave = false;\r\n    }, () => {\r\n      this.loadSave = false;\r\n    });\r\n  }\r\n  //------------------------------- Change Password\r\n  changePasswordForm = this.fbPassword.group({\r\n    currentPassword: ['', Validators.required],\r\n    newPassword: ['', Validators.required],\r\n    confirmPassword: ['', Validators.required]\r\n  },\r\n    {\r\n      validator: PasswordMatch('newPassword', 'confirmPassword')\r\n    }\r\n  );\r\n  get currentPassword() { return this.changePasswordForm.get('currentPassword'); }\r\n  get newPassword() { return this.changePasswordForm.get('newPassword'); }\r\n  get confirmPassword() { return this.changePasswordForm.get('confirmPassword'); }\r\n  changePassword() {\r\n    if (this.changePasswordForm.valid) {\r\n      this.passwordModel.currentPassword = this.changePasswordForm.value.currentPassword;\r\n      this.passwordModel.password = this.changePasswordForm.value.newPassword;\r\n      this.passwordModel.confirmPassword = this.changePasswordForm.value.confirmPassword;\r\n\r\n      this.commonService.ChangePassword(this.passwordModel).subscribe((response: any) => {\r\n        if (response.statusCode == 200) {\r\n          this.toaster.success(response.responseMessage);\r\n          let btn = this.button.nativeElement;\r\n          btn.click();\r\n          this.commonService.logout();\r\n        }\r\n        else {\r\n          this.toaster.error(response.responseMessage);\r\n        }\r\n\r\n      });\r\n    }\r\n    else {\r\n      this.commonService.validateAllFormFields(this.changePasswordForm);\r\n    }\r\n  }\r\n  //---------------------------------------------------------\r\n  //---------------------------------------------------------\r\n\r\n  delImage(id: any, imgname: any) {\r\n    const message = `Are you sure you want to delete Profile Image.?`;\r\n\r\n    this.dialogService.confirm('Delete Image', message).subscribe(confirmed => {\r\n      if (confirmed) {\r\n        this.userService.delImage(id, imgname).subscribe(r => {\r\n          if (r) {\r\n            this.imageLink = \"\";\r\n            this.fileName = 'Select File';\r\n            this.fillForm();\r\n            window.location.reload();\r\n            this.toaster.success(`Image deleted successfully.`);\r\n          }\r\n          else {\r\n            this.toaster.error(`Something went wrong please contact site administrator.`);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  get file() {\r\n    return this.userProfileForm.get('file');\r\n  }\r\n\r\n  setFile($event): void {\r\n    this.commonService.uploadProfileImageFileValidator($event);\r\n    this.commonService.uploadDocumentSize(\"img\", $event.target.files[0].size,\"10MB\")\r\n    if (this.commonService.isFileValid) {\r\n      this.fileName = $event.target.files[0].name;\r\n    }\r\n  }\r\n\r\n  GetDealerDetail() {\r\n    this.userService.getDealerAccountDetail().subscribe((result: any) => {\r\n      console.log(\"return\", result);\r\n      if (result) {\r\n        this.dealerCompanyUrl = result.companyUrl;\r\n      }\r\n    })\r\n    // this.email.disable();\r\n  }\r\n}\r\n\r\nfunction PasswordMatch(pwd: string, cpwd: string) {\r\n  return (frm: FormGroup) => {\r\n    let pword = frm.controls[pwd];\r\n    let cpword = frm.controls[cpwd];\r\n\r\n    if (pword.value !== cpword.value) {\r\n      cpword.setErrors({ notmatch: true });\r\n    }\r\n    else {\r\n      cpword.setErrors(null);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { UserprofileComponent } from './userprofile.component';\r\nimport { UserprofileService } from './userprofile.service';\r\nimport { UserRoutingModule } from './userprofile-routing.module';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { NgxPasswordToggleModule } from 'ngx-password-toggle';\r\n@NgModule({\r\n  declarations: [\r\n    UserprofileComponent \r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    UserRoutingModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule, NgxPasswordToggleModule,\r\n    NgxDatatableModule, FormsModule, SharedModule\r\n  ]\r\n  \r\n})\r\nexport class UserModule { }\r\n"],"sourceRoot":"webpack:///"}