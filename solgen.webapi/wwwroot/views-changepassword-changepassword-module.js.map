{"version":3,"sources":["./src/app/views/changepassword/changepassword.component.html","./src/app/views/changepassword/changepassword-routing.module.ts","./src/app/views/changepassword/changepassword.component.scss","./src/app/views/changepassword/changepassword.component.ts","./src/app/views/changepassword/changepassword.module.ts"],"names":[],"mappings":"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","file":"views-changepassword-changepassword-module.js","sourcesContent":["export default \"<div class=\\\"header float-left w-100 mb-2\\\">\\r\\n  <h2 class=\\\"float-left pr-2\\\"><strong>Change Password</strong></h2>\\r\\n  <div class=\\\"breadcrumb-wrapper\\\">\\r\\n    <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a routerLink=\\\"/dashboard\\\">Dashboard</a></li>\\r\\n      <li class=\\\"active\\\">Change Password</li>\\r\\n    </ol>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"clearfix\\\"></div>\\r\\n<div class=\\\"panel\\\">\\r\\n  <section class=\\\"dashboard-header section-padding\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row d-flex align-items-md-stretch\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <div class=\\\"bg-white pb-3\\\">\\r\\n            <div class=\\\"col-md-12 mt-4 p-1\\\">\\r\\n              <form [formGroup]=\\\"changePasswordForm\\\">\\r\\n                <div class=\\\"row mt-3\\\">\\r\\n                  <div class=\\\"col-lg-6\\\">\\r\\n                    <label>Current Password:</label><span class=\\\"text-danger\\\">*</span>\\r\\n                    <div class=\\\"form-group pwdtoggle\\\">\\r\\n                      <input class=\\\"form-control\\\" type=\\\"password\\\" passwordToggle formControlName=\\\"currentPassword\\\"\\r\\n                             [ngClass]=\\\"{'is-invalid': (currentPassword.invalid && (currentPassword.dirty || currentPassword.touched) && (currentPassword.errors?.required || currentPassword.errors?.maxlength)) }\\\">\\r\\n                      <small *ngIf=\\\"currentPassword.invalid && (currentPassword.dirty || currentPassword.touched) && currentPassword.errors?.required\\\"\\r\\n                             class=\\\"text-danger\\\">Current Password is required</small>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-lg-6\\\">\\r\\n                    <label>New Password:</label><span class=\\\"text-danger\\\">*</span>\\r\\n                    <div class=\\\"form-group pwdtoggle\\\">\\r\\n                      <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"newPassword\\\" passwordToggle\\r\\n                             [ngClass]=\\\"{'is-invalid': (newPassword.invalid && (newPassword.dirty || newPassword.touched) && (newPassword.errors?.required || newPassword.errors?.maxlength)) }\\\">\\r\\n                      <small *ngIf=\\\"newPassword.invalid && (newPassword.dirty || newPassword.touched) && newPassword.errors?.required\\\"\\r\\n                             class=\\\"text-danger\\\">New Password is required</small>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-lg-6\\\">\\r\\n                    <label>Confirm New Password:</label><span class=\\\"text-danger\\\">*</span>\\r\\n                    <div class=\\\"form-group pwdtoggle\\\">\\r\\n                      <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" passwordToggle\\r\\n                             [ngClass]=\\\"{'is-invalid': (confirmPassword.invalid && (confirmPassword.dirty || confirmPassword.touched) && (confirmPassword.errors?.required || confirmPassword.errors?.maxlength)) }\\\">\\r\\n                      <small *ngIf=\\\"confirmPassword.invalid && (confirmPassword.dirty || confirmPassword.touched) && confirmPassword.errors?.required\\\"\\r\\n                             class=\\\"text-danger\\\">Confirm Password is required</small>\\r\\n                      <small *ngIf=\\\"!confirmPassword.valid  && confirmPassword.hasError('notmatch')\\\"\\r\\n                             class=\\\"text-danger\\\">Confirm password does not match</small>\\r\\n\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-12\\\">\\r\\n                    <p class=\\\"alert-warning p-2\\\">Note: Password must be combination of lower case, upper case, numeric and special character.</p>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-sm-12 text-right\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success form-btns mr-2\\\" (click)=\\\"changePassword()\\\"><i class=\\\"fa fa-save\\\"></i> SUBMIT</button>\\r\\n\\r\\n                    <a href=\\\"javascript:void(0)\\\" routerLink=\\\"/dashboard\\\" class=\\\"btn btn-danger \\\"><span><i class=\\\"fa fa-close\\\"></i>  Cancel</span></a>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </section>\\r\\n</div>\\r\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChangepasswordComponent } from './changepassword.component';\r\n\r\n\n\nconst routes: Routes = [\n  { path: '', component: ChangepasswordComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChangepasswordRoutingModule { }  \n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2NoYW5nZXBhc3N3b3JkL2NoYW5nZXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../shared/user.service';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CommonService, ChangePasswordModel } from '../shared/common.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { EqualValidator } from '../shared/custom-validation/equal-validator';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./changepassword.component.scss']\n})\nexport class ChangepasswordComponent implements OnInit {\n  @ViewChild('closeButton', { static: false }) button: ElementRef;\n  result = null;\n  tmp = [];\n  token: any;\n  passwordModel: ChangePasswordModel = new ChangePasswordModel();\n  userId: any;\n  loadSave = false;\n  constructor(private userService: UserService\n    , private router: Router\n    , private fbPassword: FormBuilder\n    , private commonService: CommonService\n    , private toaster: ToastrService) { }\n\n\n\n  ngOnInit() {\n    const userid = this.findGetParameter(\"userId\");\n    this.token = this.findGetParameter(\"token\");\n    if (userid) {\n      this.userService.confirmEmail(userid, this.token).subscribe((res: any) => {\n        if (res.statusCode == 500) {\n          this.router.navigateByUrl('/common/unauthorized');\n        }\n        else {\n          this.userId = res.result;\n        }\n      });\n    }\n  }\n\n  //------------------------------- Change Password\n  changePasswordForm = this.fbPassword.group({\n    currentPassword: ['', Validators.required],\n    newPassword: ['', Validators.required],\n    confirmPassword: ['', Validators.required]\n  },\n    {\n      validator: PasswordMatch('newPassword', 'confirmPassword')\n    }\n  );\n  get currentPassword() { return this.changePasswordForm.get('currentPassword'); }\n  get newPassword() { return this.changePasswordForm.get('newPassword'); }\n  get confirmPassword() { return this.changePasswordForm.get('confirmPassword'); }\n  changePassword() {\n    if (this.changePasswordForm.valid) {\n      this.passwordModel.currentPassword = this.changePasswordForm.value.currentPassword;\n      this.passwordModel.password = this.changePasswordForm.value.newPassword;\n      this.passwordModel.confirmPassword = this.changePasswordForm.value.confirmPassword;\n\n      this.commonService.ChangePassword(this.passwordModel).subscribe((response: any) => {\n        if (response.statusCode == 200) {\n          this.toaster.success(response.responseMessage);\n          this.changePasswordForm.reset();\n          let btn = this.button.nativeElement;\n\n          btn.click();\n          this.commonService.logout();\n        }\n        else {\n          this.toaster.error(response.responseMessage);\n        }\n\n      });\n    }\n    else {\n      this.commonService.validateAllFormFields(this.changePasswordForm);\n    }\n  }\n\n  //---------------------------------------------------------\n  //---------------------------------------------------------\n  findGetParameter(parameterName) {\n    this.result = null,\n      this.tmp = [];\n    var items = location.search.substr(1).split(\"&\");\n    for (var index = 0; index < items.length; index++) {\n      this.tmp = items[index].split(\"=\");\n      if (this.tmp[0] === parameterName) this.result = decodeURIComponent(this.tmp[1]);\n    }\n    return this.result;\n  }\n}\nfunction PasswordMatch(pwd: string, cpwd: string) {\n  return (frm: FormGroup) => {\n    let pword = frm.controls[pwd];\n    let cpword = frm.controls[cpwd];\n\n    if (pword.value !== cpword.value) {\n      cpword.setErrors({ notmatch: true });\n    }\n    else {\n      cpword.setErrors(null);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChangepasswordComponent } from './changepassword.component';\r\nimport { ChangepasswordRoutingModule } from './changepassword-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\n@NgModule({\n  declarations: [ChangepasswordComponent],\n  imports: [\n    CommonModule, ChangepasswordRoutingModule, FormsModule, ReactiveFormsModule, NgSelectModule, SharedModule \n  ]\n})\nexport class ChangePasswordModule { }\n"],"sourceRoot":"webpack:///"}