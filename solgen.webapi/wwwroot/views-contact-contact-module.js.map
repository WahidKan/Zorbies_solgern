{"version":3,"sources":["./src/app/views/contact/addeditcontact.component.html","./src/app/views/contact/contact.component.html","./src/app/views/contact/guarantorold/guarantorold.component.html","./src/app/views/contact/insurance/insurance.component.html","./src/app/views/contact/addeditcontact.component.scss","./src/app/views/contact/addeditcontact.component.ts","./src/app/views/contact/contact-routing.module.ts","./src/app/views/contact/contact.component.scss","./src/app/views/contact/contact.component.ts","./src/app/views/contact/contact.module.ts","./src/app/views/contact/guarantorold/guarantorold.component.ts","./src/app/views/contact/insurance/insurance.component.scss","./src/app/views/contact/insurance/insurance.component.ts"],"names":[],"mappings":"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","file":"views-contact-contact-module.js","sourcesContent":["export default \"      <!-- Side Navbar -->\\r\\n<div class=\\\"page\\\">\\r\\n  <!-- Breadcrumb-->\\r\\n  <div class=\\\"breadcrumb-holder\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12 mt-3\\\">\\r\\n          <span class=\\\"dash\\\">Manage Customer</span>\\r\\n          <ul class=\\\"breadcrumb\\\">\\r\\n            <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/dashboard\\\">Dashboard</a></li>\\r\\n            <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/contact\\\">Manage Customer</a></li>\\r\\n            <li class=\\\"breadcrumb-item active\\\">{{pageTitle}}</li>\\r\\n          </ul>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-lg-12 mt-3\\\">\\r\\n          <button class=\\\"w-auto sw-100 btn btn-dark\\\" (click)=\\\"cancelForm()\\\"><i class=\\\"fa fa-arrow-left\\\"></i>&nbsp;Back</button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Header Section-->\\r\\n  <section class=\\\"dashboard-header section-padding\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row d-flex align-items-md-stretch\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <div class=\\\"bg-white border rounded pb-4\\\">\\r\\n            <div class=\\\"col-md-12 mt-4\\\">\\r\\n              <form [formGroup]=\\\"contactForm\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"contact-box\\\" [ngClass]=\\\"{'disabled':loadSave}\\\">\\r\\n                  <div class=\\\"panel-group accordian\\\" id=\\\"accordion\\\" role=\\\"tablist\\\" aria-multiselectable=\\\"true\\\">\\r\\n                    <div class=\\\"panel panel-default mb-2\\\">\\r\\n                      <div class=\\\"panel-heading\\\" role=\\\"tab\\\" id=\\\"headingOne\\\">\\r\\n                        <h4 class=\\\"panel-title mb-0\\\">\\r\\n                          <a role=\\\"button\\\" class=\\\"collapsed\\\" id=\\\"firstAccordianAnch\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#collapseOne\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseOne\\\">\\r\\n                            BUSINESS INFORMATION <small class=\\\"ml-2\\\" *ngIf=\\\"contactForm.get('contactId').value\\\">{{buissnessName}}</small>\\r\\n                          </a>\\r\\n                        </h4>\\r\\n                      </div>\\r\\n                      <div id=\\\"collapseOne\\\" class=\\\"panel-collapse collapse\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"headingOne\\\">\\r\\n                        <div class=\\\"panel-body bg-light p-3\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>Business Name:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contactBussinessName\\\" maxlength=\\\"500\\\"\\r\\n                                       [ngClass]=\\\"{'is-invalid': (contactBussinessName.invalid && (contactBussinessName.dirty || contactBussinessName.touched) && (contactBussinessName.errors?.required || contactBussinessName.errors?.maxlength)) }\\\">\\r\\n                                <small *ngIf=\\\"contactForm.get('contactBussinessName').touched && contactForm.get('contactBussinessName').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                                  Business Name is required\\r\\n                                </small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>Business Tin:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <p-inputMask styleClass=\\\"form-control\\\" mask=\\\"99-9999999\\\" formControlName=\\\"contactBussinessTIN\\\" placeholder=\\\"__-_______\\\" [ngClass]=\\\"{'is-invalid': (contactBussinessTIN.invalid && (contactBussinessTIN.dirty || contactBussinessTIN.touched) && (contactBussinessTIN.errors?.required || contactBussinessTIN.errors?.maxlength)) }\\\">\\r\\n                                </p-inputMask>\\r\\n                                <small *ngIf=\\\"contactForm.get('contactBussinessTIN').touched && contactForm.get('contactBussinessTIN').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                                  Customer Business TIN is required\\r\\n                                </small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                            <!--<div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n    <label>Business Tin:<span class=\\\"text-danger\\\">*</span></label>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contactBussinessTIN\\\" maxlength=\\\"9\\\"\\r\\n             [ngClass]=\\\"{'is-invalid': (contactBussinessTIN.invalid && (contactBussinessTIN.dirty || contactBussinessTIN.touched) && (contactBussinessTIN.errors?.required || contactBussinessTIN.errors?.maxlength)) }\\\">\\r\\n      <small *ngIf=\\\"contactForm.get('contactBussinessTIN').touched && contactForm.get('contactBussinessTIN').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n        Contact Business TIN is required\\r\\n      </small>\\r\\n      <small *ngIf=\\\"contactForm.get('contactBussinessTIN').touched && contactForm.get('contactBussinessTIN').errors?.pattern\\\"\\r\\n             class=\\\"text-danger\\\">Please enter valid TIN</small>\\r\\n    </div>\\r\\n  </div>-->\\r\\n\\r\\n\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>Type of Company:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                              <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                  <div class=\\\"form-group\\\">\\r\\n                                    <ng-select [items]=\\\"lstcompanyType\\\"\\r\\n                                               placeholder=\\\"Select Company Type\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\" formControlName=\\\"contactTypeOfCompany\\\" [loading]=\\\"isLoading\\\"\\r\\n                                               [ngClass]=\\\"{'is-invalid': (contactTypeOfCompany.invalid && (contactTypeOfCompany.dirty || contactTypeOfCompany.touched) && (contactTypeOfCompany.errors?.required || contactTypeOfCompany.errors?.maxlength)) }\\\">\\r\\n                                    </ng-select>\\r\\n                                    <small *ngIf=\\\"contactForm.get('contactTypeOfCompany').touched && contactForm.get('contactTypeOfCompany').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                                      Customer Type Of Company is required\\r\\n                                    </small>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"!isLeaseCreated\\\" class=\\\"col-md-2 pl-0 text-right\\\">\\r\\n\\r\\n                                  <a href=\\\"javascript:void(0);\\\" (click)=\\\"addTypeOfComp(typeOfCompany)\\\" class=\\\"btn btn-orange\\\" data-toggle=\\\"modal\\\" data-target=\\\"#typeOfCompany\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\r\\n\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>Business Phone:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <p-inputMask styleClass=\\\"form-control\\\" mask=\\\"(999) 999-9999\\\" formControlName=\\\"bussinessPhone\\\" placeholder=\\\"(___) ___-____\\\" [ngClass]=\\\"{'is-invalid': (bussinessPhone.invalid && (bussinessPhone.dirty || bussinessPhone.touched) && (bussinessPhone.errors?.required || bussinessPhone.errors?.maxlength)) }\\\">\\r\\n                                </p-inputMask>\\r\\n                                <small *ngIf=\\\"contactForm.get('bussinessPhone').touched && contactForm.get('bussinessPhone').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                                  Business Phone is required\\r\\n                                </small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <!--<div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n    <label>Business Phone:<span class=\\\"text-danger\\\">*</span></label>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"bussinessPhone\\\" maxlength=\\\"100\\\"\\r\\n             [ngClass]=\\\"{'is-invalid': (bussinessPhone.invalid && (bussinessPhone.dirty || bussinessPhone.touched) && (bussinessPhone.errors?.required || bussinessPhone.errors?.maxlength)) }\\\">\\r\\n      <small *ngIf=\\\"contactForm.get('bussinessPhone').touched && contactForm.get('bussinessPhone').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n        Business Phone is required\\r\\n      </small>\\r\\n      <small *ngIf=\\\"contactForm.get('bussinessPhone').touched && contactForm.get('bussinessPhone').errors?.pattern\\\"\\r\\n             class=\\\"text-danger\\\">Please enter valid Phone</small>\\r\\n    </div>\\r\\n  </div>-->\\r\\n\\r\\n\\r\\n                            <div class=\\\"col-12 col-md-12 col-lg-12\\\">\\r\\n                              <label class=\\\"m-label-s\\\">CUSTOMER DETAIL:</label>\\r\\n                              <hr size=\\\"4\\\" class=\\\"mt-0 border-secondary\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>Customer Phone:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <p-inputMask styleClass=\\\"form-control\\\" mask=\\\"(999) 999-9999\\\" formControlName=\\\"contactBussinessPhone\\\" placeholder=\\\"(___) ___-____\\\" [ngClass]=\\\"{'is-invalid': (contactBussinessPhone.invalid && (contactBussinessPhone.dirty || contactBussinessPhone.touched) && (contactBussinessPhone.errors?.required || contactBussinessPhone.errors?.maxlength)) }\\\">\\r\\n                                </p-inputMask>\\r\\n                                <small *ngIf=\\\"contactForm.get('contactBussinessPhone').touched && contactForm.get('contactBussinessPhone').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                                  Customer Phone is required\\r\\n                                </small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <!--<div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n    <label>Contact Phone:<span class=\\\"text-danger\\\">*</span></label>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contactBussinessPhone\\\" maxlength=\\\"100\\\"\\r\\n             [ngClass]=\\\"{'is-invalid': (contactBussinessPhone.invalid && (contactBussinessPhone.dirty || contactBussinessPhone.touched) && (contactBussinessPhone.errors?.required || contactBussinessPhone.errors?.maxlength)) }\\\">\\r\\n      <small *ngIf=\\\"contactForm.get('contactBussinessPhone').touched && contactForm.get('contactBussinessPhone').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n        Contact Phone is required\\r\\n      </small>\\r\\n      <small *ngIf=\\\"contactForm.get('contactBussinessPhone').touched && contactForm.get('contactBussinessPhone').errors?.pattern\\\"\\r\\n             class=\\\"text-danger\\\">Please enter valid Phone</small>\\r\\n    </div>\\r\\n  </div>-->\\r\\n\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>Customer First Name:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contactFirstName\\\" maxlength=\\\"100\\\"\\r\\n                                       [ngClass]=\\\"{'is-invalid': (contactFirstName.invalid && (contactFirstName.dirty || contactFirstName.touched) && (contactFirstName.errors?.required || contactFirstName.errors?.maxlength)) }\\\">\\r\\n                                <small *ngIf=\\\"contactForm.get('contactFirstName').touched && contactForm.get('contactFirstName').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                                  Customer First Name is required\\r\\n                                </small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>Customer Last Name:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contactLastName\\\" maxlength=\\\"100\\\"\\r\\n                                       [ngClass]=\\\"{'is-invalid': (contactLastName.invalid && (contactLastName.dirty || contactLastName.touched) && (contactLastName.errors?.required || contactLastName.errors?.maxlength)) }\\\">\\r\\n                                <small *ngIf=\\\"contactForm.get('contactLastName').touched && contactForm.get('contactLastName').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                                  Customer Last Name is required\\r\\n                                </small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>Customer Position:</label>\\r\\n                              <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-10 pr-0\\\">\\r\\n                                  <div class=\\\"form-group\\\">\\r\\n                                    <ng-select [items]=\\\"lstcontactPosition\\\"\\r\\n                                               placeholder=\\\"Select Customer Position\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\" formControlName=\\\"contactPosition\\\" [loading]=\\\"isLoading\\\">\\r\\n                                    </ng-select>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-2 pl-0 text-right\\\"><a href=\\\"javascript:void(0);\\\" (click)=\\\"addContactPosition(addContact)\\\" class=\\\"btn btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#insurancerequest\\\"><i class=\\\"fa fa-plus\\\"></i></a></div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>Customer Email:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contactEmail\\\" maxlength=\\\"200\\\"\\r\\n                                       [ngClass]=\\\"{'is-invalid': (contactEmail.invalid && (contactEmail.dirty || contactEmail.touched) && (contactEmail.errors?.required || contactEmail.errors?.maxlength)) }\\\">\\r\\n                                <small *ngIf=\\\"contactForm.get('contactEmail').touched && contactForm.get('contactEmail').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                                  Customer Email is required\\r\\n                                </small>\\r\\n                                <small *ngIf=\\\"contactForm.get('contactEmail').touched && contactForm.get('contactEmail').errors?.email\\\" class=\\\"text-danger\\\">Please enter valid Email</small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>Social Security#:</label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <p-inputMask styleClass=\\\"form-control\\\" mask=\\\"999-99-9999\\\" formControlName=\\\"contactSocialSecurityNumber\\\" placeholder=\\\"___-__-____\\\"></p-inputMask>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>Customer Preferred Document Signed:</label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"form-check-inline\\\">\\r\\n                                  <div class=\\\"custom-control custom-radio\\\">\\r\\n                                    <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"customRadio\\\" name=\\\"contactPreferredDocumentSignedBy\\\" value=\\\"DocuSign\\\" formControlName=\\\"contactPreferredDocumentSignedBy\\\">\\r\\n                                    <label class=\\\"custom-control-label\\\" for=\\\"customRadio\\\">DocuSign</label>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-check-inline\\\">\\r\\n                                  <div class=\\\"custom-control custom-radio\\\">\\r\\n                                    <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"customRadio1\\\" name=\\\"contactPreferredDocumentSignedBy\\\" value=\\\"Wet Signature\\\" formControlName=\\\"contactPreferredDocumentSignedBy\\\" checked>\\r\\n                                    <label class=\\\"custom-control-label\\\" for=\\\"customRadio1\\\">Wet Signature</label>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-12 col-md-12 col-lg-12\\\">\\r\\n                              <label class=\\\"m-label-s\\\">Business Mailing Address:</label>\\r\\n                              <hr size=\\\"4\\\" class=\\\"mt-0 border-secondary\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>City:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contactMailAddressCity\\\" maxlength=\\\"200\\\"\\r\\n                                       [ngClass]=\\\"{'is-invalid': (contactMailAddressCity.invalid && (contactMailAddressCity.dirty || contactMailAddressCity.touched) && (contactMailAddressCity.errors?.required || contactMailAddressCity.errors?.maxlength)) }\\\">\\r\\n                                <small *ngIf=\\\"contactForm.get('contactMailAddressCity').touched && contactForm.get('contactMailAddressCity').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                                  Customer Mail City is required\\r\\n                                </small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>County:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contactMailAddressCounty\\\" maxlength=\\\"500\\\"\\r\\n                                       [ngClass]=\\\"{'is-invalid': (contactMailAddressCounty.invalid && (contactMailAddressCounty.dirty || contactMailAddressCounty.touched) && (contactMailAddressCounty.errors?.required || contactMailAddressCounty.errors?.maxlength)) }\\\">\\r\\n                                <small *ngIf=\\\"contactForm.get('contactMailAddressCounty').touched && contactForm.get('contactMailAddressCounty').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                                  Customer Mail Address County is required\\r\\n                                </small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>State:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <ng-select [items]=\\\"lstStates\\\"\\r\\n                                           placeholder=\\\"Select State\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\" formControlName=\\\"contactMailAddressState\\\"\\r\\n                                           [ngClass]=\\\"{'is-invalid': (contactMailAddressState.invalid && (contactMailAddressState.dirty || contactMailAddressState.touched) && (contactMailAddressState.errors?.required || contactMailAddressState.errors?.maxlength)) }\\\">\\r\\n                                </ng-select>\\r\\n                                <small *ngIf=\\\"contactForm.get('contactMailAddressState').touched && contactForm.get('contactMailAddressState').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                                  Customer mail Address State is required\\r\\n                                </small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>Zip:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contactMailAddressZip\\\"\\r\\n                                       [ngClass]=\\\"{'is-invalid': (contactMailAddressZip.invalid && (contactMailAddressZip.dirty || contactMailAddressZip.touched) && (contactMailAddressZip.errors?.required || contactMailAddressZip.errors?.maxlength)) }\\\">\\r\\n                                <small *ngIf=\\\"contactForm.get('contactMailAddressZip').touched && contactForm.get('contactMailAddressZip').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                                  Customer mail Address Zip is required\\r\\n                                </small>\\r\\n                                <small *ngIf=\\\"contactMailAddressZip.invalid && (contactMailAddressZip.dirty || contactMailAddressZip.touched) && contactMailAddressZip.errors?.maxlength\\\"\\r\\n                                       class=\\\"text-danger\\\">Zip can not be greater than 5 characters.</small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>Mailing Address:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <textarea class=\\\"form-control\\\" formControlName=\\\"contactBussinessMailAddress\\\" maxlength=\\\"1000\\\"\\r\\n                                          [ngClass]=\\\"{'is-invalid': (contactBussinessMailAddress.invalid && (contactBussinessMailAddress.dirty || contactBussinessMailAddress.touched) && (contactBussinessMailAddress.errors?.required || contactBussinessMailAddress.errors?.maxlength)) }\\\"></textarea>\\r\\n                                <small *ngIf=\\\"contactForm.get('contactBussinessMailAddress').touched && contactForm.get('contactBussinessMailAddress').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                                  Customer Mailing Address is required\\r\\n                                </small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                            <div class=\\\"col-12 col-md-12 col-lg-12\\\">\\r\\n                              <label class=\\\"m-label-s\\\">Business Physical Address:</label>&nbsp;&nbsp; <input type=\\\"checkbox\\\" (change)=\\\"toggleEditable($event)\\\"> (Same as Mailing Address)\\r\\n                              <hr size=\\\"4\\\" class=\\\"mt-0 border-secondary\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>City:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contactPhysicalAddressCity\\\" maxlength=\\\"200\\\"\\r\\n                                       [ngClass]=\\\"{'is-invalid': (contactPhysicalAddressCity.invalid && (contactPhysicalAddressCity.dirty || contactPhysicalAddressCity.touched) && (contactPhysicalAddressCity.errors?.required || contactPhysicalAddressCity.errors?.maxlength)) }\\\">\\r\\n                                <small *ngIf=\\\"contactForm.get('contactPhysicalAddressCity').touched && contactForm.get('contactPhysicalAddressCity').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                                  Customer Physical Address City is required\\r\\n                                </small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>County:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <input value=\\\"\\\" class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"\\\" formControlName=\\\"contactPhysicalAddressCounty\\\"\\r\\n                                       [ngClass]=\\\"{'is-invalid': (contactPhysicalAddressCounty.invalid && (contactPhysicalAddressCounty.dirty || contactPhysicalAddressCounty.touched) && (contactPhysicalAddressCounty.errors?.required || contactPhysicalAddressCounty.errors?.maxlength)) }\\\">\\r\\n                                <small *ngIf=\\\"contactForm.get('contactPhysicalAddressCounty').touched && contactForm.get('contactPhysicalAddressCounty').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                                  Customer Physical Address County is required\\r\\n                                </small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>State:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <ng-select [items]=\\\"lstStates\\\"\\r\\n                                           placeholder=\\\"Select State\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\" formControlName=\\\"contactPhysicalAddressState\\\"\\r\\n                                           [ngClass]=\\\"{'is-invalid': (contactPhysicalAddressState.invalid && (contactPhysicalAddressState.dirty || contactPhysicalAddressState.touched) && (contactPhysicalAddressState.errors?.required || contactPhysicalAddressState.errors?.maxlength)) }\\\">\\r\\n                                </ng-select>\\r\\n                                <small *ngIf=\\\"contactForm.get('contactPhysicalAddressState').touched && contactForm.get('contactPhysicalAddressState').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                                  Customer Physical Address State is required\\r\\n                                </small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>Zip:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contactPhysicalAddressZip\\\" maxlength=\\\"50\\\"\\r\\n                                       [ngClass]=\\\"{'is-invalid': (contactPhysicalAddressZip.invalid && (contactPhysicalAddressZip.dirty || contactPhysicalAddressZip.touched) && (contactPhysicalAddressZip.errors?.required || contactPhysicalAddressZip.errors?.maxlength)) }\\\">\\r\\n                                <small *ngIf=\\\"contactForm.get('contactPhysicalAddressZip').touched && contactForm.get('contactPhysicalAddressZip').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                                  Customer Physical Address Zip is required\\r\\n                                </small>\\r\\n                                <small *ngIf=\\\"contactPhysicalAddressZip.invalid && (contactPhysicalAddressZip.dirty || contactPhysicalAddressZip.touched) && contactPhysicalAddressZip.errors?.maxlength\\\"\\r\\n                                       class=\\\"text-danger\\\">Zip can not be greater than 5 characters.</small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <div class=\\\"custom-checkbox\\\">\\r\\n                                <label class=\\\"mr-3\\\">Physical Address:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                              </div>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <textarea class=\\\"form-control\\\" formControlName=\\\"contactBussinessPhysicalAddress\\\" maxlength=\\\"1000\\\"\\r\\n                                          [ngClass]=\\\"{'is-invalid': (contactBussinessPhysicalAddress.invalid && (contactBussinessPhysicalAddress.dirty || contactBussinessPhysicalAddress.touched) && (contactBussinessPhysicalAddress.errors?.required || contactBussinessPhysicalAddress.errors?.maxlength)) }\\\"></textarea>\\r\\n                                <small *ngIf=\\\"contactForm.get('contactBussinessPhysicalAddress').touched && contactForm.get('contactBussinessPhysicalAddress').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                                  Customer Business Physical Address is required\\r\\n                                </small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"panel panel-default mb-2\\\">\\r\\n                      <div class=\\\"panel-heading\\\" role=\\\"tab\\\" id=\\\"headingTwo\\\">\\r\\n                        <h4 class=\\\"panel-title mb-0\\\">\\r\\n                          <a class=\\\"collapsed\\\" id=\\\"secondAccordianAnch\\\" role=\\\"button\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#collapseTwo\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseTwo\\\">\\r\\n                            GUARANTOR INFORMATION\\r\\n                          </a>\\r\\n                        </h4>\\r\\n                      </div>\\r\\n                      <div id=\\\"collapseTwo\\\" class=\\\"panel-collapse collapse\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"headingTwo\\\">\\r\\n                        <!-- list of guarantors -->\\r\\n                        <div formArrayName=\\\"guarantors\\\" class=\\\"panel-body bg-light p-3 d-inline-block\\\">\\r\\n                          <div *ngFor=\\\"let guarantor of guarantors.controls; let i=index\\\">\\r\\n                            <div class=\\\"text-right\\\">\\r\\n                              <a *ngIf=\\\"contactForm.controls.guarantors.controls.length > 1\\\"\\r\\n                                 (click)=\\\"removeGuarantor(i,guarantor.get('guarantorID').value)\\\"\\r\\n                                 class=\\\"bg-danger px-3 py-2 text-white cursor-pointer\\\">\\r\\n                                <i class=\\\"fa fa-trash\\\" title=\\\"Delete\\\"></i>\\r\\n                              </a>\\r\\n                            </div>\\r\\n\\r\\n                            <div [formGroupName]=\\\"i\\\" class=\\\"border p-3 mb-4 bg-white\\\">\\r\\n                              <guarantor [group]=\\\"contactForm.controls.guarantors.controls[i]\\\" [states]=\\\"lstStates\\\" [isDisabled]=\\\"disabled\\\"></guarantor>\\r\\n\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <small *ngIf=\\\"addOrUpdatePermission\\\" class=\\\"float-right btn btn-success text-white mb-md-2\\\" (click)=\\\"addGuarantor()\\\"><i class=\\\"fa fa-plus mr-1\\\"></i> Add More</small>\\r\\n                        </div>\\r\\n\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"panel panel-default mb-2\\\">\\r\\n                      <div class=\\\"panel-heading\\\" role=\\\"tab\\\" id=\\\"headingThree\\\">\\r\\n                        <h4 class=\\\"panel-title mb-0\\\">\\r\\n                          <a class=\\\"collapsed\\\" id=\\\"thirdAccordianAnch\\\" role=\\\"button\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#collapseThree\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseThree\\\">\\r\\n                            INSURANCE INFORMATION\\r\\n                          </a>\\r\\n                        </h4>\\r\\n                      </div>\\r\\n                      <div id=\\\"collapseThree\\\" class=\\\"panel-collapse collapse\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"headingThree\\\">\\r\\n                        <!--<div [formGroupName]=\\\"insurances\\\" class=\\\"panel-body bg-light p-3\\\">-->\\r\\n                          <!--<insurance [group]=\\\"contactForm.controls.insurances.controls[0]\\\" [states]=\\\"lstStates\\\"></insurance>-->\\r\\n                        <!--</div>-->\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n\\r\\n                    <div class=\\\"panel panel-default mb-2\\\">\\r\\n                      <div class=\\\"panel-heading\\\" role=\\\"tab\\\" id=\\\"headingSix\\\">\\r\\n                        <h4 class=\\\"panel-title mb-0\\\">\\r\\n                          <a role=\\\"button\\\" class=\\\"collapsed\\\" id=\\\"sixAccordianAnch\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#collapseSix\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseSix\\\">\\r\\n                            BANK INFORMATION\\r\\n                          </a>\\r\\n                        </h4> \\r\\n                      </div>\\r\\n                      <div id=\\\"collapseSix\\\" class=\\\"panel-collapse collapse\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"headingSix\\\">\\r\\n                        <div class=\\\"panel-body bg-light p-3\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>Bank Name:</label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contactBankName\\\" maxlength=\\\"100\\\" placeholder=\\\"Enter Bank Name\\\"\\r\\n                                       [ngClass]=\\\"{'is-invalid': (contactBankName.invalid && (contactBankName.dirty || contactBankName.touched) && (contactBankName.errors?.required || contactBankName.errors?.maxlength)) }\\\">\\r\\n                                <small *ngIf=\\\"contactForm.get('contactBankName').touched && contactForm.get('contactBankName').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                                  Bank Name is required\\r\\n                                </small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>City:</label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter City\\\" formControlName=\\\"contactBankCity\\\"\\r\\n                                       [ngClass]=\\\"{'is-invalid': (contactBankCity.invalid && (contactBankCity.dirty || contactBankCity.touched) && (contactBankCity.errors?.required || contactBankCity.errors?.maxlength)) }\\\">\\r\\n                                <small *ngIf=\\\"contactBankCity.invalid && (contactBankCity.dirty || contactBankCity.touched) && contactBankCity.errors?.required\\\"\\r\\n                                       class=\\\"text-danger\\\">City is required</small>\\r\\n                                <small *ngIf=\\\"contactBankCity.invalid && (contactBankCity.dirty || contactBankCity.touched) && contactBankCity.errors?.maxlength\\\"\\r\\n                                       class=\\\"text-danger\\\">City name must be less than 100 characters.</small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>County:</label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter County\\\"\\r\\n                                       formControlName=\\\"contactBankCounty\\\"\\r\\n                                       [ngClass]=\\\"{'is-invalid': (contactBankCounty.invalid && (contactBankCounty.dirty || contactBankCounty.touched) && (contactBankCounty.errors?.required || contactBankCounty.errors?.maxlength)) }\\\">\\r\\n                                <small *ngIf=\\\"contactBankCounty.invalid && (contactBankCounty.dirty || contactBankCounty.touched) && contactBankCounty.errors?.required\\\"\\r\\n                                       class=\\\"text-danger\\\">County is required</small>\\r\\n                                <small *ngIf=\\\"contactBankCounty.invalid && (contactBankCounty.dirty || contactBankCounty.touched) && contactBankCounty.errors?.maxlength\\\"\\r\\n                                       class=\\\"text-danger\\\">County must be less than 100 characters.</small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>State:</label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <!--<ng-select [items]=\\\"lstStates\\\" [loading]=\\\"loadSave\\\" placeholder=\\\"Select State\\\" formControlName=\\\"contactBankState\\\"\\r\\n                bindValue=\\\"value\\\" bindLabel=\\\"text\\\"\\r\\n                 [ngClass]=\\\"{'is-invalid': (contactBankState.invalid && (contactBankState.dirty || contactBankState.touched) && contactBankState.errors?.required) }\\\"></ng-select>\\r\\n      <small *ngIf=\\\"contactBankState.invalid && (contactBankState.dirty || contactBankState.touched) && contactBankState.errors?.required\\\" class=\\\"text-danger\\\">Please select State</small>-->\\r\\n                                <ng-select [items]=\\\"lstStates\\\"\\r\\n                                           placeholder=\\\"Select State\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\" formControlName=\\\"contactBankState\\\"\\r\\n                                           [ngClass]=\\\"{'is-invalid': (contactBankState.invalid && (contactBankState.dirty || contactBankState.touched) && (contactBankState.errors?.required || contactBankState.errors?.maxlength)) }\\\">\\r\\n                                </ng-select>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>Zip Code:</label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Zip Code\\\" formControlName=\\\"contactBankZipcode\\\"\\r\\n                                       [ngClass]=\\\"{'is-invalid': (contactBankZipcode.invalid && (contactBankZipcode.dirty || contactBankZipcode.touched) && (contactBankZipcode.errors?.required || contactBankZipcode.errors?.maxlength)) }\\\">\\r\\n                                <small *ngIf=\\\"contactBankZipcode.invalid && (contactBankZipcode.dirty || contactBankZipcode.touched) && contactBankZipcode.errors?.required\\\"\\r\\n                                       class=\\\"text-danger\\\">Zip Code is required</small>\\r\\n                                <small *ngIf=\\\"contactBankZipcode.invalid && (contactBankZipcode.dirty || contactBankZipcode.touched) && contactBankZipcode.errors?.maxlength\\\"\\r\\n                                       class=\\\"text-danger\\\">Zip Code can not be greater than 5 characters.</small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>Bank Routing Number:</label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contactBankRoutingNumber\\\"\\r\\n                                       maxlength=\\\"100\\\" placeholder=\\\"Enter Bank Routing Number\\\"\\r\\n                                       [ngClass]=\\\"{'is-invalid': (contactBankRoutingNumber.invalid && (contactBankRoutingNumber.dirty || contactBankRoutingNumber.touched) && (contactBankRoutingNumber.errors?.required || contactBankRoutingNumber.errors?.maxlength)) }\\\">\\r\\n                                <small *ngIf=\\\"contactForm.get('contactBankRoutingNumber').touched && contactForm.get('contactBankRoutingNumber').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                                  Bank Routing Number is required\\r\\n                                </small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>Bank Account Number:</label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contactBankAccountNum\\\"\\r\\n                                       maxlength=\\\"100\\\" placeholder=\\\"Enter Bank Account Number\\\"\\r\\n                                       [ngClass]=\\\"{'is-invalid': (contactBankAccountNum.invalid && (contactBankAccountNum.dirty || contactBankAccountNum.touched) && (contactBankAccountNum.errors?.required || contactBankAccountNum.errors?.maxlength)) }\\\">\\r\\n                                <small *ngIf=\\\"contactForm.get('contactBankAccountNum').touched && contactForm.get('contactBankAccountNum').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n                                  Bank Account Number is required\\r\\n                                </small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n                              <label>Bank Address:</label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <textarea type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contactBankAddress\\\"\\r\\n                                          maxlength=\\\"500\\\" placeholder=\\\"Enter Bank Address\\\"></textarea>\\r\\n                                <!--<input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contactBankAddress\\\" maxlength=\\\"500\\\"\\r\\n             [ngClass]=\\\"{'is-invalid': (contactBankAddress.invalid && (contactBankAddress.dirty || contactBankAddress.touched) && (contactBankAddress.errors?.required || contactBankAddress.errors?.maxlength)) }\\\">\\r\\n      <small *ngIf=\\\"contactForm.get('contactBankAddress').touched && contactForm.get('contactBankAddress').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n        Bank Address is required\\r\\n      </small>-->\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"panel panel-default mb-2\\\" *ngIf=\\\"contactForm.get('contactId').value!=null\\\">\\r\\n                      <div class=\\\"panel-heading\\\" role=\\\"tab\\\" id=\\\"headingFour\\\">\\r\\n                        <h4 class=\\\"panel-title mb-0\\\">\\r\\n                          <a class=\\\"collapsed\\\" role=\\\"button\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#collapseFour\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseFour\\\">\\r\\n                            NOTES\\r\\n                          </a>\\r\\n                        </h4>\\r\\n                      </div>\\r\\n                      <div id=\\\"collapseFour\\\" class=\\\"panel-collapse collapse\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"headingFour\\\">\\r\\n                        <div class=\\\"panel-body bg-light p-3\\\">\\r\\n                          <app-notes-partial-view [contactId]=\\\"contactForm.get('contactId').value\\\" [addOrUpdatePermission]=\\\"addPermission\\\"></app-notes-partial-view>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"panel panel-default mb-2\\\" *ngIf=\\\"contactForm.get('contactId').value!=null\\\">\\r\\n                      <div class=\\\"panel-heading\\\" role=\\\"tab\\\" id=\\\"headingFive\\\">\\r\\n                        <h4 class=\\\"panel-title mb-0\\\">\\r\\n                          <a class=\\\"collapsed\\\" role=\\\"button\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#collapseFive\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseFive\\\">\\r\\n                            UPLOAD CUSTOMER DOCUMENT \\r\\n                          </a>\\r\\n                        </h4>\\r\\n                      </div>\\r\\n                      <div id=\\\"collapseFive\\\" class=\\\"panel-collapse collapse\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"headingFive\\\">\\r\\n                        <div class=\\\"panel-body bg-light p-3\\\">\\r\\n                          <app-upload [contactId]=\\\"contactForm.get('contactId').value\\\"\\r\\n                                      [prefixNameOfDocument]=\\\"contactForm.get('contactFirstName').value+' '+contactForm.get('contactLastName').value\\\" calledFrom=\\\"contact\\\"></app-upload>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n              </form>\\r\\n              <div class=\\\"col-12 p-0\\\">\\r\\n\\r\\n                <!--*ngIf=\\\"addOrUpdatePermission\\\"  ---- Kiran - commented on 24 oct 2019-->\\r\\n                <a href=\\\"javascript:void(0);\\\" *ngIf=\\\"addOrUpdatePermission\\\" class=\\\"btn btn-success form-btns\\\" (click)=\\\"saveContactForm()\\\">\\r\\n                  <i class=\\\"fa fa-save\\\"></i> Submit\\r\\n                </a>\\r\\n                <a href=\\\"javascript:void(0);\\\" class=\\\"btn btn-danger form-btns\\\" (click)=\\\"cancelForm()\\\"><i class=\\\"fa fa-times\\\"></i> Cancel</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </section>\\r\\n  <app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader\\\"></app-loader>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"col-12\\\">\\r\\n  <ng-template #addContact>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title\\\">Add Customer Position</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modalRef.hide()\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\" style=\\\"overflow:auto; margin-bottom:10px;\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12 col-md-6 col-lg-6\\\">\\r\\n          <label>Customer Position:<span class=\\\"text-danger\\\">*</span></label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]='masterValue' (keypress)=\\\"onKeyPress($event)\\\" />\\r\\n            <label *ngIf=\\\"validcontact\\\" style=\\\"color:red;\\\">\\r\\n              Customer Position is Required\\r\\n            </label>\\r\\n\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n      </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success form-btns\\\" data-dismiss=\\\"modal\\\" (click)=\\\"saveContactInMaster()\\\" aria-label=\\\"Close\\\"><i class=\\\"fa fa-save\\\"></i> Submit</button>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-danger form-btns\\\" data-dismiss=\\\"modal\\\" (click)=\\\"modalRef.hide()\\\" aria-label=\\\"Close\\\"><i class=\\\"fa fa-times text-white\\\"></i> Cancel</button>\\r\\n    </div>\\r\\n    <app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader-popup\\\"></app-loader>\\r\\n    <!--</div>\\r\\n      </div>\\r\\n    </div>-->\\r\\n  </ng-template>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-12\\\">\\r\\n  <ng-template #typeOfCompany>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title\\\">Add Type Of Company</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modalRef.hide()\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\" style=\\\"overflow:auto; margin-bottom:10px;\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12 col-md-6 col-lg-6\\\">\\r\\n          <label>Type of Company:<span class=\\\"text-danger\\\">*</span></label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]='addCompany' (keypress)=\\\"onKeyPress($event)\\\" />\\r\\n            <label *ngIf=\\\"validcontact\\\" style=\\\"color:red;\\\">\\r\\n              Type of Company is Required\\r\\n            </label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success form-btns\\\" data-dismiss=\\\"modal\\\" (click)=\\\"saveCompanyInMaster()\\\" aria-label=\\\"Close\\\"><i class=\\\"fa fa-save\\\"></i> Submit</button>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-danger form-btns\\\" data-dismiss=\\\"modal\\\" (click)=\\\"modalRef.hide()\\\" aria-label=\\\"Close\\\"><i class=\\\"fa fa-times text-white\\\"></i> Cancel</button>\\r\\n    </div>\\r\\n    <app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader-popup\\\"></app-loader>\\r\\n  </ng-template>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","export default \"<div class=\\\"page\\\">\\r\\n  <!-- Breadcrumb-->\\r\\n  <div class=\\\"breadcrumb-holder\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12 mt-3\\\">\\r\\n          <span class=\\\"dash\\\">Manage Customer</span>\\r\\n          <ul class=\\\"breadcrumb\\\">\\r\\n            <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/dashboard\\\">Dashboard</a></li>\\r\\n            <li class=\\\"breadcrumb-item active\\\">Manage Customer</li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>       <!-- Header Section-->\\r\\n  <div class=\\\"dashboard-header section-padding\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row d-flex align-items-md-stretch\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <div class=\\\"bg-white custom-shadow\\\">\\r\\n            <div class=\\\"col-md-12 border-bottom py-3\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12 col-lg-12 col-xl-12\\\">\\r\\n                  <div class=\\\"row mx-0 custom-top-padding\\\">\\r\\n                    <div class=\\\"col-12 col-md-12 col-lg-6 col-xl-3\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <p-calendar inputStyleClass=\\\"form-control start-date\\\" placeholder=\\\"From\\\" [(ngModel)]=\\\"From\\\" [maxDate]=\\\"To\\\" [readonlyInput]=\\\"true\\\" showButtonBar=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"2000:2030\\\"></p-calendar>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-12 col-md-12 col-lg-6 col-xl-3\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <p-calendar inputStyleClass=\\\"form-control start-date\\\" placeholder=\\\"To\\\" [(ngModel)]=\\\"To\\\" [minDate]=\\\"From\\\" [readonlyInput]=\\\"true\\\" showButtonBar=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"2000:2030\\\"></p-calendar>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-12 col-md-12 col-lg-12 col-xl-4\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]='listFilter' placeholder=\\\"Search by Business Name/Customer Name\\\" (keyup)='updateFilter($event)'>\\r\\n                        <input type=\\\"button\\\" class=\\\"btn src-icon\\\" (click)=\\\"search()\\\" value=\\\"Search\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-12 col-md-12 col-lg-3 col-xl-2 mr-auto\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n\\r\\n                        <input type=\\\"button\\\" class=\\\"btn btn-danger reset-icon\\\" value=\\\"Reset\\\" (click)=\\\"reset()\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-12 col-md-12 col-lg-9 col-xl-12 text-md-left text-lg-right text-xl-left float-right\\\"\\r\\n                         *ngIf='modulePermission!==null && modulePermission.roleModuleAddFlag'>\\r\\n                      <a routerLink=\\\"/contact/addcontact\\\" class=\\\"btn btn-success form-btns mb-md-2\\\"><i class=\\\"fa fa-plus\\\"></i> Add Customer</a>\\r\\n                      <a routerLink=\\\"/contact/welcomepackage\\\" class=\\\"btn btn-secondary form-btns mb-md-2\\\"><i class=\\\"fa fa-archive\\\"></i> Generate Welcome Package</a>\\r\\n                      <a *ngIf=\\\"user\\\" routerLink=\\\"/customerbulkupload\\\" class=\\\"btn btn-dark form-btns mb-md-2\\\"><i class=\\\"fa fa-upload\\\"></i>Customer Bulk Upload</a>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"\\\">\\r\\n              <div class=\\\"table-responsive\\\">\\r\\n                <div class=\\\"table table-striped\\\">\\r\\n                  <ngx-datatable  #table class=\\\"bootstrap table table-hover table-dynamic\\\"\\r\\n                                 [rows]=\\\"pagedData.data\\\"\\r\\n                                 [columnMode]=\\\"'force'\\\"\\r\\n                                 [headerHeight]=\\\"40\\\"\\r\\n                                    [scrollbarH]=\\\"true\\\"\\r\\n                       [rowHeight]=\\\"'40'\\\"\\r\\n                                 [footerHeight]=\\\"40\\\"\\r\\n                                 \\r\\n                                 [externalPaging]=\\\"true\\\"\\r\\n                                 [externalSorting]=\\\"true\\\"\\r\\n                                 [loadingIndicator]=\\\"loadSave\\\"\\r\\n                                 [count]=\\\"pagedData.pager.totalItems\\\"\\r\\n                                 [offset]=\\\"pagedData.pager.currentPage\\\"\\r\\n                                 [limit]=\\\"pagedData.pager.pageSize\\\"\\r\\n                                 (page)='setPage($event)'\\r\\n                                 (sort)=\\\"onSort($event)\\\">\\r\\n                    <ngx-datatable-column name=\\\"Business Name\\\" prop=\\\"ContactBussinessName\\\" [sortable]=\\\"true\\\" headerClass=\\\"thead-dark\\\" *ngIf='modulePermission!==null && modulePermission.roleModuleReadFlag'>\\r\\n                      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                        <div *ngIf=\\\"loginuserid!==row.ContactId\\\">\\r\\n                          <a [routerLink]=\\\"['/contact/edit',row.ContactId]\\\">{{row.ContactBussinessName }}</a>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n                    </ngx-datatable-column>\\r\\n                    <ngx-datatable-column name=\\\"Business Name\\\" prop=\\\"ContactBussinessName\\\" [sortable]=\\\"true\\\"\\r\\n                                          *ngIf='modulePermission!==null && !modulePermission.roleModuleReadFlag'></ngx-datatable-column>\\r\\n                    <ngx-datatable-column name=\\\"Customer Name\\\" prop=\\\"Name\\\" [sortable]=\\\"true\\\" headerClass=\\\"thead-dark\\\"></ngx-datatable-column>\\r\\n                    <ngx-datatable-column name=\\\"Customer Email\\\" prop=\\\"ContactEmail\\\" [sortable]=\\\"true\\\" headerClass=\\\"thead-dark\\\">\\r\\n                      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                        <div title=\\\"{{row.ContactEmail}}\\\">\\r\\n                          {{row.ContactEmail }}\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n                    </ngx-datatable-column>\\r\\n\\r\\n                    <ngx-datatable-column name=\\\"Business Address\\\" prop=\\\"ContactBussinessMailAddress\\\" [sortable]=\\\"true\\\" headerClass=\\\"thead-dark\\\"></ngx-datatable-column>\\r\\n                    <!--<ngx-datatable-column name=\\\"Created By\\\" prop=\\\"ContactCreatedBy\\\" [sortable]=\\\"true\\\" headerClass=\\\"thead-dark\\\"></ngx-datatable-column>-->\\r\\n                    <ngx-datatable-column name=\\\"Proposal\\\" prop=\\\"LeaseCount\\\" headerClass=\\\"thead-dark\\\" *ngIf=\\\"loginusertype=='usertype03'\\\">\\r\\n                      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                        <div *ngIf=\\\"row.LeaseCount===0 &&  moduleLeasePermission!==null && moduleLeasePermission.roleModuleAddFlag\\\">\\r\\n                          <a [routerLink]=\\\"['/lease/addlease']\\\" [queryParams]=\\\"{ contactid: row.ContactId}\\\">Add Proposal</a>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"row.LeaseCount>0 &&  moduleLeasePermission!==null && moduleLeasePermission.roleModuleReadFlag\\\">\\r\\n                          <a [routerLink]=\\\"['/lease']\\\" [queryParams]=\\\"{ contactid: row.ContactId}\\\">{{row.LeaseCount }}</a>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"row.LeaseCount>0 &&  moduleLeasePermission!==null && !moduleLeasePermission.roleModuleReadFlag\\\">\\r\\n                          {{row.LeaseCount }}\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n                    </ngx-datatable-column>\\r\\n                    <ngx-datatable-footer>\\r\\n                      <ng-template ngx-datatable-footer-template\\r\\n                                   let-rowCount=\\\"rowCount\\\"\\r\\n                                   let-pageSize=\\\"pageSize\\\"\\r\\n                                   let-selectedCount=\\\"selectedCount\\\"\\r\\n                                   let-currentPage=\\\"currentPage\\\"\\r\\n                                   let-offset=\\\"offset\\\"\\r\\n                                   let-isVisible=\\\"isVisible\\\">\\r\\n                        <div class=\\\"page-count\\\" style=\\\"max-width:170px;\\\">\\r\\n                          {{rowCount}} total\\r\\n                        </div>\\r\\n                        <div>\\r\\n                          <div style=\\\"color:black; margin-right:10px;\\\" class=\\\"page-size-record\\\">\\r\\n                            <span style=\\\"text-align:right; width:80px;vertical-align: middle;\\\">\\r\\n                              <ng-select [searchable]=\\\"false\\\" [items]=\\\"lstPageSize\\\" appendTo=\\\"body\\\" [(ngModel)]='pageSizeValue' dropzone=\\\"fixed\\\" [clearable]=\\\"false\\\" (change)=\\\"onChange($event)\\\" draggable=\\\"false\\\" [closeOnSelect]=\\\"true\\\"\\r\\n                                         bindLabel=\\\"text\\\" bindValue=\\\"text\\\"></ng-select>\\r\\n                            </span>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <datatable-pager [pagerLeftArrowIcon]=\\\"'fa fa-angle-double-left'\\\"\\r\\n                                         [pagerRightArrowIcon]=\\\"'fa fa-angle-double-right'\\\"\\r\\n                                         [pagerPreviousIcon]=\\\"'fa fa-angle-left'\\\"\\r\\n                                         [pagerNextIcon]=\\\"'fa fa-angle-right'\\\"\\r\\n                                         [page]=\\\"pagedData.pager.currentPage+1\\\"\\r\\n                                         [size]=\\\"pageSizeValue\\\"\\r\\n                                         [count]=\\\"pagedData.pager.totalItems\\\"\\r\\n                                         [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\r\\n                                         (change)=\\\"setPage($event)\\\">\\r\\n                        </datatable-pager>\\r\\n                      </ng-template>\\r\\n                    </ngx-datatable-footer>\\r\\n                  </ngx-datatable>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"  <div [formGroup]=\\\"guarantorForm\\\" class=\\\"row\\\">\\r\\n    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n      <label>Guarantor First Name:<span class=\\\"text-danger\\\">*</span></label>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"guarantorFirstName\\\" maxlength=\\\"100\\\">\\r\\n        <small *ngIf=\\\"guarantorForm.get('guarantorFirstName').touched && guarantorForm.get('guarantorFirstName').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n          Guarantor First Name is required\\r\\n        </small>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n      <label>Guarantor Last Name:<span class=\\\"text-danger\\\">*</span></label>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"guarantorLastName\\\" maxlength=\\\"100\\\">\\r\\n        <small *ngIf=\\\"guarantorForm.get('guarantorLastName').touched && guarantorForm.get('guarantorLastName').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n          Guarantor Last Name is required\\r\\n        </small>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n      <label>Guarantor Title:<span class=\\\"text-danger\\\">*</span></label>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"guarantorTitle\\\" maxlength=\\\"500\\\">\\r\\n        <small *ngIf=\\\"guarantorForm.get('guarantorTitle').touched && guarantorForm.get('guarantorTitle').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n          Guarantor Title is required\\r\\n        </small>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n      <label>Ownership%:<span class=\\\"text-danger\\\">*</span></label>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"guarantorOwnership\\\" maxlength=\\\"5\\\">\\r\\n        <small *ngIf=\\\"guarantorForm.get('guarantorOwnership').touched && guarantorForm.get('guarantorOwnership').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n          Guarantor Ownership is required\\r\\n        </small>\\r\\n        <small *ngIf=\\\"guarantorForm.get('guarantorOwnership').touched && guarantorForm.get('guarantorOwnership').errors?.pattern\\\"\\r\\n               class=\\\"text-danger\\\">Please enter valid ownership<br /></small>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 col-md-12 col-lg-12\\\">\\r\\n      <label>Guarantor Business Address:<span class=\\\"text-danger\\\">*</span></label>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <textarea class=\\\"form-control\\\" formControlName=\\\"guarantorBussinessAddress\\\" maxlength=\\\"1000\\\"></textarea>\\r\\n        <small *ngIf=\\\"guarantorForm.get('guarantorBussinessAddress').touched && guarantorForm.get('guarantorBussinessAddress').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n          Guarantor Bussiness Address is required\\r\\n        </small>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n      <label>City:<span class=\\\"text-danger\\\">*</span></label>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"guarantorBussinessCity\\\" maxlength=\\\"200\\\">\\r\\n        <small *ngIf=\\\"guarantorForm.get('guarantorBussinessCity').touched && guarantorForm.get('guarantorBussinessCity').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n          Guarantor Bussiness City is required\\r\\n        </small>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n      <label>State:<span class=\\\"text-danger\\\">*</span></label>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <ng-select [items]=\\\"states\\\"\\r\\n                   placeholder=\\\"Select State\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\" formControlName=\\\"guarantorBussinessState\\\" [disabled]=\\\"true\\\">\\r\\n        </ng-select>\\r\\n        <small *ngIf=\\\"guarantorForm.get('guarantorBussinessState').touched && guarantorForm.get('guarantorBussinessState').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n          Guarantor Bussiness State is required\\r\\n        </small>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n      <label>Zip:<span class=\\\"text-danger\\\">*</span></label>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"guarantorBussinessZip\\\" maxlength=\\\"50\\\">\\r\\n        <small *ngIf=\\\"guarantorForm.get('guarantorBussinessZip').touched && guarantorForm.get('guarantorBussinessZip').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n          Guarantor Bussiness Zip is required\\r\\n        </small>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n      <label>County:<span class=\\\"text-danger\\\">*</span></label>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"guarantorBussinessCounty\\\" maxlength=\\\"200\\\">\\r\\n        <small *ngIf=\\\"guarantorForm.get('guarantorBussinessCounty').touched && guarantorForm.get('guarantorBussinessCounty').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n          Guarantor Bussiness County is required\\r\\n        </small>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 col-md-12 col-lg-12\\\">\\r\\n      <label>Guarantor Home Address:<span class=\\\"text-danger\\\">*</span></label>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <textarea class=\\\"form-control\\\" formControlName=\\\"guarantorHomeAddress\\\" maxlength=\\\"1000\\\"></textarea>\\r\\n        <small *ngIf=\\\"guarantorForm.get('guarantorHomeAddress').touched && guarantorForm.get('guarantorHomeAddress').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n          Guarantor Home Address is required\\r\\n        </small>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n      <label>City:<span class=\\\"text-danger\\\">*</span></label>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"guarantorHomeCity\\\" maxlength=\\\"200\\\">\\r\\n        <small *ngIf=\\\"guarantorForm.get('guarantorHomeCity').touched && guarantorForm.get('guarantorHomeCity').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n          Guarantor Home City is required\\r\\n        </small>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n      <label>State:<span class=\\\"text-danger\\\">*</span></label>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <ng-select [items]=\\\"states\\\"\\r\\n                   placeholder=\\\"Select State\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\" formControlName=\\\"guarantorHomeState\\\">\\r\\n        </ng-select>\\r\\n        <small *ngIf=\\\"guarantorForm.get('guarantorHomeState').touched && guarantorForm.get('guarantorHomeState').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n          Guarantor Home State is required\\r\\n        </small>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n      <label>Zip:<span class=\\\"text-danger\\\">*</span></label>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"guarantorHomeZip\\\" maxlength=\\\"50\\\">\\r\\n        <small *ngIf=\\\"guarantorForm.get('guarantorHomeZip').touched && guarantorForm.get('guarantorHomeZip').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n          Guarantor Home Zip is required\\r\\n        </small>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n      <label>County:<span class=\\\"text-danger\\\">*</span></label>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"guarantorHomeCounty\\\" maxlength=\\\"200\\\">\\r\\n        <small *ngIf=\\\"guarantorForm.get('guarantorHomeCounty').touched && guarantorForm.get('guarantorHomeCounty').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n          Guarantor Home County is required\\r\\n        </small>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n      <label>Guarantor Phone:<span class=\\\"text-danger\\\">*</span></label>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"guarantorPhone\\\" maxlength=\\\"100\\\">\\r\\n        <small *ngIf=\\\"guarantorForm.get('guarantorPhone').touched && guarantorForm.get('guarantorPhone').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n          Guarantor Home Phone is required\\r\\n        </small>\\r\\n        <small *ngIf=\\\"guarantorForm.get('guarantorPhone').touched && guarantorForm.get('guarantorPhone').errors?.pattern\\\"\\r\\n               class=\\\"text-danger\\\">Please enter valid phone<br /></small>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n      <label>Guarantor Email:<span class=\\\"text-danger\\\">*</span></label>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"guarantorEmail\\\" maxlength=\\\"200\\\">\\r\\n        <small *ngIf=\\\"guarantorForm.get('guarantorEmail').touched && guarantorForm.get('guarantorEmail').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n          Guarantor Home Email is required\\r\\n        </small>\\r\\n        <small *ngIf=\\\"guarantorForm.get('guarantorEmail').touched && guarantorForm.get('guarantorEmail').errors?.email\\\" class=\\\"text-danger\\\">Please enter valid Email</small>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n      <label>Social Security#:</label>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"guarantorSocialNumber\\\" maxlength=\\\"100\\\">\\r\\n        <small *ngIf=\\\"guarantorForm.get('guarantorSocialNumber').touched && guarantorForm.get('guarantorSocialNumber').errors?.pattern\\\"\\r\\n               class=\\\"text-danger\\\">Please enter valid number<br /></small>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n      <label>Date of Birth:</label>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <p-calendar inputStyleClass=\\\"form-control start-date\\\" formControlName=\\\"guarantorFormattedDateOfBirth\\\" placeholder=\\\"Select Date of Birth\\\" [showTime]=\\\"false\\\"\\r\\n                    dateFormat=\\\"dd/mm/yy\\\"></p-calendar>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\"","export default \"<div [formGroup]=\\\"insuranceForm\\\" class=\\\"row\\\">\\r\\n  <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n    <label>Insurance Company Name:</label>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" maxlength=\\\"200\\\" [ngClass]=\\\"{'is-invalid': (name.invalid && (name.dirty || name.touched) && (name.errors?.required || name.errors?.maxlength)) }\\\">\\r\\n      <small *ngIf=\\\"insuranceForm.get('name').touched && insuranceForm.get('name').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n        Insurance Company Name is required\\r\\n      </small>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n  <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n    <label>Insurance Phone:</label>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <p-inputMask styleClass=\\\"form-control\\\" mask=\\\"(999) 999-9999\\\" formControlName=\\\"phone\\\" placeholder=\\\"(___) ___-____\\\">\\r\\n      </p-inputMask>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!--<div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n    <label>Insurance Phone:</label>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"phone\\\" maxlength=\\\"100\\\" [ngClass]=\\\"{'is-invalid': (phone.invalid && (phone.dirty || phone.touched) && (phone.errors?.required || phone.errors?.maxlength)) }\\\">\\r\\n      <small *ngIf=\\\"insuranceForm.get('phone').touched && insuranceForm.get('phone').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n        Insurance Phone is required\\r\\n      </small>\\r\\n      <small *ngIf=\\\"insuranceForm.get('phone').touched && insuranceForm.get('phone').errors?.pattern\\\"\\r\\n             class=\\\"text-danger\\\">Please enter valid phone<br /></small>\\r\\n    </div>\\r\\n  </div>-->\\r\\n\\r\\n  <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n    <label>Insurance Agent Name:</label>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"agentName\\\" maxlength=\\\"200\\\" [ngClass]=\\\"{'is-invalid': (agentName.invalid && (agentName.dirty || agentName.touched) && (agentName.errors?.required || agentName.errors?.maxlength)) }\\\">\\r\\n      <small *ngIf=\\\"insuranceForm.get('agentName').touched && insuranceForm.get('agentName').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n        Insurance Agent Name is required\\r\\n      </small>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n    <label>Insurance Agent Email:</label>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"agentEmail\\\" maxlength=\\\"200\\\" [ngClass]=\\\"{'is-invalid': (agentEmail.invalid && (agentEmail.dirty || agentName.touched) && (agentEmail.errors?.required || agentEmail.errors?.maxlength)) }\\\">\\r\\n      <small *ngIf=\\\"insuranceForm.get('agentEmail').touched && insuranceForm.get('agentEmail').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n        Insurance Agent Email is required\\r\\n      </small>\\r\\n      <small *ngIf=\\\"insuranceForm.get('agentEmail').touched && insuranceForm.get('agentEmail').errors?.email\\\" class=\\\"text-danger\\\">Please enter valid Email</small>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-12 col-md-12 col-lg-12\\\">\\r\\n    <label class=\\\"m-label-s\\\">Insurance Address:</label>\\r\\n    <hr size=\\\"4\\\" class=\\\"mt-0 border-secondary\\\">\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n    <label>Address</label>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <textarea class=\\\"form-control\\\" formControlName=\\\"address\\\" [ngClass]=\\\"{'is-invalid': (address.invalid && (address.dirty || address.touched) && (address.errors?.required || address.errors?.maxlength)) }\\\"></textarea>\\r\\n      <small *ngIf=\\\"insuranceForm.get('address').touched && insuranceForm.get('address').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n        Insurance Address is required\\r\\n      </small>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n    <label>City:</label>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"city\\\" maxlength=\\\"200\\\" [ngClass]=\\\"{'is-invalid': (city.invalid && (city.dirty || city.touched) && (city.errors?.required || city.errors?.maxlength)) }\\\">\\r\\n      <small *ngIf=\\\"insuranceForm.get('city').touched && insuranceForm.get('city').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n        City is required\\r\\n      </small>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n    <label>Insurance Agent County:</label>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"county\\\" maxlength=\\\"100\\\" [ngClass]=\\\"{'is-invalid': (county.invalid && (county.dirty || agentName.touched) && (county.errors?.required || county.errors?.maxlength)) }\\\">\\r\\n      <small *ngIf=\\\"insuranceForm.get('county').touched && insuranceForm.get('county').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n        Insurance Agent County is required\\r\\n      </small>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n    <label>State:</label>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <ng-select [items]=\\\"states\\\"\\r\\n                 placeholder=\\\"Select State\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\" formControlName=\\\"state\\\" [ngClass]=\\\"{'is-invalid': (state.invalid && (state.dirty || state.touched) && (state.errors?.required || state.errors?.maxlength)) }\\\">\\r\\n      </ng-select>\\r\\n      <small *ngIf=\\\"insuranceForm.get('state').touched && insuranceForm.get('state').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n        State is required\\r\\n      </small>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n    <label>Zip:</label>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"zipCode\\\" [ngClass]=\\\"{'is-invalid': (zipCode.invalid && (zipCode.dirty || zipCode.touched) && (zipCode.errors?.required || zipCode.errors?.maxlength)) }\\\">\\r\\n      <small *ngIf=\\\"insuranceForm.get('zipCode').touched && insuranceForm.get('zipCode').errors?.required\\\" class=\\\"text-danger\\\">\\r\\n        Zip is required\\r\\n      </small>\\r\\n      <small *ngIf=\\\"zipCode.invalid && (zipCode.dirty || zipCode.touched) && zipCode.errors?.maxlength\\\"\\r\\n             class=\\\"text-danger\\\">Zip can not be greater than 5 characters.</small>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-12 col-md-12 col-lg-12\\\">\\r\\n    <div class=\\\"alert alert-info mt-2\\\">Insurance Company Name and Insurance Agent Email are required to fill if you enter insurance address details</div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2NvbnRhY3QvYWRkZWRpdGNvbnRhY3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { CommonService, ModuleList } from '../shared/common.service';\r\nimport { ContactService, Guarantor, ContactForm } from './contact.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ConfirmationDialogService } from '../shared/confirmation-dialog/confirmation-dialog.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { EqualValidator } from '../shared/custom-validation/equal-validator';\r\nimport {  BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { tblMasterModel, MasterService } from '../master/master.service';\r\n\r\n@Component({\r\n  selector: 'app-addeditcontact',\r\n  templateUrl: './addeditcontact.component.html',\r\n  styleUrls: ['./addeditcontact.component.scss']\r\n})\r\nexport class AddeditcontactComponent implements OnInit {\r\n  public contactForm: FormGroup;\r\n  lstcontactPosition: any;\r\n  lstcompanyType: any;\r\n  loadSave = false;\r\n  lstStates: any;\r\n  isLoading = false;\r\n  contactCreatedOn: any;\r\n  firstName: any;\r\n  buissnessName: any;\r\n  lastName: any;\r\n  guarantorGroup = [];\r\n  pageTitle: string;\r\n  modulePermission: ModuleList;\r\n  addOrUpdatePermission: boolean;\r\n  addPermission: boolean;\r\n  disabled = null;\r\n  isLeaseCreated = false;\r\n  duplicateContactTypeOfCompany: any;\r\n  companyName: string = null;\r\n  contactPos: string = null;\r\n  modalRef: BsModalRef;\r\n  master: tblMasterModel = new tblMasterModel();\r\n  masterValue: string;\r\n  addCompany: string;\r\n  validcontact = false;\r\n  BankId: string;\r\n  BankName: string;\r\n  BankAddress: string;\r\n  BankRoutingNumber: string;\r\n  BankAccountNum: string;\r\n  BankCity: string;\r\n  BankState: string;\r\n  BankCounty: string;\r\n  BankZipcode: string;\r\n  constructor(private _fb: FormBuilder, private modalService: BsModalService\r\n    , private masterService: MasterService\r\n    , private commonService: CommonService\r\n    , private contactService: ContactService\r\n    , private route: ActivatedRoute\r\n    , private dialogService: ConfirmationDialogService\r\n    , private router: Router\r\n    , private toaster: ToastrService) {\r\n    this.loadDropDowns();\r\n    this.loadStateDropdown();\r\n    this.addOrUpdatePermission = false;\r\n    this.addPermission = false;\r\n    const moduleCode = this.route.snapshot.data.moduleCode;\r\n    this.modulePermission = this.commonService.getPermission(moduleCode);\r\n    if (this.modulePermission != null)\r\n      this.addPermission = this.modulePermission.roleModuleAddFlag;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.pageTitle = 'Add Customer';\r\n\r\n    this.route.paramMap.subscribe(params => {\r\n      const id = params.get('id');\r\n      if (id) {\r\n        this.loadSave = true;\r\n       \r\n        this.fillContactForm(id);\r\n        \r\n      }\r\n      else {\r\n        this.pageTitle = 'Add Customer';\r\n        this.addOrUpdatePermission = this.modulePermission.roleModuleAddFlag;\r\n      }\r\n     \r\n      \r\n    }\r\n    );\r\n    this.contactForm = this._fb.group({\r\n      contactId: [null],\r\n      contactBussinessName: ['', [Validators.required]],\r\n      contactBussinessMailAddress: ['', Validators.required],\r\n      contactMailAddressCity: ['', Validators.required],\r\n      contactMailAddressState: [null, Validators.required],\r\n      contactMailAddressZip: ['', [Validators.required, Validators.maxLength(5)]],\r\n      contactMailAddressCounty: ['', Validators.required],\r\n      contactBussinessPhysicalAddress: ['', Validators.required],\r\n      contactPhysicalAddressCity: ['', Validators.required],\r\n      contactPhysicalAddressState: [null, Validators.required],\r\n      contactPhysicalAddressZip: ['', [Validators.required, Validators.maxLength(5)]],\r\n      contactBussinessPhone: ['',Validators.required],\r\n      bussinessPhone: ['', Validators.required],\r\n      contactBussinessTIN: ['', Validators.required],\r\n      contactTypeOfCompany: [null, Validators.required],\r\n\r\n      contactFirstName: ['', Validators.required],\r\n      contactLastName: ['', Validators.required],\r\n      contactEmail: ['', [Validators.required, Validators.email]],\r\n      contactPosition: [null],\r\n      contactSocialSecurityNumber: [''],\r\n      contactPreferredDocumentSignedBy: 'DocuSign',\r\n      contactPhysicalAddressCounty: ['', Validators.required],\r\n      isLeaseCreated: [false],\r\n\r\n      // Contact Business Information\r\n      contactBankId:[null],\r\n      //contactBankName: ['', Validators.required],\r\n      //contactBankAddress: ['', Validators.required],\r\n      //contactBankRoutingNumber: ['', Validators.required],\r\n      //contactBankAccountNum: ['', Validators.required],\r\n      contactBankName: [''],\r\n      contactBankAddress: [''],\r\n      contactBankRoutingNumber: [''],\r\n      contactBankAccountNum: [''],\r\n      contactBankCity: [''],\r\n      contactBankState: [null],\r\n      contactBankCounty: [''],\r\n      contactBankZipcode: [''],\r\n\r\n      // Gurantors\r\n      guarantors: this._fb.array([\r\n        this.initGuarantor(),\r\n      ]),\r\n      insurances: this._fb.array([\r\n        this.initInsurance(),\r\n      ])\r\n    });\r\n    //alert(this.isLeaseCreated);\r\n    //if (this.isLeaseCreated == true) {\r\n    // // alert(\"hi\")\r\n    //  this.contactTypeOfCompany.disable();\r\n    //}\r\n   // alert(\"hi2222\")\r\n  }\r\n\r\n  fillContactForm(id: any) {\r\n\r\n    this.addOrUpdatePermission = this.modulePermission.roleModuleUpdateFlag;\r\n    this.contactService.getContactDetails(id).subscribe((res: ContactForm) => {\r\n      this.pageTitle = 'Edit Customer: ' + res.contactDetails[0].contactBussinessName;\r\n      this.isLeaseCreated = res.contactDetails[0].isLeaseCreated;\r\n      this.duplicateContactTypeOfCompany = res.contactDetails[0].contactTypeOfCompany;\r\n\r\n      if (this.isLeaseCreated == true) {\r\n        // alert(\"hi\")\r\n        this.contactTypeOfCompany.disable();\r\n      }\r\n\r\n      if (res.contactBankInfo[0] != null) {\r\n        this.BankId = res.contactBankInfo[0].contactBankId,\r\n        this.BankName = res.contactBankInfo[0].contactBankName,\r\n        this.BankAddress = res.contactBankInfo[0].contactBankAddress,\r\n        this.BankRoutingNumber= res.contactBankInfo[0].contactBankRoutingNumber,\r\n          this.BankAccountNum = res.contactBankInfo[0].contactBankAccountNum,\r\n\r\n        this.BankCity = res.contactBankInfo[0].contactBankCity,\r\n        this.BankState = res.contactBankInfo[0].contactBankState,\r\n        this.BankCounty = res.contactBankInfo[0].contactBankCounty,\r\n        this.BankZipcode = res.contactBankInfo[0].contactBankZipcode\r\n      }\r\n      \r\n\r\n      this.loadSave = false;\r\n      this.contactForm.patchValue({\r\n        contactId: res.contactDetails[0].contactId,\r\n        contactSocialSecurityNumber: res.contactDetails[0].contactSocialSecurityNumber,\r\n        contactBussinessName: res.contactDetails[0].contactBussinessName,\r\n        contactBussinessMailAddress: res.contactDetails[0].contactBussinessMailAddress,\r\n        contactMailAddressCity: res.contactDetails[0].contactMailAddressCity,\r\n        contactMailAddressState: res.contactDetails[0].contactMailAddressState,\r\n        contactMailAddressZip: res.contactDetails[0].contactMailAddressZip,\r\n        contactMailAddressCounty: res.contactDetails[0].contactMailAddressCounty,\r\n        contactBussinessPhysicalAddress: res.contactDetails[0].contactBussinessPhysicalAddress,\r\n        contactPhysicalAddressCity: res.contactDetails[0].contactPhysicalAddressCity,\r\n        contactPhysicalAddressState: res.contactDetails[0].contactPhysicalAddressState,\r\n        contactPhysicalAddressZip: res.contactDetails[0].contactPhysicalAddressZip,\r\n        contactBussinessPhone: res.contactDetails[0].contactBussinessPhone,\r\n        bussinessPhone: res.contactDetails[0].bussinessPhone,\r\n        contactBussinessTIN: res.contactDetails[0].contactBussinessTIN,\r\n        contactTypeOfCompany: res.contactDetails[0].contactTypeOfCompany,\r\n        contactFirstName: res.contactDetails[0].contactFirstName,\r\n        contactLastName: res.contactDetails[0].contactLastName,\r\n        contactEmail: res.contactDetails[0].contactEmail,\r\n        contactPosition: res.contactDetails[0].contactPosition,\r\n        contactCreatedOn: res.contactDetails[0].contactCreatedOn,\r\n        contactPreferredDocumentSignedBy: res.contactDetails[0].contactPreferredDocumentSignedBy,\r\n        contactPhysicalAddressCounty: res.contactDetails[0].contactPhysicalAddressCounty,\r\n\r\n        // Contact Bank Information\r\n        \r\n        contactBankId: this.BankId,\r\n        contactBankName:  this.BankName,\r\n        contactBankAddress: this.BankAddress,\r\n        contactBankRoutingNumber: this.BankRoutingNumber,\r\n        contactBankAccountNum: this.BankAccountNum,\r\n        contactBankCity: this.BankCity,\r\n        contactBankCounty: this.BankCity,\r\n        contactBankState: this.BankState,\r\n        contactBankZipcode: this.BankZipcode,\r\n        // Insurance\r\n        insurances: res.insuranceDetails,\r\n\r\n      });\r\n      \r\n      this.contactCreatedOn = res.contactDetails[0].contactCreatedOn;\r\n      this.buissnessName = res.contactDetails[0].contactBussinessName;\r\n      this.firstName = res.contactDetails[0].contactBussinessName;\r\n      this.lastName = res.contactDetails[0].contactLastName;\r\n      //this.isLeaseCreated = res.contactDetails[0].isLeaseCreated,\r\n      //this.duplicateContactTypeOfCompany = res.contactDetails[0].contactTypeOfCompany,\r\n\r\n      res.guarantors.forEach(m => {\r\n        this.guarantors.push(this.initdisplayGuarantor(m));\r\n      });\r\n      this.guarantors.removeAt(0);\r\n    },\r\n      (error: any) => {\r\n        this.loadSave = false;\r\n      });\r\n\r\n  }\r\n\r\n  initGuarantor() {\r\n    // initialize our guarantor\r\n    return this._fb.group({\r\n      guarantorID: [null],\r\n      guarantorFirstName: ['', Validators.required],\r\n      guarantorLastName: ['', Validators.required],\r\n      guarantorTitle: ['', Validators.required],\r\n      guarantorOwnership: ['', Validators.required],\r\n\r\n\r\n      guarantorBussinessAddress: ['', Validators.nullValidator],\r\n      guarantorBussinessCity: ['', Validators.nullValidator],\r\n      guarantorBussinessState: [null, Validators.nullValidator],\r\n      guarantorBussinessZip: ['', Validators.nullValidator], //Validators.maxLength(5)\r\n      guarantorBussinessCounty: ['', Validators.nullValidator],\r\n      guarantorHomeAddress: ['', Validators.required],\r\n      guarantorHomeCity: ['', Validators.required],\r\n      guarantorHomeState: [null, Validators.required],\r\n      guarantorHomeZip: ['', [Validators.required, Validators.maxLength(5)]],\r\n      guarantorHomeCounty: ['', Validators.required],\r\n      guarantorPhone: ['', Validators.required],\r\n      guarantorEmail: ['', [Validators.required, Validators.email]],\r\n      guarantorSocialNumber: [''],\r\n      guarantorFormattedDateOfBirth: [null],\r\n    }, {\r\n        validator: EqualValidator.percentage('guarantorOwnership')\r\n      });\r\n  }\r\n\r\n  initdisplayGuarantor(gurantor: Guarantor) {\r\n    return this._fb.group({\r\n      guarantorID: [gurantor.guarantorID],\r\n      guarantorFirstName: [gurantor.guarantorFirstName, Validators.required],\r\n      guarantorLastName: [gurantor.guarantorLastName, Validators.required],\r\n      guarantorTitle: [gurantor.guarantorTitle, Validators.required],\r\n      guarantorOwnership: [gurantor.guarantorOwnership, Validators.required],\r\n      guarantorBussinessAddress: [gurantor.guarantorBussinessAddress, Validators.nullValidator],\r\n      guarantorBussinessCity: [gurantor.guarantorBussinessCity, Validators.nullValidator],\r\n      guarantorBussinessState: [gurantor.guarantorBussinessState, Validators.nullValidator],\r\n      guarantorBussinessZip: [gurantor.guarantorBussinessZip, Validators.nullValidator],\r\n      guarantorBussinessCounty: [gurantor.guarantorBussinessCounty, Validators.nullValidator],\r\n      guarantorHomeAddress: [gurantor.guarantorHomeAddress, Validators.required],\r\n      guarantorHomeCity: [gurantor.guarantorHomeCity, Validators.required],\r\n      guarantorHomeState: [gurantor.guarantorHomeState, Validators.required],\r\n      guarantorHomeZip: [gurantor.guarantorHomeZip, Validators.required],\r\n      guarantorHomeCounty: [gurantor.guarantorHomeCounty, Validators.required],\r\n      guarantorPhone: [gurantor.guarantorPhone, Validators.required],\r\n      guarantorEmail: [gurantor.guarantorEmail, [Validators.required, Validators.email]],\r\n      guarantorSocialNumber: [gurantor.guarantorSocialNumber],\r\n      guarantorFormattedDateOfBirth: [gurantor.guarantorFormattedDateOfBirth],\r\n    }, {\r\n        validator: EqualValidator.percentage('guarantorOwnership')\r\n      });\r\n  }\r\n\r\n\r\n\r\n  initInsurance() {\r\n    return this._fb.group({\r\n      insuranceId: [null],\r\n      name: ['', Validators.nullValidator],\r\n      address: ['', Validators.nullValidator],\r\n      city: ['', Validators.nullValidator],\r\n      state: [null, Validators.nullValidator],\r\n      zipCode: ['', [Validators.nullValidator, Validators.maxLength(5)]],\r\n      phone: ['', Validators.nullValidator],\r\n      agentName: ['', Validators.nullValidator],\r\n      agentEmail: ['', [Validators.nullValidator, Validators.email]],\r\n      county: ['', Validators.nullValidator],\r\n    });\r\n  }\r\n\r\n  addGuarantor() {\r\n    // add guarantor to the list\r\n    const control = <FormArray>this.contactForm.controls['guarantors'];\r\n    control.push(this.initGuarantor());\r\n  }\r\n\r\n  removeGuarantor(i: number, id: any) {\r\n    // remove guarantor from the list\r\n    if (id != null) {\r\n      const message = `Are you sure you want to delete guarantor.?`;\r\n      this.dialogService.confirm('Delete Guarantor', message).subscribe(confirmed => {\r\n        if (confirmed) {\r\n          this.contactService.deleteGuarantor(id).subscribe((res: any) => {\r\n            if (res) {\r\n              const control = <FormArray>this.contactForm.controls['guarantors'];\r\n              control.removeAt(i);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      const control = <FormArray>this.contactForm.controls['guarantors'];\r\n      control.removeAt(i);\r\n    }\r\n  }\r\n  toggleEditable(event) {\r\n    if (event.target.checked) {\r\n      this.contactBussinessPhysicalAddress.setValue(this.contactBussinessMailAddress.value);\r\n      this.contactPhysicalAddressCounty.setValue(this.contactMailAddressCounty.value);\r\n      this.contactPhysicalAddressZip.setValue(this.contactMailAddressZip.value);\r\n      this.contactPhysicalAddressCity.setValue(this.contactMailAddressCity.value);\r\n      this.contactPhysicalAddressState.setValue(this.contactMailAddressState.value);\r\n      this.contactPhysicalAddressCounty.updateValueAndValidity();\r\n      this.contactBussinessPhysicalAddress.updateValueAndValidity();\r\n      this.contactPhysicalAddressZip.updateValueAndValidity();\r\n      this.contactPhysicalAddressCity.updateValueAndValidity();\r\n      this.contactPhysicalAddressState.updateValueAndValidity();\r\n    }\r\n    else {\r\n      this.contactPhysicalAddressCounty.setValue('');\r\n      this.contactBussinessPhysicalAddress.setValue('');\r\n      this.contactPhysicalAddressZip.setValue('');\r\n      this.contactPhysicalAddressCity.setValue('');\r\n      this.contactPhysicalAddressState.setValue(null);\r\n      this.contactPhysicalAddressCounty.updateValueAndValidity();\r\n      this.contactBussinessPhysicalAddress.updateValueAndValidity();\r\n      this.contactPhysicalAddressZip.updateValueAndValidity();\r\n      this.contactPhysicalAddressCity.updateValueAndValidity();\r\n      this.contactPhysicalAddressState.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  loadDropDowns() {\r\n    this.isLoading = true;\r\n    this.commonService.getMasterItemsList(\"BussinessContactPosition,CompanyType\").subscribe((result: any) => {\r\n      this.lstcontactPosition = this.commonService.masters.filter(x => x.masterName == \"BussinessContactPosition\");\r\n      this.lstcompanyType = this.commonService.masters.filter(x => x.masterName == \"CompanyType\");\r\n      if (this.companyName !== null) {\r\n        let company = this.lstcompanyType.find(m => m.text === this.companyName);\r\n        if (company) {\r\n          this.contactTypeOfCompany.setValue(company.value);\r\n        }\r\n      }\r\n      if (this.contactPos !== null) {\r\n        let contact = this.lstcontactPosition.find(m => m.text === this.contactPos);\r\n        if (contact) {\r\n          this.contactPosition.setValue(contact.value);\r\n        }\r\n      }\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  loadStateDropdown() {\r\n    this.commonService.getStatesList().subscribe(res => {\r\n      this.lstStates = this.commonService.states;\r\n    });\r\n  }\r\n  checkValidation() {\r\n    var elms1 = document.getElementById('collapseOne').querySelectorAll(\"input\");\r\n    for (var i = 0; i < elms1.length; i++) {\r\n      if (elms1[i].className.indexOf(\"is-invalid\") >= 0) {\r\n        elms1[i].scrollIntoView({ behavior: 'smooth', block: \"end\", inline: \"end\" });\r\n        if (document.getElementById(\"firstAccordianAnch\").className === 'collapsed') {\r\n          document.getElementById(\"firstAccordianAnch\").click();\r\n          setTimeout(function () {\r\n            var element = document.getElementById(\"firstAccordianAnch\");\r\n            element.classList.remove(\"collapsed\");\r\n          }, 200);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    var elms2 = document.getElementById('collapseTwo').querySelectorAll(\"input\");\r\n    for (var i = 0; i < elms2.length; i++) {\r\n      if (elms2[i].className.indexOf(\"is-invalid\") >= 0) {\r\n        elms2[i].scrollIntoView({ behavior: 'smooth', block: \"end\", inline: \"end\" });\r\n        if (document.getElementById(\"secondAccordianAnch\").className === 'collapsed') {\r\n          document.getElementById(\"secondAccordianAnch\").click();\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    var elms3 = document.getElementById('collapseThree').querySelectorAll(\"input\");\r\n    for (var i = 0; i < elms3.length; i++) {\r\n      if (elms3[i].className.indexOf(\"is-invalid\") >= 0) {\r\n        elms3[i].scrollIntoView({ behavior: 'smooth', block: \"end\", inline: \"end\" });\r\n        if (document.getElementById(\"thirdAccordianAnch\").className === 'collapsed') {\r\n          document.getElementById(\"thirdAccordianAnch\").click();\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    var elms1 = document.getElementById('collapseSix').querySelectorAll(\"input\");\r\n    for (var i = 0; i < elms1.length; i++) {\r\n      if (elms1[i].className.indexOf(\"is-invalid\") >= 0) {\r\n        elms1[i].scrollIntoView({ behavior: 'smooth', block: \"end\", inline: \"end\" });\r\n        if (document.getElementById(\"sixAccordianAnch\").className === 'collapsed') {\r\n          document.getElementById(\"sixAccordianAnch\").click();\r\n          setTimeout(function () {\r\n            var element = document.getElementById(\"sixAccordianAnch\");\r\n            element.classList.remove(\"collapsed\");\r\n          }, 200);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  saveContactForm() {\r\n    if (this.contactForm.valid) {\r\n      if (this.contactForm.value.insurances[0].agentName != '' || this.contactForm.value.insurances[0].phone != ''\r\n        || this.contactForm.value.insurances[0].address != '' || this.contactForm.value.insurances[0].city != ''\r\n        || this.contactForm.value.insurances[0].county != '' || this.contactForm.value.insurances[0].state != null\r\n        || this.contactForm.value.insurances[0].zipCode != '') {\r\n        /// alert('error')\r\n        if (this.contactForm.value.insurances[0].name == '') {\r\n          this.toaster.error(\"Please Enter Insurance Company name\");\r\n          return false;\r\n        }\r\n        else if (this.contactForm.value.insurances[0].agentEmail == '') {\r\n          this.toaster.error(\"Please Enter Insurance Agent Email\");\r\n          return false;\r\n        }\r\n      }\r\n      if (this.contactForm.value.insurances[0].name == '' && this.contactForm.value.insurances[0].agentEmail != '') {\r\n        this.toaster.error(\"Please Enter Insurance Company name\");\r\n        return false;\r\n      }\r\n      else if (this.contactForm.value.insurances[0].name != '' && this.contactForm.value.insurances[0].agentEmail == '') {\r\n        this.toaster.error(\"Please Enter Insurance Agent Email\");\r\n        return false;\r\n      }\r\n      if (this.contactForm.value.contactTypeOfCompany == null) {\r\n        //alert(this.duplicateContactTypeOfCompany);\r\n        this.contactForm.value.contactTypeOfCompany = this.duplicateContactTypeOfCompany;\r\n        //alert(this.contactForm.value.contactTypeOfCompany)\r\n      }\r\n      this.contactService.saveContactForm(this.contactForm.value).subscribe((res: any) => {\r\n        if (res.statusCode == 200) {\r\n          this.toaster.success(res.responseMessage);\r\n          this.router.navigateByUrl(\"/contact\");\r\n        }\r\n        else {\r\n          this.loadSave = false;\r\n          this.toaster.error(res.responseMessage);\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.commonService.validateAllFormFields(this.contactForm, false);\r\n      setTimeout(() => { this.checkValidation(); }, 500);\r\n    }\r\n  }\r\n\r\n  saveContactInMaster() {\r\n    if (this.masterValue != '') {\r\n      this.loadSave = true;\r\n      this.master.masterNameId = \"0DDD9CDA-CDE7-4466-A113-5770E39D203D\";\r\n      this.master.masterKey = \"~positionnum~\";\r\n      this.master.masterValue = this.masterValue;\r\n      this.master.masterStatusId = \"\";\r\n      this.contactPos = this.masterValue;\r\n      this.master.masterIsDeleted = false;\r\n      this.master.masterDescription = this.masterValue;\r\n      this.masterService.AddManageMaster(this.master).subscribe((result: any) => {\r\n        if (result.statusCode == 201) {\r\n          this.toaster.error(`Duplicate Customer Position`);\r\n          this.loadSave = false;\r\n        }\r\n        else if (result.statusCode == 200) {\r\n          this.loadDropDowns();\r\n          this.toaster.success(`Customer Position has been added successfully`);\r\n          setTimeout(() => { this.loadSave = false; }, 1000);\r\n          this.modalRef.hide();\r\n        }\r\n        else {\r\n          this.loadSave = false;\r\n          this.toaster.error(result.responseMessage);\r\n        }\r\n      }, error => {\r\n        this.loadSave = false;\r\n      });\r\n    }\r\n    else {\r\n      this.validcontact = true;\r\n    }\r\n  }\r\n\r\n  onKeyPress(event: any) {\r\n\r\n    this.validcontact = false;\r\n  }\r\n\r\n  saveCompanyInMaster() {\r\n    if (this.addCompany != '') {\r\n      this.loadSave = true;\r\n      this.master.masterNameId = \"6883630C-493B-49B0-AC0F-295B2875AFFD\";\r\n      this.master.masterKey = \"~companytypenum~\";\r\n      this.master.masterValue = this.addCompany;\r\n      this.companyName = this.addCompany;\r\n      this.master.masterStatusId = \"\";\r\n      this.master.masterIsDeleted = false;\r\n      this.master.masterDescription = this.addCompany;\r\n      this.masterService.AddManageMaster(this.master).subscribe((result: any) => {\r\n        if (result.statusCode == 201) {\r\n          this.toaster.error(`Duplicate Type of Company`);\r\n          this.loadSave = false;\r\n        }\r\n        else if (result.statusCode == 200) {\r\n          this.loadDropDowns();\r\n          this.toaster.success(`Type of company has been added successfully`);\r\n\r\n          setTimeout(() => { this.loadSave = false; }, 1000);\r\n          this.modalRef.hide();\r\n        }\r\n        else {\r\n          this.loadSave = false;\r\n          this.toaster.error(result.responseMessage);\r\n        }\r\n      }, error => {\r\n        this.loadSave = false;\r\n      });\r\n    }\r\n    else {\r\n      this.validcontact = true;\r\n    }\r\n  }\r\n\r\n\r\n  cancelForm() {\r\n    this.router.navigateByUrl(\"/contact\");\r\n  }\r\n  get guarantors(): FormArray {\r\n    return <FormArray>this.contactForm.get('guarantors');\r\n  }\r\n\r\n  addContactPosition(template: TemplateRef<any>) {\r\n    this.masterValue = \"\";\r\n    this.validcontact = false;\r\n    this.modalRef = this.modalService.show(template);\r\n  }\r\n  addTypeOfComp(template: TemplateRef<any>) {\r\n    this.addCompany = \"\";\r\n    this.validcontact = false;\r\n    this.modalRef = this.modalService.show(template);\r\n  }\r\n\r\n  get contactBussinessName() { return this.contactForm.get('contactBussinessName'); }\r\n  get contactBussinessTIN() { return this.contactForm.get('contactBussinessTIN'); }\r\n  get contactTypeOfCompany() { return this.contactForm.get('contactTypeOfCompany'); }\r\n  get contactPosition() { return this.contactForm.get('contactPosition'); }\r\n  get contactBussinessMailAddress() { return this.contactForm.get('contactBussinessMailAddress'); }\r\n  get contactMailAddressCity() { return this.contactForm.get('contactMailAddressCity'); }\r\n  get contactMailAddressState() { return this.contactForm.get('contactMailAddressState'); }\r\n  get contactMailAddressZip() { return this.contactForm.get('contactMailAddressZip'); }\r\n  get contactMailAddressCounty() { return this.contactForm.get('contactMailAddressCounty'); }\r\n  get contactBussinessPhysicalAddress() { return this.contactForm.get('contactBussinessPhysicalAddress'); }\r\n  get contactPhysicalAddressCity() { return this.contactForm.get('contactPhysicalAddressCity'); }\r\n  get contactPhysicalAddressState() { return this.contactForm.get('contactPhysicalAddressState'); }\r\n  get contactPhysicalAddressZip() { return this.contactForm.get('contactPhysicalAddressZip'); }\r\n  get contactPhysicalAddressCounty() { return this.contactForm.get('contactPhysicalAddressCounty'); }\r\n  get contactBussinessPhone() { return this.contactForm.get('contactBussinessPhone'); }\r\n  get bussinessPhone() { return this.contactForm.get('bussinessPhone'); }\r\n  get contactFirstName() { return this.contactForm.get('contactFirstName'); }\r\n  get contactLastName() { return this.contactForm.get('contactLastName'); }\r\n  get contactEmail() { return this.contactForm.get('contactEmail'); }\r\n  get contactSocialSecurityNumber() { return this.contactForm.get('contactSocialSecurityNumber'); }\r\n\r\n\r\n  // Contact Bank Information\r\n\r\n  get contactBankName() { return this.contactForm.get('contactBankName'); }\r\n  get contactBankAddress() { return this.contactForm.get('contactBankAddress'); }\r\n  get contactBankRoutingNumber() { return this.contactForm.get('contactBankRoutingNumber'); }\r\n  get contactBankAccountNum() { return this.contactForm.get('contactBankAccountNum'); }\r\n\r\n  get contactBankCity() { return this.contactForm.get('contactBankCity'); }\r\n  get contactBankCounty() { return this.contactForm.get('contactBankCounty'); }\r\n  get contactBankState() { return this.contactForm.get('contactBankState'); }\r\n  get contactBankZipcode() { return this.contactForm.get('contactBankZipcode'); }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ContactComponent } from './contact.component';\r\nimport { AddeditcontactComponent } from './addeditcontact.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ContactComponent },\r\n  { path: 'addcontact', component: AddeditcontactComponent },\r\n  { path: 'edit/:id', component: AddeditcontactComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ContactRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2NvbnRhY3QvY29udGFjdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Contact, ContactService } from './contact.service';\r\nimport { CommonService, ModuleList } from '../shared/common.service';\r\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.scss']\r\n})\r\nexport class ContactComponent implements OnInit {\r\n    @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;  \r\n  ContactList: Contact[];\r\n  SearhName: string\r\n  SearchFromDate: Date\r\n  SearchToDate: Date\r\n  modulePermission: ModuleList;\r\n  moduleLeasePermission: ModuleList;\r\n  loading = false;\r\n  sortDir = 'asc';\r\n  sortColumn = 'ContactBussinessName';\r\n  pagedData: any = {\r\n    pager: {},\r\n    data: []\r\n  };\r\n  listFilter = '';\r\n  searchTxt = '';\r\n  From: any;\r\n  To: any;\r\n  name: any;\r\n  lstPageSize: any\r\n  pageSizeValue: number;\r\n  isDashBoard = false;\r\n  loginuserid: any;\r\n  user = false;\r\n  permission: boolean;\r\n  loginusertype: any;\r\n  loadSave: boolean = false;\r\n  constructor(private contactService: ContactService, private commonService: CommonService, private activeRoute: ActivatedRoute)\r\n  {\r\n    const moduleCode = this.activeRoute.snapshot.data.moduleCode;\r\n    this.modulePermission = this.commonService.getPermission(moduleCode);\r\n    this.permission = this.modulePermission.roleModuleReadFlag;\r\n    this.moduleLeasePermission = this.commonService.getPermission(1020);\r\n    this.commonService.getLoggedInName.subscribe((userdetail: any) => {\r\n      this.loginuserid = userdetail.id;\r\n      this.loginusertype = userdetail.userType;\r\n      if (userdetail.userType == 'usertype01' || userdetail.userType == 'usertype06') {\r\n        this.user = true;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.pageSizeValue = 10;\r\n    this.getPageSizes();\r\n    this.getContactList();\r\n    this.refresh();\r\n  }\r\n\r\n  updateFilter(event) {\r\n    this.searchTxt = event.target.value;\r\n    let keycode = (event.keyCode ? event.keyCode : event.which);\r\n    if (keycode === 13 || keycode === '13') {\r\n      this.search();\r\n    }\r\n  }\r\n\r\n  getPageSizes() {\r\n    this.commonService.getMasterItemsList(\"PageSize\").subscribe((res: any) => {\r\n      this.lstPageSize = this.commonService.masters;\r\n    })\r\n  }\r\n\r\n  onChange($event) {\r\n    this.loading = true;\r\n    this.contactService.getContactList(this.listFilter, this.From, this.To, this.sortColumn, this.sortDir, 0, this.pageSizeValue, this.loginuserid, this.isDashBoard).subscribe(response => {\r\n      this.pagedData = this.contactService.pagedData;\r\n      this.loading = false;\r\n    }, error => {\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n\r\n  search() {\r\n    this.loading = true;\r\n    this.contactService.getContactList(this.listFilter, this.From, this.To, this.sortColumn, this.sortDir, 0, this.pageSizeValue, this.loginuserid, this.isDashBoard).subscribe(response => {\r\n      this.pagedData = this.contactService.pagedData;\r\n      this.loading = false;\r\n    }, error => {\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this.table.sorts = [];\r\n    this.From = null;\r\n    this.To = null;\r\n    this.loading = true;\r\n    this.listFilter = '';\r\n    this.sortDir = 'asc';\r\n    this.sortColumn = 'ContactBussinessName';\r\n    this.pageSizeValue = 10;\r\n    this.contactService.getContactList(this.listFilter, this.From, this.To, this.sortColumn, this.sortDir, 0, 10, this.loginuserid, this.isDashBoard).subscribe(response => {\r\n      this.pagedData = this.contactService.pagedData;\r\n      this.loading = false;\r\n    }, error => {\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n\r\n  getContactList() {\r\n    this.loading = true;\r\n    this.contactService.getContactList(this.name, this.From, this.To, this.sortColumn, this.sortDir, 0, 10, this.loginuserid, this.isDashBoard).subscribe((result: any) => {\r\n      this.loading = false;\r\n      if (result) {\r\n        this.ContactList = result;\r\n      }\r\n    })\r\n  }\r\n\r\n  setPage($event) {\r\n    this.loading = true;\r\n    this.contactService.getContactList(this.listFilter, this.From, this.To, this.sortColumn, this.sortDir, $event.page - 1, this.pageSizeValue, this.loginuserid, this.isDashBoard).subscribe(response => {\r\n      this.pagedData = this.contactService.pagedData;\r\n      this.loading = false;\r\n    }, error => {\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  onSort($event) {\r\n    const sort = $event.sorts[0]\r\n    this.sortDir = sort.dir;\r\n    this.sortColumn = sort.prop;\r\n    this.loading = true;\r\n    this.contactService.getContactList(this.listFilter, this.From, this.To, this.sortColumn, this.sortDir, $event.page - 1, this.pageSizeValue, this.loginuserid, this.isDashBoard).subscribe(response => {\r\n      this.pagedData = this.contactService.pagedData;\r\n      this.loading = false;\r\n    }, error => {\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  refresh() {\r\n    this.loading = true;\r\n    this.contactService.getContactList('', this.From, this.To, this.sortColumn, this.sortDir, 0, this.pageSizeValue, this.loginuserid, this.isDashBoard).subscribe(response => {\r\n\r\n      this.pagedData = this.contactService.pagedData;\r\n      this.loading = false;\r\n    }, error => {\r\n      this.loading = false;\r\n    })\r\n  }\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { ContactRoutingModule } from './contact-routing.module';\nimport { AddeditcontactComponent } from './addeditcontact.component';\r\nimport { ContactComponent } from './contact.component';\nimport { InsuranceComponent } from './insurance/insurance.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { GuarantoroldComponent } from './guarantorold/guarantorold.component';\r\n\r\n@NgModule({\n  declarations: [\n    AddeditcontactComponent\n    , ContactComponent\n    , InsuranceComponent, GuarantoroldComponent],\n  imports: [\n    CommonModule\n    , ContactRoutingModule\n    , SharedModule, ReactiveFormsModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class ContactModule { }\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'guarantorold',\r\n  templateUrl: './guarantorold.component.html',\r\n})\r\nexport class GuarantoroldComponent implements OnInit {\r\n  @Input('group')\r\n  public guarantorForm: FormGroup;\r\n  @Input('states') states: any; maxDate : Date;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.maxDate  = new Date();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2NvbnRhY3QvaW5zdXJhbmNlL2luc3VyYW5jZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\r\n\n@Component({\n  selector: 'insurance',\n  templateUrl: './insurance.component.html',\n  styleUrls: ['./insurance.component.scss']\n})\nexport class InsuranceComponent implements OnInit {\n  @Input('group')\r\n  public insuranceForm: FormGroup;\n  @Input('states') states: any;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  get name() { return this.insuranceForm.get('name'); } \n  get address() { return this.insuranceForm.get('address'); }\n  get city() { return this.insuranceForm.get('city'); }\n  get state() { return this.insuranceForm.get('state'); }\n  get zipCode() { return this.insuranceForm.get('zipCode'); }\n  get phone() { return this.insuranceForm.get('phone'); }\n  get agentName() { return this.insuranceForm.get('agentName'); }\n  get agentEmail() { return this.insuranceForm.get('agentEmail'); }\n  get county() { return this.insuranceForm.get('county'); } \n}\n"],"sourceRoot":"webpack:///"}