{"version":3,"sources":["./src/app/views/customerbulkupload/bulkupload.component.html","./src/app/views/customerbulkupload/bulkupload.component.scss","./src/app/views/customerbulkupload/bulkupload.component.ts","./src/app/views/customerbulkupload/bulkupload.service.ts","./src/app/views/customerbulkupload/customerbulkupload-routing.module.ts","./src/app/views/customerbulkupload/customerbulkupload.module.ts"],"names":[],"mappings":"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","file":"views-customerbulkupload-customerbulkupload-module.js","sourcesContent":["export default \"<div class=\\\"page\\\">\\r\\n  <!-- Breadcrumb-->\\r\\n  <div class=\\\"breadcrumb-holder\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-9 mt-3\\\">\\r\\n          <span class=\\\"dash\\\">Customer Bulk Upload</span>\\r\\n          <ul class=\\\"breadcrumb\\\">\\r\\n            <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/dashboard\\\">Dashboard</a></li>\\r\\n            <li class=\\\"breadcrumb-item active\\\">Customer Bulk Upload</li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Header Section-->\\r\\n  <section class=\\\"dashboard-header section-padding\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"contact-box\\\" [ngClass]=\\\"{'disabled':loading}\\\">\\r\\n        <div class=\\\"row d-flex align-items-md-stretch\\\">\\r\\n          <div class=\\\"col-12\\\">\\r\\n            <div class=\\\"bg-white border rounded pb-4\\\">\\r\\n              <div class=\\\"col-md-8 mt-4\\\">\\r\\n                <label>Select Document:<span class=\\\"text-danger\\\">*</span></label>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <div class=\\\"custom-file\\\">\\r\\n                      <input class=\\\"custom-file-input\\\" type=\\\"file\\\" name='file' (change)=\\\"onFileChange($event)\\\" #fileInput>\\r\\n                      <label class=\\\"custom-file-label\\\">{{fileName}}</label>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <small *ngIf=\\\"!isValid\\\" class=\\\"text-danger\\\">Document is required<br /></small>\\r\\n                  <small><i class=\\\"text-primary\\\">Valid documents format is .xls,.xlsx and limit upto 25MB.</i></small>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n                Click <a href=\\\"{{excelDocumentNameLink}}\\\">here</a> to download the Sample File for Customer Bulk Upload\\r\\n                      <div class=\\\"alert alert-info mt-2\\\">\\r\\n                        Excel Sheet contains two sheets;Please enter valid data in both the sheets named ContactInformation and ContactGuarantorInformation.<br />\\r\\n                        Guarantor Date Of Birth should be in format MM/DD/YYYY.<br />\\r\\n                        The header in Sample File is in Red Color for required data.\\r\\n                      </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-12\\\">\\r\\n                <button type=\\\"submit\\\" (click)=\\\"saveBulkUpload()\\\" class=\\\"btn btn-primary form-btns\\\" [disabled]=\\\"loadSave\\\"><i class=\\\"fa fa-save\\\"></i> Submit</button>\\r\\n                <a href=\\\"javascript:void(0);\\\" class=\\\"btn btn-danger form-btns\\\" (click)=\\\"cancel()\\\"><i class=\\\"fa fa-times\\\"></i> Cancel</a>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12 mt-4\\\">\\r\\n                <div *ngIf=\\\"isError\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <strong>Please correct the following errors!</strong><br />\\r\\n                  <label [innerHtml]=\\\"errorMsg\\\">\\r\\n                  </label>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12 mt-4\\\">\\r\\n                <div *ngIf=\\\"isresp\\\" class=\\\"alert alert-success\\\">\\r\\n                  <label [innerHtml]=\\\"respMsg\\\">\\r\\n                  </label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </section>\\r\\n  <app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader\\\"></app-loader>\\r\\n</div>\\r\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2N1c3RvbWVyYnVsa3VwbG9hZC9idWxrdXBsb2FkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport * as XLSX from 'xlsx';\nimport { BulkuploadService, BulkUpload, RootJsonObject, ContactGuarantorInformation, ContactInformation } from './bulkupload.service';\r\nimport { CommonService } from '../shared/common.service';\r\nimport {  FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Router } from '@angular/router';\r\nimport { parse } from 'path';\r\n\r\n\r\n\n@Component({\n  selector: 'app-bulkupload',\n  templateUrl: './bulkupload.component.html',\n  styleUrls: ['./bulkupload.component.scss']\n})\nexport class BulkuploadComponent implements OnInit {\n  @ViewChild('fileInput', { static: false })\r\n  myInputVariable: ElementRef;\n  bulkUpload: BulkUpload[] = [];\n  rootJsonObject: RootJsonObject[] = [];\n  sheetone: ContactInformation[] = [];\n  sheettwo: ContactGuarantorInformation[] = [];\n  loginuserid: any;\r\n  errorMsg: string = \"\";\r\n respMsg: string = \"\";\r\n  isError = false;\r\n  isresp = false;\r\n  isValid = true;\r\n  file: any;\r\n  fileName = 'Select File';\r\n  loading = false;\r\n  loadSave: boolean = false;\r\n  excelDocumentNameLink: string;\r\n  constructor(private toaster: ToastrService, private fb: FormBuilder, private bulkuploadService: BulkuploadService,\n    private commonService: CommonService ,private router: Router,) {\n    this.commonService.getLoggedInName.subscribe((userdetail: any) => {\n      this.loginuserid = userdetail.id;\r\n    });\n  }\n  ngOnInit() {\n    this.excelDocumentNameLink =\"/assets/uploads/Document/CustomerBulkUploadFile.xlsx\";\n  }\n\n  onFileChange($event) {\r\n    this.loading = true;\n    try {\n      this.commonService.uploadBulkFileValidator($event);\r\n\r\n      if (this.commonService.isUploadFileValid) {\r\n        this.commonService.uploadBulkFileSize(\"xlsx\", $event.target.files[0].size)\r\n        if (this.commonService.isFileValid) {\r\n          this.file = $event.target.files[0];\r\n          this.fileName = $event.target.files[0].name;\r\n          this.isValid = true;\r\n        }\n        else {\n          this.myInputVariable.nativeElement.value = \"\";\n          this.fileName = \"Select File\";\r\n          this.isError = false;\r\n        }\n      }\n      else {\n        this.myInputVariable.nativeElement.value = \"\";\n        this.fileName = \"Select File\";\r\n        this.isError = false;\r\n      }\n    }\n    catch (err) { }\n    this.loading = false;\n  }\n\n  saveBulkUpload() {\r\n    this.loading = true;\r\n    if (this.fileName === null || this.fileName === ''\n      || typeof this.fileName === 'undefined'\n      || this.fileName == 'Select File') {\n      this.isValid = false;\n      this.loading = false;\n      this.myInputVariable.nativeElement.value = \"\";\n    }\n\n    else {\r\n      if (this.isValid) {\r\n        let workBook = null;\r\n        let jsonData = null;\r\n        const reader = new FileReader();\r\n        const file = this.file;\r\n        reader.onload = (event) => {\r\n          const data = reader.result;\r\n          workBook = XLSX.read(data, { type: 'binary' });\r\n          jsonData = workBook.SheetNames.reduce((initial, name) => {\r\n            const sheet = workBook.Sheets[name];\r\n            initial[name] = XLSX.utils.sheet_to_json(sheet);\r\n            return initial;\r\n          }, {});\r\n          var form = new FormData()\r\n          form.append('Id', this.loginuserid);\r\n          form.append('bulkUploadJSONObject', JSON.stringify(jsonData));\r\n          this.bulkuploadService.saveBulkUpload(form).subscribe((result: any) => {\r\n            if (result.statusCode == 200) {\n              this.isError = false;\n              this.fileName = \"Select File\"\n              this.loading = false;\n              this.isresp = true;\n              this.respMsg = result.responseMessage;\n              this.myInputVariable.nativeElement.value = \"\";\n              this.toaster.success(\"Data is saved successfully.\");\n            }\n            else {\n              this.isresp = false;\n              this.loading = false;\n              this.isError = true;\n              this.myInputVariable.nativeElement.value = \"\";\n              this.errorMsg = result.responseMessage;\n            }\n          },\n            error => {\n              this.isresp = false;\n              this.myInputVariable.nativeElement.value = \"\";\n              this.toaster.error(\"oops. something went wrong please contact your administrator\");\n              this.loading = false;\n            })\r\n        }\r\n       \r\n        setTimeout(() => { reader.readAsBinaryString(file); }, 500);\r\n      }\r\n      else {\r\n        this.loading = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n  this.loading = false;\r\n    this.router.navigateByUrl(\"/contact\");\r\n  }\r\n  }\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BulkuploadService {\n\n  public baseUri = `${environment.WebApiBaseUrl}`;\n  public contactUri = `${environment.WebApiBaseUrl}Contact`;\n  constructor(private http: HttpClient) { }\n\n  saveBulkUpload(bulkUpload: FormData) {\r\n    return this.http.post(`${this.contactUri}/SaveBulkUpload`, bulkUpload)\r\n  }\n}\n\r\nexport class BulkUpload {\r\n  Id: string;\r\n  bulkUploadJSONObject: string;\r\n\r\n  constructor() {\r\n    this.Id = '';\r\n    this.bulkUploadJSONObject = '';\r\n  }\r\n}\n\nexport class ContactInformation {\r\n  BusinessName: string;\r\n  Tin: string;\r\n  TypeofCompany: string;\r\n  BusinessPhone: string;\r\n  ContactPhone: string;\r\n  ContactFirstName: string;\r\n  ContactLastName: string;\r\n  ContactPosition: string;\r\n  ContactEmail: string;\r\n  ContactPreferredDocumentSigned: string;\r\n  MailingAddress: string;\r\n  MailingAddressCity: string;\r\n  MailingAddressState: string;\r\n  MailingAddressZip: string;\r\n  MailingAddressCounty: string;\r\n  PhysicalAddress: string;\r\n  PhysicalAddressCity: string;\r\n  PhysicalAddressState: string;\r\n  PhysicalAddressZip: string;\r\n  PhysicalAddressCounty: string;\r\n  InsuranceName: string;\r\n  InsurancePhone: string;\r\n  InsuranceAgentName: string;\r\n  InsuranceAgentEmail: string;\r\n  InsuranceAddress: string;\r\n  InsuranceCity: string;\r\n  InsuranceState: string;\r\n  InsuranceZip: string;\r\n  InsuranceAgentCounty: string;\r\n}\r\n\r\nexport class ContactGuarantorInformation {\r\n  ContactEmail: string;\r\n  GuarantorFirstName: string;\r\n  GuarantorLastName: string;\r\n  GuarantorTitle: string;\r\n  Ownership: string;\r\n  GuarantorEmail: string;\r\n  GuarantorPhone: string;\r\n  BussinessAddress: string;\r\n  BussinessCity: string;\r\n  BussinessState: string;\r\n  BussinessZip: string;\r\n  BussinessCounty: string;\r\n  HomeAddress: string;\r\n  HomeCity: string;\r\n  HomeState: string;\r\n  HomeZip: string;\r\n  HomeCounty: string;\r\n}\r\n\r\nexport class RootJsonObject {\r\n  ContactInformation: ContactInformation[];\r\n  ContactGuarantorInformation: ContactGuarantorInformation[];\r\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BulkuploadComponent } from './bulkupload.component';\r\n\n\nconst routes: Routes = [\r\n  {\r\n    path: '', component: BulkuploadComponent, data: { title: 'Customer Bulk Upload' }\r\n  }\r\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CustomerbulkuploadRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BulkuploadComponent } from './bulkupload.component';\nimport { CustomerbulkuploadRoutingModule } from './customerbulkupload-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n@NgModule({\n  declarations: [BulkuploadComponent],\n  imports: [\n    CommonModule,\n    CustomerbulkuploadRoutingModule,\n    SharedModule, ModalModule\n  ]\n})\nexport class CustomerbulkuploadModule { }\n"],"sourceRoot":"webpack:///"}