{"version":3,"sources":["./src/app/views/manageuser/addedituser.component.html","./src/app/views/manageuser/listusers.component.html","./src/app/views/manageuser/addedituser.component.ts","./src/app/views/manageuser/listusers.component.ts","./src/app/views/manageuser/user-routing.module.ts","./src/app/views/manageuser/user.module.ts"],"names":[],"mappings":"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","file":"views-manageuser-user-module.js","sourcesContent":["export default \"<div class=\\\"header float-left w-100 mb-2\\\">\\r\\n  <h2 class=\\\"float-left pr-2\\\"><strong>{{pageTitle}}</strong></h2>\\r\\n  <div class=\\\"breadcrumb-wrapper\\\">\\r\\n    <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a routerLink=\\\"/dashboard\\\">Dashboard</a></li>\\r\\n      <li><a routerLink=\\\"/user\\\">Manage Users</a></li>\\r\\n      <li class=\\\"active\\\">{{pageTitle}}</li>\\r\\n    </ol>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"clearfix\\\"></div>\\r\\n\\r\\n<div class=\\\"panel\\\">\\r\\n  <div class=\\\"panel-content \\\">\\r\\n    <form [formGroup]=\\\"addUserForm\\\" autocomplete=\\\"off\\\">\\r\\n      <!--<h3 class=\\\"form-heading\\\">User Preferred Employee/Contact:</h3>\\r\\n  <div class=\\\"row mx-auto mb-2\\\" *ngIf=\\\"!isEdit\\\">\\r\\n    <div class=\\\"col-12 col-md-6 col-lg-6\\\">\\r\\n      <label>User Preferred:</label>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"form-check-inline\\\">\\r\\n          <div class=\\\"custom-control custom-radio\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"customRadio\\\" name=\\\"employeeContactPreferredBy\\\" (click)=\\\"userForSaleForce('Employee')\\\"\\r\\n                   value=\\\"Employee\\\" formControlName=\\\"employeeContactPreferredBy\\\" >\\r\\n            <label class=\\\"custom-control-label\\\" for=\\\"customRadio\\\">Employee</label>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-check-inline\\\">\\r\\n          <div class=\\\"custom-control custom-radio\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"customRadio1\\\" name=\\\"employeeContactPreferredBy\\\" (click)=\\\"userForSaleForce('Contact')\\\"\\r\\n                   value=\\\"Contact\\\" formControlName=\\\"employeeContactPreferredBy\\\">\\r\\n            <label class=\\\"custom-control-label\\\" for=\\\"customRadio1\\\">Contact</label>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-check-inline\\\">\\r\\n          <div class=\\\"custom-control custom-radio\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"customRadio2\\\" name=\\\"employeeContactPreferredBy\\\"  (click)=\\\"userForSaleForce('NormalUser')\\\" value=\\\"NormalUser\\\" formControlName=\\\"employeeContactPreferredBy\\\" checked>\\r\\n            <label class=\\\"custom-control-label\\\" for=\\\"customRadio2\\\">Normal User</label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 col-md-6 col-lg-6\\\" *ngIf=\\\"isNormalUser\\\">\\r\\n      <label>Select User:</label>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <ng-select [items]=\\\"lstSalesforceEmployee\\\"\\r\\n                   placeholder=\\\"Select Employee Type\\\" bindValue=\\\"value\\\" (change)=\\\"FillDataForEmployeOrContact($event)\\\" bindLabel=\\\"text\\\" formControlName=\\\"salesForceEmployeOrContact\\\">\\r\\n        </ng-select>\\r\\n      </div>\\r\\n    </div>\\r\\n      <hr />\\r\\n    </div>-->\\r\\n      <div class=\\\"row  mb-2\\\">\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n          <label>First Name:<span class=\\\"text-danger\\\">*</span></label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"firstName\\\" maxlength=\\\"50\\\" placeholder=\\\"Enter First Name\\\"\\r\\n                   [ngClass]=\\\"{'is-invalid': (firstName.invalid && (firstName.dirty || firstName.touched) && (firstName.errors?.required || firstName.errors?.maxlength)) }\\\">\\r\\n            <small *ngIf=\\\"firstName.invalid && (firstName.dirty || firstName.touched) && firstName.errors?.required\\\"\\r\\n                   class=\\\"text-danger\\\">First Name is required</small>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n          <label>Last Name:<span class=\\\"text-danger\\\">*</span></label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"lastName\\\" maxlength=\\\"50\\\" placeholder=\\\"Enter Last Name\\\"\\r\\n                   [ngClass]=\\\"{'is-invalid': (lastName.invalid && (lastName.dirty || lastName.touched) && (lastName.errors?.required || lastName.errors?.maxlength)) }\\\">\\r\\n            <small *ngIf=\\\"lastName.invalid && (lastName.dirty || lastName.touched) && lastName.errors?.required\\\"\\r\\n                   class=\\\"text-danger\\\">Last Name is required</small>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n          <label>Email:<span class=\\\"text-danger\\\">*</span></label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" maxlength=\\\"50\\\" placeholder=\\\"Enter Email\\\"\\r\\n                   [ngClass]=\\\"{'is-invalid': (email.invalid && (email.dirty || email.touched) && (email.errors?.required || email.errors?.email)) }\\\">\\r\\n            <small *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors?.required\\\"\\r\\n                   class=\\\"text-danger\\\">Email is required</small>\\r\\n            <small *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors?.email\\\"\\r\\n                   class=\\\"text-danger\\\">Please enter valid email address</small>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n          <label>Phone:</label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <p-inputMask styleClass=\\\"form-control\\\" mask=\\\"(999) 999-9999\\\" formControlName=\\\"phone\\\" placeholder=\\\"(___) ___-____\\\"></p-inputMask>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!--<div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n    <label>Position:</label>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <ng-select [items]=\\\"lstUserPosition\\\"\\r\\n                 placeholder=\\\"Select Position\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\" formControlName=\\\"position\\\">\\r\\n      </ng-select>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n    <label>Employee Type:</label>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <ng-select [items]=\\\"lstEmployeeType\\\"\\r\\n                 placeholder=\\\"Select Employee Type\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\" formControlName=\\\"empType\\\">\\r\\n      </ng-select>\\r\\n    </div>\\r\\n  </div>-->\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\" *ngIf=\\\"isEmployee\\\">\\r\\n          <label>User Type:<span class=\\\"text-danger\\\">*</span></label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <ng-select [items]=\\\"lstUserType\\\" placeholder=\\\"Select User Type\\\" (change)=\\\"userTypeChange($event.text,$event.value,$event)\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\" formControlName=\\\"userType\\\"\\r\\n                       [ngClass]=\\\"{'is-invalid': (userType.invalid && (userType.dirty || userType.touched) && userType.errors?.required)}\\\"></ng-select>\\r\\n            <small *ngIf=\\\"userType.invalid && (userType.dirty || userType.touched) && userType.errors?.required\\\"\\r\\n                   class=\\\"text-danger\\\">Please select User Type</small>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\" *ngIf=\\\"isEmployee\\\">\\r\\n          <label>Roles:</label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <ng-select [items]=\\\"rolesnames\\\" [loading]=\\\"loadSave\\\" placeholder=\\\"Select Roles\\\" formControlName=\\\"roleId\\\"\\r\\n                       bindLabel=\\\"roleName\\\" bindValue=\\\"id\\\"></ng-select>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\" *ngIf=\\\"isEmployee\\\">\\r\\n          <label>Consolidated User:</label>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <ng-select [items]=\\\"ConsolidatedUser\\\" [loading]=\\\"loadSave\\\" placeholder=\\\"Select Consolidated User\\\" formControlName=\\\"consolidateduserid\\\"\\r\\n                     bindLabel=\\\"text\\\" bindValue=\\\"value\\\"></ng-select>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n          <label>Department:<span class=\\\"text-danger\\\">*</span></label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <ng-select [items]=\\\"lstdepartment\\\" [loading]=\\\"loadSave\\\" placeholder=\\\"Select Department\\\" formControlName=\\\"departmentID\\\"\\r\\n                       bindLabel=\\\"text\\\" bindValue=\\\"value\\\" [ngClass]=\\\"{'is-invalid': (departmentID.invalid && (departmentID.dirty || departmentID.touched) && departmentID.errors?.required) }\\\"></ng-select>\\r\\n            <small *ngIf=\\\"departmentID.invalid && (departmentID.dirty || departmentID.touched) && departmentID.errors?.required\\\" class=\\\"text-danger\\\">Please select Department</small>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <!--<div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n    <label>Select Company:</label>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <ng-select [items]=\\\"lstcompany\\\" [loading]=\\\"loadSave\\\" placeholder=\\\"Select Company\\\" formControlName=\\\"companyid\\\"\\r\\n                 bindLabel=\\\"text\\\" bindValue=\\\"value\\\"></ng-select>\\r\\n\\r\\n    </div>\\r\\n  </div>-->\\r\\n\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\" *ngIf=\\\"assignedBankId.enabled\\\">\\r\\n          <label>Lender:<span class=\\\"text-danger\\\">*</span></label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <ng-select [items]=\\\"banknames\\\" [loading]=\\\"loadSave\\\" placeholder=\\\"Select Bank\\\" formControlName=\\\"assignedBankId\\\"\\r\\n                       bindLabel=\\\"text\\\" bindValue=\\\"value\\\"\\r\\n                       [ngClass]=\\\"{'is-invalid': (assignedBankId.invalid && (assignedBankId.dirty || assignedBankId.touched) && assignedBankId.errors?.required) }\\\"></ng-select>\\r\\n            <small *ngIf=\\\"assignedBankId.invalid && (assignedBankId.dirty || assignedBankId.touched) && assignedBankId.errors?.required\\\" class=\\\"text-danger\\\">Please select Lender</small>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!--<div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n    <label>Executive Commission:</label>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <ng-select [items]=\\\"executiveCommission\\\"\\r\\n                 bindLabel=\\\"name\\\"\\r\\n                 placeholder=\\\"Select Executive Commission\\\"\\r\\n                 formControlName=\\\"executiveCommisionFormula\\\">\\r\\n      </ng-select>\\r\\n    </div>\\r\\n  </div>-->\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\" *ngIf=\\\"comptype.companyType!='companytypeFinancialInstitute'\\\">\\r\\n          <label>Service Territory:</label>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <ng-select [items]=\\\"lstLocation\\\" placeholder=\\\"Select Service Territory\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\" formControlName=\\\"locationID\\\"></ng-select>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n        <div class=\\\"col-12 col-md-12 col-lg-12\\\">\\r\\n          <label>Notes:</label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <textarea type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"notes\\\" placeholder=\\\"Enter Notes\\\" maxlength=\\\"500\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n          <label>Is Active:</label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"switch\\\">\\r\\n              <input type=\\\"checkbox\\\" id=\\\"customCheck1\\\" formControlName=\\\"isActive\\\">\\r\\n              <span class=\\\"slider round\\\"><span>Yes</span></span>\\r\\n            </label>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n          <label>Is Manager:</label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"switch\\\">\\r\\n              <input type=\\\"checkbox\\\" id=\\\"customCheck2\\\" formControlName=\\\"isHOD\\\">\\r\\n              <span class=\\\"slider round\\\"><span>Yes</span></span>\\r\\n            </label>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </div>\\r\\n      \\r\\n      <div class=\\\"row mb-2\\\">\\r\\n        <div class=\\\"col-12 col-md-12 col-lg-12\\\"><h3 class=\\\"form-heading ng-star-inserted ml-0 mt-0\\\"><span>Address:</span></h3></div>\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n          <label>Address:</label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <textarea type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" placeholder=\\\"Enter Address\\\"\\r\\n                      [ngClass]=\\\"{'is-invalid': (address.invalid && (address.dirty || address.touched) && (address.errors?.required || address.errors?.maxlength)) }\\\"></textarea>\\r\\n            <small *ngIf=\\\"address.invalid && (address.dirty || address.touched) && address.errors?.required\\\"\\r\\n                   class=\\\"text-danger\\\">Address is required</small>\\r\\n            <small *ngIf=\\\"address.invalid && (address.dirty || address.touched) && address.errors?.maxlength\\\"\\r\\n                   class=\\\"text-danger\\\">Address must be less than 500 characters.</small>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n          <label>City:</label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter City\\\" formControlName=\\\"city\\\"\\r\\n                   [ngClass]=\\\"{'is-invalid': (city.invalid && (city.dirty || city.touched) && (city.errors?.required || city.errors?.maxlength)) }\\\">\\r\\n            <small *ngIf=\\\"city.invalid && (city.dirty || city.touched) && city.errors?.required\\\"\\r\\n                   class=\\\"text-danger\\\">City is required</small>\\r\\n            <small *ngIf=\\\"city.invalid && (city.dirty || city.touched) && city.errors?.maxlength\\\"\\r\\n                   class=\\\"text-danger\\\">City name must be less than 100 characters.</small>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n          <label>Country:</label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <ng-select [items]=\\\"countryLists\\\" [loading]=\\\"loadSave\\\" placeholder=\\\"Select country\\\" formControlName=\\\"county\\\"\\r\\n                       bindLabel=\\\"text\\\" bindValue=\\\"value\\\"\\r\\n                       [ngClass]=\\\"{'is-invalid': (county.invalid && (county.dirty || county.touched) && county.errors?.required) }\\\"></ng-select>\\r\\n            <small *ngIf=\\\"county.invalid && (county.dirty || county.touched) && county.errors?.required\\\" class=\\\"text-danger\\\">Please select country</small>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n          <label>State:</label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <ng-select [items]=\\\"states\\\" [loading]=\\\"loadSave\\\" placeholder=\\\"Select State\\\" formControlName=\\\"state\\\"\\r\\n                       bindLabel=\\\"text\\\" bindValue=\\\"stateGuidValues\\\"\\r\\n                       [ngClass]=\\\"{'is-invalid': (state.invalid && (state.dirty || state.touched) && state.errors?.required) }\\\"></ng-select>\\r\\n            <small *ngIf=\\\"state.invalid && (state.dirty || state.touched) && state.errors?.required\\\" class=\\\"text-danger\\\">Please select State</small>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n          <label>Zip Code:</label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Zip Code\\\" formControlName=\\\"zipCode\\\"\\r\\n                   [ngClass]=\\\"{'is-invalid': (zipCode.invalid && (zipCode.dirty || zipCode.touched) && (zipCode.errors?.required || zipCode.errors?.maxlength)) }\\\">\\r\\n            <!--<small *ngIf=\\\"zipCode.invalid && (zipCode.dirty || zipCode.touched)\\\" class=\\\"text-danger\\\">\\r\\n        <ng-container *ngIf=\\\"zipCode.errors.required\\\">Zip Code is required</ng-container>\\r\\n        <ng-container *ngIf=\\\"zipCode.errors.maxlength\\\">Zip Code can not be greater than 5 characters.</ng-container>\\r\\n      </small>-->\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n          <label>Time Format:<span class=\\\"text-danger\\\">*</span></label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <ng-select [items]=\\\"lstTimeFormat\\\" placeholder=\\\"Select Time Format\\\" formControlName=\\\"timeFormat\\\"\\r\\n                       bindLabel=\\\"text\\\" bindValue=\\\"value\\\" [ngClass]=\\\"{'is-invalid': (timeFormat.invalid && (timeFormat.dirty || timeFormat.touched) && timeFormat.errors?.required) }\\\"></ng-select>\\r\\n            <small *ngIf=\\\"timeFormat.invalid && (timeFormat.dirty || timeFormat.touched) && timeFormat.errors?.required\\\" class=\\\"text-danger\\\">Please select Time Format</small>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\">\\r\\n          <label>Time Zone:<span class=\\\"text-danger\\\">*</span></label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <ng-select [items]=\\\"lstTimeZone\\\" [loading]=\\\"loadSave\\\" placeholder=\\\"Select Time Zone\\\" formControlName=\\\"timeZoneId\\\"\\r\\n                       bindLabel=\\\"text\\\" bindValue=\\\"value\\\" [ngClass]=\\\"{'is-invalid': (timeZoneId.invalid && (timeZoneId.dirty || timeZoneId.touched) && timeZoneId.errors?.required) }\\\"></ng-select>\\r\\n            <small *ngIf=\\\"timeZoneId.invalid && (timeZoneId.dirty || timeZoneId.touched) && timeZoneId.errors?.required\\\" class=\\\"text-danger\\\">Please select Time Zone</small>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-12 col-lg-4\\\" *ngIf=\\\"false\\\">\\r\\n          <label>Report To:</label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <ng-select [items]=\\\"lstReportTo\\\" [loading]=\\\"loadSave\\\" placeholder=\\\"Select Report To\\\" formControlName=\\\"reportToId\\\"\\r\\n                       bindLabel=\\\"text\\\" bindValue=\\\"value\\\"></ng-select>\\r\\n            <!--[ngClass]=\\\"{'is-invalid': (reportToId.invalid && (reportToId.dirty || reportToId.touched) && reportToId.errors?.required) }\\\"\\r\\n            <small *ngIf=\\\"reportToId.invalid && (reportToId.dirty || reportToId.touched) && reportToId.errors?.required\\\" class=\\\"text-danger\\\">Please select Report To</small>-->\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n         \\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row mb-3\\\">\\r\\n        <div class=\\\"col-sm-12 col-md-12 text-right\\\">\\r\\n          <a href=\\\"javascript:void(0);\\\" *ngIf=\\\"addOrUpdatePermission\\\" class=\\\"btn btn-success mr-2\\\" (click)=\\\"addeditUser()\\\"><i class=\\\"fa fa-save\\\"></i> Submit</a>\\r\\n          <a href=\\\"javascript:void(0);\\\" class=\\\"btn btn-danger\\\" (click)=\\\"Cancel()\\\"><i class=\\\"fa fa-times\\\"></i> Cancel</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader\\\"></app-loader>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","export default \"\\r\\n<div class=\\\"header float-left w-100 mb-2\\\">\\r\\n  <h2 class=\\\"float-left pr-2\\\"><strong>Manage Users</strong></h2>\\r\\n  <div class=\\\"breadcrumb-wrapper\\\">\\r\\n    <ol class=\\\"breadcrumb\\\">\\r\\n      <li>\\r\\n        <a routerLink=\\\"/dashboard\\\">Dashboard</a>\\r\\n      </li>\\r\\n      <li class=\\\"active\\\">Manage Users</li>\\r\\n    </ol>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"clearfix\\\"></div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12 portlets\\\">\\r\\n    <div class=\\\"panel\\\">\\r\\n      <div class=\\\"panel-header border-bottom pb-3 btn-iconres\\\">\\r\\n        <div class=\\\"row mt-2\\\">\\r\\n          <div class=\\\"col-md-12 col-xl-7 pr-3 pr-lg-0\\\">\\r\\n            <div class=\\\"row searchfield\\\">\\r\\n              <div class=\\\"col-lg-3 float-left mb-lg-0 mb-2\\\">\\r\\n                <input class=\\\"form-control input-sm\\\" type=\\\"text\\\" [(ngModel)]='listFilter' placeholder=\\\"Search By Name\\\" (keyup)='updateFilter($event)'>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-3 float-left mb-lg-0 mb-2 pl-3 pl-lg-0\\\">\\r\\n                <ng-select #userTypeSelect [items]=\\\"lstUserType\\\"\\r\\n                           placeholder=\\\"Select User Type\\\" bindValue=\\\"value\\\" bindLabel=\\\"text\\\"\\r\\n                           [closeOnSelect]=\\\"true\\\"\\r\\n                           (change)=\\\"SetUserType($event)\\\" (clear)=\\\"restddl()\\\">\\r\\n                </ng-select>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-6 float-left pl-3 pl-lg-0\\\">\\r\\n                <a class=\\\"btn btn-success form-btns mr-1\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"search()\\\" tooltip=\\\"Search\\\"><span><i class=\\\"fa fa-search\\\"></i></span></a>\\r\\n                <a class=\\\"btn btn-danger form-btns mr-1\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"reset()\\\" tooltip=\\\"Reset\\\"><span><i class=\\\"fa fa-refresh\\\"></i></span></a>\\r\\n                <a class=\\\"btn btn-white mr-1\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"popUpOpen()\\\" tooltip=\\\"Filter\\\"><span><i class=\\\"fa fa-filter\\\"></i> </span></a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12 col-xl-5\\\">\\r\\n            <div class=\\\"dt-buttons noabso-res\\\">\\r\\n              <a *ngIf='isAdd' class=\\\"btn btn-success mr-1\\\" routerLink=\\\"/user/adduser\\\" tooltip=\\\"Add User\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\r\\n              <a *ngIf='isDelete' class=\\\"btn btn-danger form-btns\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"deleteAll()\\\" tooltip=\\\"Delete\\\"><span><i class=\\\"fa fa-trash\\\"></i></span></a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div><!--[rowHeight]=\\\"'auto'\\\"  -->\\r\\n      <div class=\\\"panel-content px-3 pagination2 table-responsive no-padding\\\">\\r\\n        <ngx-datatable #table class=\\\"bootstrap table table-hover table-dynamic\\\"\\r\\n                       [rowHeight]=\\\"40\\\"\\r\\n                       [rows]=\\\"columndata\\\"\\r\\n                       [columnMode]=\\\"'force'\\\"\\r\\n                       [headerHeight]=\\\"40\\\"\\r\\n                       [footerHeight]=\\\"40\\\"\\r\\n                       [externalPaging]=\\\"true\\\"\\r\\n                       [externalSorting]=\\\"true\\\"\\r\\n                       [loadingIndicator]=\\\"loadSave\\\"\\r\\n                       [count]=\\\"totalRecords\\\"\\r\\n                       [offset]=\\\"currentPage\\\"\\r\\n                       [limit]=\\\"pageSizeValue\\\"\\r\\n                       (page)='setPage($event)'\\r\\n                       (sort)=\\\"onSort($event)\\\"\\r\\n                       [scrollbarH]=\\\"true\\\"\\r\\n                       [selectionType]=\\\"SelectionType.checkbox\\\"\\r\\n                       [selectAllRowsOnPage]=\\\"false\\\"\\r\\n                       [selected]=\\\"selected\\\"\\r\\n                       (select)=\\\"onSelect($event)\\\">\\r\\n\\r\\n          <ngx-datatable-column [width]=\\\"42\\\"\\r\\n                                [sortable]=\\\"false\\\"\\r\\n                                [canAutoResize]=\\\"false\\\"\\r\\n                                [draggable]=\\\"false\\\"\\r\\n                                [resizeable]=\\\"false\\\"\\r\\n                                [headerCheckboxable]=\\\"true\\\"\\r\\n                                [checkboxable]=\\\"true\\\">\\r\\n          </ngx-datatable-column>\\r\\n\\r\\n\\r\\n          <ngx-datatable-column *ngFor=\\\"let col of columnheading\\\" [name]=\\\"col.DISPLAY_NAME\\\" [prop]=\\\"col.COLUMN_NAME\\\" [sortable]=\\\"col.SORTABLE\\\" [maxWidth]=\\\"2000\\\">\\r\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\r\\n              <div *ngIf=\\\"col.COLUMN_NAME == 'Name'\\\">\\r\\n                <a [routerLink]=\\\"['/user/edituser',row.Id]\\\">{{row.Name }}</a>\\r\\n              </div>\\r\\n\\r\\n              <div *ngIf=\\\"col.COLUMN_NAME == 'EmailConfirmed'\\\">\\r\\n                <div class=\\\"align-center\\\">\\r\\n                  <span *ngIf=\\\"row.EmailConfirmed == 0\\\" title=\\\"No\\\" class=\\\"status-box bg-danger\\\">Not Confirmed</span>\\r\\n                  <span *ngIf=\\\"row.EmailConfirmed == 1\\\" title=\\\"Yes\\\" class=\\\"status-box bg-success\\\">Confirmed</span>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div *ngIf=\\\"col.COLUMN_NAME == 'IsActive'\\\">\\r\\n                <div>\\r\\n                  <span class=\\\"status-box bg-success\\\" *ngIf=\\\"row.IsActive == 1\\\">Active</span>\\r\\n                  <span class=\\\"status-box bg-danger\\\" *ngIf=\\\"row.IsActive == 0\\\">InActive</span>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div *ngIf=\\\"col.COLUMN_NAME != 'Name' && col.COLUMN_NAME != 'EmailConfirmed' && col.COLUMN_NAME != 'IsActive'\\\">\\r\\n                <div [title]=\\\"row[col.COLUMN_NAME]\\\" *ngIf=\\\"col.DATA_TYPE == 'bit'\\\">\\r\\n                  <i *ngIf=\\\"row[col.COLUMN_NAME] == false\\\" class=\\\"fa fa-times text-danger icon_tick\\\"></i>\\r\\n                  <i *ngIf=\\\"row[col.COLUMN_NAME] == true\\\" class=\\\"fa fa-check text-success icon_tick\\\"></i>\\r\\n                </div>\\r\\n                <div [title]=\\\"row[col.COLUMN_NAME] | DateTimeToLocal:'Date'\\\" *ngIf=\\\"col.DT_CODE=='date'\\\">\\r\\n                  {{ (row[col.COLUMN_NAME] !== null) ? (row[col.COLUMN_NAME] | DateTimeToLocal:'Date') : \\\"\\\" }}\\r\\n                </div>\\r\\n                <div [title]=\\\"row[col.COLUMN_NAME] | DateTimeToLocal\\\" *ngIf=\\\"col.DT_CODE=='datetime'\\\">\\r\\n                  {{ (row[col.COLUMN_NAME] !== null) ? (row[col.COLUMN_NAME] | DateTimeToLocal) : \\\"\\\" }}\\r\\n                </div>\\r\\n                <div [title]=\\\"row[col.COLUMN_NAME]\\\" *ngIf=\\\"col.DATA_TYPE!='date' && col.DATA_TYPE!='bit' && col.FieldType != 'select' && col.COLUMN_NAME !='Email' && col.DT_CODE!='datetime'\\\">\\r\\n                  {{row[col.COLUMN_NAME]}}\\r\\n                </div>\\r\\n                <div [title]=\\\"row[col.COLUMN_NAME]\\\" *ngIf=\\\"col.COLUMN_NAME=='Email'\\\">\\r\\n                  {{row[col.COLUMN_NAME] }}\\r\\n                </div>\\r\\n                <div *ngIf=\\\"col.FieldType == 'select'\\\">\\r\\n                  <div [title]=\\\"row[col.COLUMN_NAME]\\\" *ngIf=\\\"col.FieldFrom !=null\\\">\\r\\n                    {{row[col.COLUMN_NAME] }}\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"col.FieldFrom==null\\\">\\r\\n                    <div *ngFor=\\\"let itemColorCode of getListingColorCode(row[col.COLUMN_NAME]);\\\">\\r\\n                      <div *ngIf=\\\"itemColorCode.colorkey==undefined\\\">\\r\\n                        {{itemColorCode.color}}\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"itemColorCode.colorkey!=undefined\\\" style=\\\"max-width:150px !important;\\\" class=\\\"status-box\\\" [title]=\\\"itemColorCode.color\\\" [ngStyle]=\\\"{background: itemColorCode.colorkey}\\\">\\r\\n                        {{itemColorCode.color}}\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n            </ng-template>\\r\\n          </ngx-datatable-column>\\r\\n          <ngx-datatable-column name=\\\"Action\\\" [sortable]=\\\"false\\\" headerClass=\\\"align-center\\\" [maxWidth]=\\\"100\\\">\\r\\n\\r\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n              <div class=\\\"text-center\\\">\\r\\n                <a (click)=\\\"showModel(row)\\\" href=\\\"javascript:void(0);\\\" title=\\\"Set Password\\\"><i class=\\\"fa fa-key text-info pr-2\\\"></i></a>\\r\\n                <a *ngIf='isUpdate' [routerLink]=\\\"['/user/edituser',row.Id]\\\" title=\\\"Edit\\\"><i class=\\\"fa fa-pencil text-success pr-2\\\"></i></a>\\r\\n                <a *ngIf='isDelete' title=\\\"Click to delete.\\\" (click)=\\\"DeleteUser(row)\\\" href=\\\"javascript:void(0);\\\"><i class=\\\"fa fa-trash text-danger\\\"></i></a>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n          </ngx-datatable-column>\\r\\n          <ngx-datatable-footer>\\r\\n            <ng-template ngx-datatable-footer-template\\r\\n                         let-rowCount=\\\"rowCount\\\"\\r\\n                         let-pageSize=\\\"pageSize\\\"\\r\\n                         let-selectedCount=\\\"selectedCount\\\"\\r\\n                         let-currentPage=\\\"curPage\\\"\\r\\n                         let-offset=\\\"offset\\\"\\r\\n                         let-isVisible=\\\"isVisible\\\">\\r\\n\\r\\n              <div>\\r\\n                <div style=\\\"color:black; margin-right:10px;\\\" class=\\\"page-size-record\\\" *ngIf='(rowCount  > 0)'>\\r\\n                  <span style=\\\"text-align:right; width:80px;vertical-align: middle;\\\">\\r\\n                    <ng-select [searchable]=\\\"false\\\" [items]=\\\"lstPageSize\\\" appendTo=\\\"body\\\" [(ngModel)]='pageSizeValue' dropzone=\\\"fixed\\\" [clearable]=\\\"false\\\" (change)=\\\"onChange($event)\\\" draggable=\\\"false\\\" [closeOnSelect]=\\\"true\\\"\\r\\n                               bindLabel=\\\"text\\\" bindValue=\\\"text\\\"></ng-select>\\r\\n                  </span>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"page-count\\\" *ngIf='(rowCount  > 0)'>\\r\\n                {{commonService.PageString(curPage,pageSizeValue,rowCount)}}\\r\\n              </div>\\r\\n\\r\\n              <datatable-pager [pagerLeftArrowIcon]=\\\"'fa fa-angle-left'\\\"\\r\\n                               [pagerRightArrowIcon]=\\\"'fa fa-angle-right'\\\"\\r\\n                               [pagerPreviousIcon]=\\\"'fa fa-angle-double-left'\\\"\\r\\n                               [pagerNextIcon]=\\\"'fa fa-angle-double-right'\\\"\\r\\n                               [page]=\\\"curPage\\\"\\r\\n                               [size]=\\\"pageSizeValue\\\"\\r\\n                               [count]=\\\"totalRecords\\\"\\r\\n                               [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\r\\n                               (change)=\\\"setPage($event)\\\">\\r\\n              </datatable-pager>\\r\\n            </ng-template>\\r\\n          </ngx-datatable-footer>\\r\\n        </ngx-datatable>\\r\\n\\r\\n      </div>\\r\\n      <app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader\\\"></app-loader>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade in show\\\" bsModal #setPassword=\\\"bs-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" style=\\\"display: none; padding-right: 10px;\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg modal-info \\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Set Password Of {{Name}}</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"Closemodel()\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\" style=\\\"height:100%;\\\">\\r\\n\\r\\n        <div class=\\\"login-container\\\">\\r\\n          <div class=\\\"login-main\\\">\\r\\n            <!--<a href=\\\"javascript:void(0);\\\"><img class=\\\"img-fluid mb-3\\\" src=\\\"assets/default-theme/imagesNew/login-logo.png\\\" style=\\\"background: #2f4050; padding:15px;\\\"/></a>-->\\r\\n            <div class=\\\"login-box\\\">\\r\\n\\r\\n              <form [formGroup]=\\\"setPasswordForm\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"form-group password-view\\\" [ngClass]=\\\"{'disabled':loadSave}\\\">\\r\\n                  <input type=\\\"password\\\" passwordToggle formControlName=\\\"password\\\" placeholder=\\\"Please enter password\\\" class=\\\"form-control\\\">                \\r\\n                </div>\\r\\n                <div class=\\\"col-sm-12 p-0 mb-3\\\" *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\" style=\\\" margin-top: -13px;\\\">\\r\\n                  <div *ngIf=\\\"password.errors.required\\\" class=\\\"alert alert-danger p-1\\\">Password is required</div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group password-view\\\">\\r\\n                  <input type=\\\"password\\\" passwordToggle formControlName=\\\"confirmPassword\\\" placeholder=\\\"Please enter confirm password\\\" class=\\\"form-control\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-12 p-0 mb-3\\\" *ngIf=\\\"confirmPassword.invalid && (confirmPassword.dirty || confirmPassword.touched)\\\" style=\\\" margin-top: -13px;\\\">\\r\\n                  <div *ngIf=\\\"confirmPassword.errors.required\\\" class=\\\"alert-danger p-1\\\">Confirm password is required</div>\\r\\n                  <div *ngIf=\\\"confirmPassword.errors.mismatched\\\" class=\\\"alert-danger p-1\\\">Confirm password does not match</div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-12 p-0\\\">\\r\\n                  <p class=\\\"alert-warning p-2\\\">Note: Password must be combination of lower case, upper case, numeric and special character.</p>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <app-loader [size]=60 [color]=\\\"'white'\\\" *ngIf=\\\"loadSave\\\" class=\\\"loader\\\"></app-loader>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <a class=\\\"btn btn-success text-white mr-2\\\" (click)=\\\"PasswordSet()\\\"><i class=\\\"fa fa-save\\\"></i> Submit</a>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-danger form-btns\\\" (click)=\\\"Closemodel()\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><i class=\\\"fa fa-times text-white\\\"></i> Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<app-searchfilteradd (searchFilterCondition)=\\\"ApplyAdvanceFilter($event)\\\" #templateFilterView moduleName=\\\"users\\\" subModuleName=\\\"user\\\"></app-searchfilteradd>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ManageUserService, User } from './addedituser.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { CommonService, Master, ModuleList } from '../shared/common.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AssertNotNull } from '@angular/compiler';\r\nimport { ConfirmationDialogService } from '../shared/confirmation-dialog/confirmation-dialog.service';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'AddUser',   \r\n  templateUrl: './addedituser.component.html'\r\n})\r\nexport class AddEditUserComponent implements OnInit {\r\n  executiveCommission = [\r\n    { id: \"Formula1\", name: 'Formula1 (Placement Fee + Ist Payment -250)*0.3' },\r\n    { id: \"Formula2\", name: 'Formula2 (Placement Fee * 0.3)' },\r\n  ];\r\n  userModel: User = new User();\r\n  loadSave = false;\r\n  lstUserType: any;\r\n  userTypeId: any;\r\n  lstUserPosition: any;\r\n  lstEmployeeType: any;\r\n  pageTitle: string;\r\n  states: any;\r\n  countryLists: any;\r\n  isShowBank = false;\r\n  banknames: any;\r\n  rolesnames: any;\r\n  lstLocation: any;\r\n  lstcompany: any;\r\n  lstTimeZone: any;\r\n  addOrUpdatePermission: boolean=false;\r\n  lstdepartment: any;\r\n  ConsolidatedUser : any;\r\n  //modulePermission: ModuleList;\r\n  isNormalUser = false;\r\n  isEdit = false;\r\n  isEmployee = false;\r\n  lstSalesforceEmployee: any;\r\n  modulePermission: any[] = [];\r\n  isAdd: boolean = false;\r\n  isUpdate: boolean = false;\r\n  comptype: any;\r\n  oldemail: string = '';\r\n  newemail: string = '';\r\n  lstTimeFormat: any;\r\n  lstReportTo: any;\r\n\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private userService: ManageUserService,\r\n    private commonService: CommonService,\r\n    private router: Router,\r\n    private toaster: ToastrService,\r\n    private route: ActivatedRoute, private dialogService: ConfirmationDialogService,private location:Location\r\n  ) {\r\n    this.commonService.getMasterItemsList(\"manageuser_usertype\").subscribe((result: any) => {\r\n      this.lstUserType = this.commonService.masters;\r\n      // console.log(\"userType\", this.lstUserType);  \r\n    })\r\n    this.commonService.getMasterItemsList(\"Consolidated_User\").subscribe((result: any) => {\r\n      this.ConsolidatedUser = this.commonService.masters;\r\n\r\n      console.log(\"ConsolidatedUser\", this.ConsolidatedUser);  \r\n    })\r\n    this.commonService.getMasterItemsList(\"userposition,employeetype\").subscribe((result: any) => {\r\n      this.lstUserPosition = this.commonService.masters.filter(x => x.masterName == \"UserPosition\");\r\n      this.lstEmployeeType = this.commonService.masters.filter(x => x.masterName == \"EmployeeType\");\r\n      //this.lstSalesforceEmployee = this.commonService.masters.filter(x => x.masterName == \"EmployeeType\");\r\n    })\r\n    const moduleCode = this.route.snapshot.data.moduleCode;\r\n    const priviledgeCode = this.route.snapshot.data.privilegeCode;\r\n    this.comptype = JSON.parse(localStorage.getItem(\"userinfo\"));\r\n   \r\n\r\n    this.addOrUpdatePermission = false;\r\n    this.modulePermission = this.commonService.getPermissiondata(moduleCode);\r\n    let add = this.modulePermission.find(m => m.privilegecode.toUpperCase() == priviledgeCode.toUpperCase());\r\n    if (add == undefined) {\r\n     // add = \"null\";\r\n      this.addOrUpdatePermission = false;\r\n    } else {\r\n     // this.isAdd = true;\r\n      this.addOrUpdatePermission = true;\r\n    }\r\n    //let update = this.modulePermission.find(m => m.privilegecode.toUpperCase() == 'USERUPDATE');\r\n    //if (update == undefined) {\r\n    //  update = \"null\";\r\n    //} else {\r\n    //  this.isUpdate = true;\r\n    //}\r\n  }\r\n  addUserForm = this.fb.group({\r\n    firstName: ['', Validators.required],\r\n    lastName: ['', Validators.required],   \r\n    userType: [null, Validators.required],\r\n    email: ['', [Validators.required, Validators.email]],\r\n    phone: ['', Validators.nullValidator],\r\n    locationID: [null, Validators.nullValidator],\r\n    departmentID: [null, Validators.required],\r\n    timeZoneId: [null, Validators.required],\r\n    companyid: [null, Validators.nullValidator],\r\n    address: ['', [Validators.nullValidator, Validators.maxLength(500)]],\r\n    city: ['', [Validators.nullValidator, Validators.maxLength(100)]],\r\n    state: [null, Validators.nullValidator],\r\n    zipCode: ['', [Validators.nullValidator, Validators.maxLength(5)]],\r\n    county: [null, Validators.nullValidator],\r\n    timeFormat: [12, [Validators.required]],\r\n    position: [null],\r\n    assignedBankId: [{ value: null, disabled: true }, Validators.required],\r\n    empType: [null],\r\n    isActive: [''],\r\n    isHOD: [''],\r\n    notes: [''],\r\n    userid: [null],\r\n    roleId: [null],\r\n    executiveCommisionFormula: [null],\r\n    salesForceEmployeOrContact: [null],\r\n    consolidateduserid: [null],\r\n    reportToId: [null, Validators.nullValidator],\r\n    employeeContactPreferredBy: ['NormalUser']\r\n\r\n  });\r\n  ngOnInit() {\r\n  // this.addOrUpdatePermission = false;\r\n    this.getBankName();\r\n    this.isEmployee = true;\r\n  \r\n    this.getCountryDropdownList();\r\n    this.GetLocation();\r\n    this.GetDepartmentDll();\r\n    this.GetCompanyDll();\r\n    this.getTimeZoneList();\r\n    this.getTimeFormatList();\r\n\r\n    this.route.paramMap.subscribe(\r\n      params => {\r\n        const id = params.get('id');\r\n        if (id) {\r\n          this.loadSave = true;\r\n          this.fillForm(id);\r\n        }\r\n        else {\r\n          this.pageTitle = 'Add User';\r\n          this.userType.enable();\r\n          this.userType.setValidators(Validators.required);\r\n          this.userType.updateValueAndValidity();\r\n          ////  this.addOrUpdatePermission = this.isAdd;\r\n        }\r\n        this.getState();\r\n        this.getReportToList();\r\n      }\r\n    );\r\n  }\r\n  getTimeFormatList() {\r\n    this.lstTimeFormat = this.commonService.getTimeFormatList();\r\n  }\r\n\r\n  getTimeZoneList() {\r\n    this.commonService.getTimeZoneList().subscribe(resp => {\r\n      this.lstTimeZone = JSON.parse(resp);\r\n    })\r\n  }\r\n  getState() {\r\n    this.userService.getStateList().subscribe((result: any) => {\r\n      var data = result;\r\n      this.states = data;\r\n    })\r\n  }\r\n\r\n  getCountryDropdownList() {\r\n    this.userService.getCountryList().subscribe((result: any) => {\r\n      this.countryLists = result;\r\n      console.log(\"countryList\",this.countryLists);\r\n    })\r\n  }\r\n  GetLocation() {\r\n    this.userService.GetLocationDDL().subscribe((data: any) => {\r\n      this.lstLocation = data;\r\n    })\r\n  }\r\n  GetCompanyDll() {\r\n    this.userService.GetCompanyDll().subscribe((data: any) => {\r\n      this.lstcompany = data;\r\n    })\r\n  }\r\n  GetDepartmentDll() {\r\n    this.userService.GetDepartmentDll().subscribe((data: any) => {\r\n      this.lstdepartment = data;\r\n    })\r\n  }\r\n  onuserTypeChange() {\r\n    if (this.userTypeId !== null) {\r\n      const bankTextName = this.lstUserType.find(x => x.value == this.userTypeId).text;\r\n      this.resetFormOnuserTypeChange(bankTextName);\r\n    }\r\n  }\r\n  userTypeChange(text: string, value: string, event: any) {\r\n    // console.log(\"event\", event);\r\n    if (typeof text !== 'undefined' && text !== null) {\r\n      this.resetFormOnuserTypeChange(text);\r\n    }\r\n    if (typeof value !== 'undefined' && value !== null) {\r\n      //this.userType.setValue(value);\r\n      this.getRolesByUserType(value);\r\n    }\r\n  }\r\n  resetFormOnuserTypeChange(textName) {\r\n    //if (textName === 'Lender') { //Bank User\r\n    //  this.assignedBankId.enable();\r\n    //  this.assignedBankId.setValidators(Validators.required);\r\n    //}\r\n    //else {\r\n    this.assignedBankId.setValue(null);\r\n    this.assignedBankId.disable();\r\n    this.assignedBankId.clearValidators();\r\n    // }\r\n    this.assignedBankId.updateValueAndValidity();\r\n  }\r\n  getBankName() {\r\n    this.userService.getBankName().subscribe((result: any) => {\r\n      var data = result;\r\n      this.banknames = data;\r\n    })\r\n  }\r\n  getReportToList() {\r\n    debugger;\r\n    this.userService.getReportToList().subscribe((result: any) => {\r\n      this.lstReportTo = result;\r\n      console.log(\"this.lstReportTo\", this.lstReportTo);\r\n    })\r\n  } \r\n\r\n  getRolesByUserType(getRolesName: any) {\r\n    this.roleId.setValue(null);\r\n    this.userService.getRolesName(getRolesName).subscribe((result: any) => {\r\n      var data = result;\r\n      this.rolesnames = data;\r\n      // console.log(\" rolesnames\", this.rolesnames);\r\n    })\r\n  }\r\n  fillForm(id) {\r\n   /// this.addOrUpdatePermission = this.isUpdate;\r\n    this.userService.getUserDetail(id).subscribe((result: any) => {\r\n      if (result) {    \r\n        if (typeof result.userType !== 'undefined' && result.userType !== null) {\r\n          this.getRolesByUserType(result.userType);\r\n        }\r\n        console.log('result', result);\r\n        this.userTypeId = result.userType;\r\n        this.pageTitle = 'Edit User: ' + result.firstName + ' ' + result.lastName;\r\n        this.isEdit = true;\r\n        this.loadSave = false;\r\n        this.oldemail = result.email;\r\n        console.log('resultasdasd', result);\r\n        this.addUserForm.patchValue({\r\n          userid: result.id,\r\n          firstName: result.firstName,\r\n          lastName: result.lastName,\r\n          userType: result.userType,\r\n          email: result.email,\r\n          phone: result.phoneNumber,\r\n          locationID: result.locationID == null ?null : result.locationID.toString(),\r\n          departmentID: result.departmentID == null ?null : result.departmentID.toString(),\r\n          companyid: result.companyid == null ? '' : result.companyid.toString(),\r\n          address: result.address,\r\n          city: result.city,\r\n          state: result.state == null ? null : result.state.toString(),\r\n          zipCode: result.zipCode,\r\n          county: result.county == null ? null : parseInt(result.county),// == null ? null : result.county.toString((),\r\n          assignedBankId: result.assignedBankId,\r\n          position: result.position == null ? null : result.position.toLowerCase(),\r\n          empType: result.employeeType == null ? null : result.employeeType.toLowerCase(),\r\n          isActive: result.isActive,\r\n          isHOD: result.isHOD,\r\n          notes: result.notes,\r\n         // roleId: result.roleID.toString(),\r\n          roleId: result.roleID == null ? null : result.roleID.toString(),\r\n          consolidateduserid: result.uManagerId == null ? null : result.uManagerId.toString(),\r\n          executiveCommisionFormula: result.executiveCommisionFormula,\r\n          salesForceEmployeOrContact: result.refId,\r\n          timeZoneId: result.timezone,\r\n          reportToId: result.reportToId,\r\n          timeFormat: result.timeformat\r\n        });\r\n        this.onuserTypeChange();\r\n       // this.email.disable();\r\n      }\r\n    },\r\n      (error: any) => {\r\n        this.loadSave = false;\r\n      })\r\n  }\r\n  addeditUser() {\r\n    if (this.addUserForm.valid) {\r\n      this.loadSave = true;\r\n      this.newemail = this.addUserForm.controls.email.value;\r\n      this.userModel.Id = this.addUserForm.value.userid;\r\n      this.userModel.firstName = this.addUserForm.value.firstName;\r\n      this.userModel.lastName = this.addUserForm.value.lastName;\r\n     // this.userModel.userType = this.pageTitle == 'Add User' ? this.addUserForm.value.userType : this.userTypeId;\r\n      this.userModel.userType = this.addUserForm.value.userType;\r\n      this.userModel.email = this.addUserForm.controls.email.value;\r\n      this.userModel.phoneNumber = this.addUserForm.value.phone;\r\n      this.userModel.address = this.addUserForm.value.address;\r\n      this.userModel.city = this.addUserForm.value.city;\r\n      this.userModel.state = this.addUserForm.value.state;\r\n      this.userModel.zipCode = this.addUserForm.value.zipCode;\r\n      this.userModel.county = this.addUserForm.value.county;\r\n      this.userModel.assignedBankId = this.addUserForm.value.assignedBankId;\r\n      this.userModel.position = this.addUserForm.value.position;\r\n      this.userModel.locationID = this.addUserForm.value.locationID;\r\n      this.userModel.departmentID = this.addUserForm.value.departmentID;\r\n      this.userModel.timeZoneId = this.timeZoneId.value;\r\n      this.userModel.timeFormat = this.timeFormat.value;\r\n      this.userModel.companyid = this.addUserForm.value.companyid;\r\n      this.userModel.isHOD = this.addUserForm.value.isHOD == \"\" ? false : true;\r\n      this.userModel.employeeType = this.addUserForm.value.empType;\r\n      this.userModel.isActive = this.addUserForm.value.isActive == \"\" ? false : true;\r\n      this.userModel.notes = this.addUserForm.value.notes;\r\n      this.userModel.roleId = this.addUserForm.value.roleId;\r\n      this.userModel.UManagerId = this.addUserForm.value.consolidateduserid;\r\n      this.userModel.refFrom = this.isEmployee == true ? 'Employee' : \"Contact\";\r\n      this.userModel.salesForceEmployeOrContact = this.addUserForm.value.salesForceEmployeOrContact;\r\n      this.userModel.executiveCommisionFormula = this.addUserForm.value.executiveCommisionFormula == null ? null : this.addUserForm.value.executiveCommisionFormula.id;\r\n      this.userModel.oldemail = this.oldemail;\r\n      this.userModel.reportToId = this.reportToId.value;\r\n      if (this.newemail != this.oldemail) {\r\n        this.userModel.sendMail = true;\r\n      }\r\n      console.log('userModel', this.userModel);\r\n      let isSave = true;\r\n      if (this.userModel.Id == null) {//add\r\n        this.userService.CheckUserDuplicateORAssociate(this.userModel.email, this.userModel.Id).subscribe((result: any) => {\r\n          // console.log(\"result\", result);\r\n          if (result.responseMessage == \"duplicate\") {\r\n            isSave = false;\r\n            this.loadSave = false;\r\n            this.toaster.error(\"This email id is already in use. Please enter another email id.\");\r\n            return false;\r\n          }\r\n          else if (result.responseMessage == \"associate\") {\r\n            //already exists in ASPnetUsers-- now add only in maping table after confirmation\r\n            this.loadSave = false;\r\n            this.dialogService.confirm('Associate User', \"Email already exists in other Company. Do you want to Associate it?\").subscribe(confirmed => {\r\n              if (confirmed) {\r\n                //save in maping table\r\n                this.userService.AssociateUserWithCompany(this.userModel.email, this.userModel.Id, this.userModel.roleId, this.userModel.userType, this.userModel.departmentID, this.userModel.isHOD).subscribe((result: any) => {\r\n                  if (result.statusCode == 200) {\r\n                    this.toaster.success(\"User has been added successfully.\");\r\n                   // this.location.back();\r\n                    this.router.navigateByUrl(\"/user\");\r\n                    setTimeout(() => { this.loadSave = false; }, 3000);\r\n                  }\r\n                });\r\n                isSave = false;\r\n                return false;\r\n              }\r\n              else {//do nothing             \r\n                isSave = false;\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          else {//not duplicate and not associted-- save in database\r\n            this.addEditUser(this.userModel);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n\r\n       \r\n        this.addEditUser(this.userModel);\r\n      }\r\n    }\r\n    else {\r\n      this.commonService.validateAllFormFields(this.addUserForm);\r\n    }\r\n\r\n  }\r\n  addEditUser(userModel) {\r\n    //------------------------------------ In Case Of Update User ------------------------------------------------\r\n    if (this.userModel.Id != null) {\r\n      this.userService.CheckUserAssociate(this.userModel.email, this.userModel.Id).subscribe((result: any) => {\r\n        if (result.responseMessage == \"duplicate\") {\r\n          //isSave = false;  \r\n          this.loadSave = false;\r\n          this.toaster.error(\"This email id is already in use. Please enter another email id.\");\r\n          return false;\r\n        }\r\n        if (result.responseMessage == \"associateInUpdate\") {\r\n          this.loadSave = false;\r\n          this.toaster.error(\"Email Already Exists\");\r\n          return false;\r\n        }   \r\n        else\r\n        {\r\n\r\n          this.userService.addeditUser(userModel).subscribe((result: any) => {\r\n            if (result.statusCode == 200) {\r\n              this.toaster.success(result.responseMessage);\r\n              this.location.back();\r\n              setTimeout(() => { this.loadSave = false; }, 3000);\r\n            }\r\n            else {\r\n              this.loadSave = false;\r\n              this.toaster.error(result.responseMessage);\r\n            }\r\n          }, error => {\r\n            this.loadSave = false;\r\n          });\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      //---------------------------In Case Of Insert---------------------------------\r\n\r\n      this.userService.addeditUser(userModel).subscribe((result: any) => {\r\n        if (result.statusCode == 200) {\r\n          this.toaster.success(result.responseMessage);\r\n          this.location.back();\r\n          setTimeout(() => { this.loadSave = false; }, 3000);\r\n        }\r\n        else {\r\n          this.loadSave = false;\r\n          this.toaster.error(result.responseMessage);\r\n        }\r\n      }, error => {\r\n        this.loadSave = false;\r\n      });\r\n   //--------------------------------------------------------------------------------\r\n    }\r\n    //------------------------------------------------------------------------------------------------\r\n\r\n  \r\n  }\r\n  userForSaleForce(users) {\r\n    if (users == 'NormalUser') {\r\n      this.isNormalUser = false;\r\n      this.isEmployee = true;\r\n      this.intitialize();\r\n\r\n    }\r\n    else if (users == 'Contact') {\r\n      this.isNormalUser = true;\r\n      this.isEmployee = false;\r\n      this.salesForceEmployeOrContact.setValue(null);\r\n      this.userType.setValue('');\r\n      this.addUserForm.controls['userType'].setValidators(Validators.nullValidator);\r\n      this.addUserForm.controls['userType'].updateValueAndValidity();\r\n      this.addUserForm.controls['roleId'].setValidators(Validators.nullValidator);\r\n      this.addUserForm.controls['roleId'].updateValueAndValidity();\r\n      this.bindDropDownContact('contact_user');\r\n    }\r\n    else {\r\n      this.isNormalUser = true;\r\n      this.salesForceEmployeOrContact.setValue(null);\r\n      this.isEmployee = true;\r\n      this.bindDropDownEmployee('employee_user');\r\n    }\r\n\r\n  }\r\n  bindDropDownContact(userType) {\r\n    this.lstSalesforceEmployee = this.commonService.getMasterItemsList(userType).subscribe((result: any) => {\r\n      this.lstSalesforceEmployee = this.commonService.masters;\r\n      //this.rolesnames = data;\r\n      // console.log(\"contact\", this.commonService.masters);\r\n    });\r\n\r\n  }\r\n  bindDropDownEmployee(userType) {\r\n    this.lstSalesforceEmployee = this.commonService.getMasterItemsList(userType).subscribe((result: any) => {\r\n      this.lstSalesforceEmployee = this.commonService.masters;\r\n      //this.rolesnames = data;\r\n      // console.log(\"Employee\", this.commonService.masters);\r\n    });\r\n\r\n  }\r\n\r\n  FillDataForEmployeOrContact(event) {\r\n    if (this.isEmployee == true) {\r\n      this.salesForceEmployeOrContact.setValue(event.value);\r\n      this.userService.GetEmployeeDetailById(event.value, this.isEmployee).subscribe((result: any) => {\r\n        if (result) {\r\n          if (typeof result[0].user_type !== 'undefined' && result[0].user_type !== null) {\r\n            this.getRolesByUserType(result[0].user_type);\r\n          }\r\n          //this.refFrom.setValue('Employee');\r\n          // console.log('GetData', result)\r\n          //this.userTypeId = result.userType;\r\n          this.userType.setValue(result[0].user_type);\r\n          //this.pageTitle = 'Edit User: ' + result.firstName + ' ' + result.lastName;\r\n          this.loadSave = false;\r\n          this.addUserForm.patchValue({\r\n            //userid: result.id,\r\n            firstName: result[0].FirstName,\r\n            lastName: result[0].LastName,\r\n            userType: result[0].user_type,\r\n            email: result[0].Email,\r\n            phone: result[0].Mobile,\r\n            locationID: null,\r\n            departmentID: null,\r\n            companyid: result[0].CompanyId = '' ? result[0].CompanyId : result[0].CompanyId.toString(),\r\n            address: result[0].Street,\r\n            city: result[0].City,\r\n            state: null,\r\n            refFrom: 'Employee',\r\n            zipCode: result[0].PostalCode,\r\n            county: null,\r\n            assignedBankId: '',\r\n            position: null,\r\n            empType: null,\r\n            isActive: '',\r\n            isHOD: '',\r\n            notes: '',\r\n            roleId: null,\r\n            executiveCommisionFormula: ''\r\n          });\r\n          //this.onuserTypeChange();\r\n        }\r\n      },\r\n        (error: any) => {\r\n          this.loadSave = false;\r\n        })\r\n    }\r\n    else {\r\n      this.salesForceEmployeOrContact.setValue(event.value);\r\n      this.userService.GetEmployeeDetailById(event.value, this.isEmployee).subscribe((result: any) => {\r\n        if (result) {\r\n          if (typeof result[0].user_type !== 'undefined' && result[0].user_type !== null) {\r\n            this.getRolesByUserType(result.userType);\r\n          }\r\n          this.userType.setValue(result[0].user_type);\r\n\r\n          //this.userTypeId = result.userType;\r\n          //this.pageTitle = 'Edit User: ' + result[0].FirstName + ' ' + result[0].LastName;\r\n          this.loadSave = false;\r\n          this.addUserForm.patchValue({\r\n            //userid: result.id,\r\n            firstName: result[0].FirstName,\r\n            lastName: result[0].LastName,\r\n            userType: result[0].user_type,\r\n            email: result[0].Email,\r\n            phone: result[0].Mobile,\r\n            locationID: null,\r\n            departmentID: null,\r\n            refFrom: 'contact',\r\n            companyid: result[0].CompanyId = '' ? result[0].CompanyId : result[0].CompanyId.toString(),\r\n            address: result[0].Street,\r\n            city: result[0].City,\r\n            state: '',\r\n            zipCode: result[0].PostalCode,\r\n            county:null,\r\n            assignedBankId: '',\r\n            position: null,\r\n            empType: null,\r\n            isActive: '',\r\n            isHOD: '',\r\n            notes: '',\r\n            roleId: null,\r\n            executiveCommisionFormula: ''\r\n          });\r\n          // this.onuserTypeChange();\r\n        }\r\n      },\r\n        (error: any) => {\r\n          this.loadSave = false;\r\n        })\r\n    }\r\n  }\r\n\r\n  private intitialize() {\r\n    this.addUserForm = this.fb.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      //userType: [{ value: null, disabled: true }, Validators.required],\r\n      userType: [null, Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      phone: ['', Validators.nullValidator],\r\n      locationID: [null, Validators.nullValidator],\r\n      departmentID: [null, Validators.nullValidator],\r\n      companyid: [null, Validators.nullValidator],\r\n      address: ['', [Validators.nullValidator, Validators.maxLength(500)]],\r\n      city: ['', [Validators.nullValidator, Validators.maxLength(100)]],\r\n      state: [null, Validators.nullValidator],\r\n      zipCode: ['', [Validators.nullValidator, Validators.maxLength(5)]],\r\n      timeFormat: [12, [Validators.required]],\r\n      county: [null, Validators.nullValidator],\r\n      position: [null],\r\n      assignedBankId: [{ value: null, disabled: true }],\r\n      empType: [null],\r\n      isActive: [''],\r\n      isHOD: [''],\r\n      notes: [''],\r\n      userid: [null],\r\n      roleId: [null, Validators.required],\r\n      executiveCommisionFormula: [null],\r\n      salesForceEmployeOrContact: [null],\r\n      employeeContactPreferredBy: ['NormalUser'],\r\n      refFrom: ['']\r\n    });\r\n  }\r\n  Cancel() {\r\n    this.location.back();\r\n    //this.router.navigateByUrl(\"/user\");\r\n  }\r\n  get firstName() { return this.addUserForm.get('firstName'); }\r\n  get lastName() { return this.addUserForm.get('lastName'); }\r\n  get userType() { return this.addUserForm.get('userType'); }\r\n  get email() { return this.addUserForm.get('email'); }\r\n  get phone() { return this.addUserForm.get('phone'); }\r\n  get departmentID() { return this.addUserForm.get('departmentID'); }\r\n  get companyid() { return this.addUserForm.get('companyid'); }\r\n  get isHOD() { return this.addUserForm.get('isHOD'); }\r\n  get locationID() { return this.addUserForm.get('locationID'); }\r\n  get address() { return this.addUserForm.get('address'); }\r\n  get position() { return this.addUserForm.get('position'); }\r\n  get empType() { return this.addUserForm.get('empType'); }\r\n  get isActive() { return this.addUserForm.get('isActive'); }\r\n  get notes() { return this.addUserForm.get('notes'); }\r\n  get state() { return this.addUserForm.get('state'); }\r\n  get timeZoneId() { return this.addUserForm.get('timeZoneId'); }\r\n  get timeFormat() { return this.addUserForm.get('timeFormat'); }\r\n  get zipCode() { return this.addUserForm.get('zipCode'); }\r\n  get city() { return this.addUserForm.get('city'); }\r\n  get county() { return this.addUserForm.get('county'); }\r\n  get assignedBankId() { return this.addUserForm.get('assignedBankId'); }\r\n  get roleId() { return this.addUserForm.get('roleId'); }\r\n  get consolidateduserid() { return this.addUserForm.get('consolidateduserid'); }\r\n  get executiveCommisionFormula() { return this.addUserForm.get('executiveCommisionFormula'); }\r\n  get salesForceEmployeOrContact() { return this.addUserForm.get('salesForceEmployeOrContact'); }\r\n\r\n  get employeeContactPreferredBy() { return this.addUserForm.get('employeeContactPreferredBy'); }\r\n  get refFrom() { return this.addUserForm.get('refFrom'); }\r\n  get reportToId() { return this.addUserForm.get('reportToId'); }\r\n}\r\n","import { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\r\nimport { User, ManageUserService } from './addedituser.service';\r\nimport { CommonService, Master, ModuleList } from '../shared/common.service';\r\nimport { SelectionType, NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { FormGroup, NgForm, NgSelectOption, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { NgSelectComponent } from '@ng-select/ng-select';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { ConfirmationDialogService } from '../shared/confirmation-dialog/confirmation-dialog.service';\r\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\nimport { SetPassword, UserService } from '../shared/user.service';\r\nimport { SearchfilteraddComponent } from '../shared/searchfilter/searchfilteradd.component';\r\nimport { EqualValidator } from '../shared/custom-validation/equal-validator';\r\n\r\n@Component({\r\n  selector: 'ListUser',\r\n  templateUrl: './listusers.component.html'\r\n})\r\n\r\nexport class ListUsersComponent implements OnInit {\r\n  @ViewChild('userTypeSelect', { static: false }) userTypeSelect: NgSelectComponent;\r\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\r\n  @ViewChild('setPassword', { static: false }) setPasswordModal: ModalDirective;\r\n  UserType: Observable<any>;\r\n  userList: User[];\r\n  lstUserType: any;\r\n  searchUserType = '';\r\n  loginuserid: any;\r\n  loadSave: boolean = false;\r\n  //modulePermission: ModuleList;\r\n  loading = false;\r\n  sortDir = 'desc';\r\n  sortColumn = 'Createdon';\n  pagedData: any = {\r\n    pager: {},\r\n    data: []\r\n  };\r\n  listFilter = '';\r\n  searchTxt = '';\r\n\r\n  lstPageSize: any\r\n  pageSizeValue: number;\r\n  modulePermission: any[] = [];\r\n  isAdd: boolean = false;\r\n  isUpdate: boolean = false;\r\n  isDelete: boolean = false;\r\n  userid: any;\r\n  token: any;\r\n  Name: any;\r\n  currentPage: any;\r\n  isEmailConfirmed: boolean = false;\r\n  @Input() offset: number;\r\n  deleteId: any;\r\n  selected = [];\r\n  tableName = 'AspNetUsers';\r\n  SelectionType = SelectionType;\r\n  listFiltertext = '';\r\n  is_filter: any\r\n  companyid: number;\r\n  @ViewChild('templateFilterView', { static: false }) FilterViewModal: SearchfilteraddComponent;\r\n\r\n  companyId: any;\r\n  custom_view_id = '';\r\n  searchFilter = '';\r\n  moduleName = 'users';\r\n  submoduleName = 'user';\r\n  myCheckbox: any = false;\r\n  jsonData: any;\r\n  columndata: any;\r\n  columnheading: any;\r\n  totalRecords: any;\r\n\r\n\r\n\r\n  setPasswordModel: SetPassword = new SetPassword();\r\n  constructor(private userService: ManageUserService, private userServicepassword: UserService, private dialogService: ConfirmationDialogService,\r\n    private commonService: CommonService, private router: Router,\r\n    private activeRoute: ActivatedRoute\r\n    , private toaster: ToastrService\r\n    , private fb: FormBuilder) {\r\n    this.commonService.getMasterItemsList(\"manageuser_usertype_add\").subscribe((result: any) => {\r\n      this.lstUserType = this.commonService.masters;\r\n    })\r\n    const moduleCode = this.activeRoute.snapshot.data.moduleCode;\r\n    this.modulePermission = this.commonService.getPermissiondata(moduleCode);\r\n\r\n    let add = this.modulePermission.find(m => m.privilegecode.toUpperCase() == 'USERADD');\r\n    if (add == undefined) {\r\n      add = \"null\";\r\n    } else {\r\n      this.isAdd = true;\r\n    }\r\n    let update = this.modulePermission.find(m => m.privilegecode.toUpperCase() == 'USERUPDATE');\r\n    if (update == undefined) {\r\n      update = \"null\";\r\n    } else {\r\n      this.isUpdate = true;\r\n    }\r\n\r\n    let deletedata = this.modulePermission.find(m => m.privilegecode.toUpperCase() == 'USERDELETE');\r\n    if (deletedata == undefined) {\r\n      deletedata = \"null\";\r\n    } else {\r\n      this.isDelete = true;\r\n    }\r\n\r\n\r\n    // console.log(\"modulePermission\",  this.modulePermission);\r\n    this.commonService.getLoggedInName.subscribe((userdetail: any) => {\r\n      this.loginuserid = userdetail.id;\r\n      this.companyid = userdetail.companyId;\r\n    });\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.currentPage = 1;\r\n    this.pageSizeValue = 15;\r\n    this.getPageSizes();\r\n    this.getuserList();\r\n    this.refresh();\r\n  }\r\n\r\n  SetUserType(utype: any) {\r\n    if (typeof utype === 'undefined') {\n      this.searchUserType = '';\n    } else {\n      this.searchUserType = utype.value;\n      this.listFiltertext = \"UserTypeID = '\" + this.searchUserType + \"'\";\n      this.refresh();\n    }\r\n   // this.searchUserType = utype.value;\r\n   \r\n  }\r\n\r\n  getuserList() {\r\n    this.commonService.getMasterItemsList(\"manageuser_usertype_add\").subscribe((result: any) => {\r\n      this.lstUserType = this.commonService.masters;\r\n    })\r\n  }\r\n  restddl() {\r\n    this.searchUserType = '';\r\n    this.reset();\r\n  }\r\n\r\n  updateFilter(event) {\r\n    this.searchTxt = event.target.value;\r\n    let keycode = (event.keyCode ? event.keyCode : event.which);\r\n    if (keycode === 13 || keycode === '13') {\r\n      this.search();\r\n    }\r\n  }\r\n\r\n  getPageSizes() {\r\n    this.commonService.getMasterItemsList(\"PageSize\").subscribe((res: any) => {\r\n      this.lstPageSize = this.commonService.masters;\r\n    })\r\n  }\r\n\r\n  ApplyAdvanceFilter(event) {\r\n    this.currentPage = 1;\r\n    this.listFiltertext = '';\r\n    this.listFiltertext = event;\r\n    this.refresh();\r\n  }\r\n\r\n  onChange($event) {\r\n    this.loading = true;\r\n    this.refresh()\r\n    //this.userService.getUserList(this.listFilter, this.searchUserType, this.sortColumn, this.sortDir, 0, this.pageSizeValue, this.loginuserid).subscribe(response => {\r\n    //  this.pagedData = this.userService.pagedData;\r\n    //  this.loading = false;\r\n    //}, error => {\r\n    //  this.loading = false;\r\n    //});\r\n\r\n  }\r\n\r\n\r\n  //search() {\r\n  //  this.loading = true;\r\n  //  this.userService.getUserList(this.listFilter, this.searchUserType, this.sortColumn, this.sortDir, 0, this.pageSizeValue, this.loginuserid).subscribe(response => {\r\n  //    this.pagedData = this.userService.pagedData;\r\n  //    this.loading = false;\r\n  //  }, error => {\r\n  //    this.loading = false;\r\n  //  });\r\n  //}\r\n\r\n  reset() {\r\n    this.table.selected = [];\r\n    this.table.sorts = [];\r\n    this.userTypeSelect.clearModel();\r\n    this.loading = true;\r\n    this.listFilter = '';\r\n    this.listFiltertext = '';\r\n    this.searchUserType = '';\r\n    this.sortDir = 'desc';\r\n    this.sortColumn = 'CreatedOn';\r\n    this.pageSizeValue = 15;\r\n    this.currentPage = 1;\r\n    this.refresh();\r\n\r\n  }\r\n\r\n  setPage($event) {\r\n    this.loadSave = true;\r\n    this.currentPage = $event.page;\r\n    this.refresh();\r\n  }\r\n\r\n  onSort($event) {\r\n    const sort = $event.sorts[0]\r\n    this.sortDir = sort.dir;\r\n    this.sortColumn = sort.prop;\r\n    this.refresh();\r\n  }\r\n\r\n  //refresh() {\r\n  //  this.loading = true;\r\n  //  this.userService.getUserList(this.listFiltertext, this.searchUserType, this.sortColumn, this.sortDir, this.currentPage, this.pageSizeValue, this.loginuserid).subscribe(response => {\r\n\r\n  //    this.pagedData = this.userService.pagedData;\r\n  //    this.offset = 1;\r\n  //    this.loading = false;\r\n  //  }, error => {\r\n  //    this.loading = false;\r\n  //  })\r\n  //}\r\n\r\n  refresh() {\r\n    this.selected = [];\r\n    this.deleteId = null;\r\n    this.loadSave = true;\r\n    this.userService.GetUserlist(this.listFiltertext, this.searchUserType, this.sortColumn, this.sortDir, this.currentPage, this.pageSizeValue, this.loginuserid, this.custom_view_id, this.searchFilter, this.moduleName, this.submoduleName, this.companyId,this.myCheckbox)\r\n      .subscribe(response => {\r\n        debugger;\r\n        this.jsonData = response;\r\n        this.columndata = this.jsonData.data;\r\n        this.columnheading = this.jsonData.schema;\r\n        if (response.data.length > 0) {\r\n          this.totalRecords = this.columndata[0].total_records;\r\n        } else {\r\n          this.totalRecords = 0;\r\n        }\r\n        this.offset = this.currentPage;\r\n        this.loadSave = false;\r\n      }, error => {\r\n        this.loadSave = false;\r\n      })\r\n  }\r\n  get curPage(): number {\r\n    return this.offset;\r\n  }\r\n\r\n\r\n  disable(user) {\r\n    const message = `Are you sure you want to disable User \"${user.Name}\"?`;\r\n    this.dialogService.confirm('Disable User user', message).subscribe(confirmed => {\r\n      if (confirmed) {\r\n        this.userService.changeStatus(user.Id).subscribe(r => {\r\n          this.refresh();\r\n          this.toaster.success(`\"${user.Name}\" has been disabled   successfully`);\r\n        }, error => {\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  enable(user) {\r\n    const message = `Are you sure you want to enable User user  \"${user.Name}\"?`;\r\n    this.dialogService.confirm('Enable this.myGroup user', message).subscribe(confirmed => {\r\n      if (confirmed) {\r\n        this.userService.changeStatus(user.Id).subscribe(response => {\r\n          this.refresh();\r\n          this.toaster.success(`\"${user.Name}\" has been enabled  successfully`);\r\n        }, error => {\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteAll() {\r\n    if (this.deleteId != null && this.deleteId != \"\") {\r\n      const message = `Are you sure you want to delete selected user(s)?`;\r\n      this.dialogService.confirm('DELETE USER(S)', message).subscribe(confirmed => {\r\n        if (confirmed) {\r\n          this.userService.deleteUser(this.deleteId).subscribe(r => {\r\n            this.toaster.success(`Selected record(s) has been deleted successfully`);\r\n            this.deleteId = \"\";\r\n            this.selected = [];\r\n            this.refresh();\r\n          }, error => {\r\n          });\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.toaster.error(\"Please select at least one row.\");\r\n    }\r\n  }\r\n\r\n  //function is used to delete the user\r\n  DeleteUser(row: any) {\r\n    const message = `Are you sure you want to delete User \"${row.Name}\"?`;\r\n    this.dialogService.confirm('Delete User ', message).subscribe(confirmed => {\r\n      if (confirmed) {\r\n        this.userService.deleteUser(row.Id).subscribe((result: any) => {\r\n          if (result.statusCode == 200) {\r\n            this.toaster.success(result.responseMessage);\r\n            this.refresh();\r\n          }\r\n          else {\r\n            this.toaster.error(result.responseMessage);\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  //Password model popup\r\n\r\n  setPasswordForm = this.fb.group({\r\n    password: ['', Validators.required],\r\n    confirmPassword: ['', Validators.required]\r\n  },\n    {\n      validator: EqualValidator.matchingPasswords('password', 'confirmPassword')\n    });\r\n  get password() { return this.setPasswordForm.get('password'); }\r\n  get confirmPassword() { return this.setPasswordForm.get('confirmPassword'); }\r\n  getToken(email: any) {\r\n    this.userService.gettoken(email).subscribe((result: any) => {\r\n      console.log('result', result);\r\n      this.token = result;\r\n    })\r\n  }\r\n\r\n  showModel(data: any) {\r\n    this.setPasswordForm.reset();\r\n    this.setPasswordModal.show();\r\n    console.log('data', data);\r\n    this.getToken(data.email)\r\n    this.userid = data.Id;\r\n    this.Name = data.Name;\r\n    this.isEmailConfirmed = data.EmailConfirmed;\r\n  }\r\n  Closemodel() {\r\n    this.setPasswordModal.hide();\r\n  }\r\n  PasswordSet() {\n    this.loadSave = true;\n    if (this.setPasswordForm.valid) {\n      this.setPasswordModel.password = this.setPasswordForm.value.password;\n      this.setPasswordModel.confirmPassword = this.setPasswordForm.value.confirmPassword;\n      this.setPasswordModel.userId = this.userid;\n      this.setPasswordModel.token = this.token;\n      this.setPasswordModel.ResetToken = this.token;\n      if (this.isEmailConfirmed != true) {\n        this.userServicepassword.setPassword(this.setPasswordModel).subscribe((res: any) => {\n          if (res.statusCode === 200) {\n            //localStorage.removeItem(\"access_token\");\r\n            //localStorage.removeItem(\"usertype\");\r\n            //localStorage.removeItem(\"moduleList\");\r\n            //localStorage.removeItem(\"userinfo\");\r\n            //this.LoginUser = new UserDetails();\n            this.toaster.success(\"Password has been set successfully. Please login.\");\n            this.setPasswordModal.hide();\n            this.loadSave = false;\n            this.listFilter = null;\n            if (this.searchUserType != null && this.searchUserType != '') {\n              this.userTypeSelect.clearModel();\r\n              this.restddl();\r\n            }\r\n            this.refresh();\n          }\n          else {\n            this.toaster.error(res.responseMessage);\n            this.loadSave = false;\n          }\n        });\r\n      }\n      else {\n        this.userServicepassword.ResetPassword(this.setPasswordModel).subscribe((res: any) => {\n          if (res.statusCode === 200) {\n            //localStorage.removeItem(\"access_token\");\r\n            //localStorage.removeItem(\"usertype\");\r\n            //localStorage.removeItem(\"moduleList\");\r\n            //localStorage.removeItem(\"userinfo\");\r\n            //this.LoginUser = new UserDetails();\n            this.toaster.success(\"Password has been reset successfully. Please login.\");\n            this.setPasswordModal.hide();\n            this.loadSave = false;\n            if (this.searchUserType != null && this.searchUserType != '') {\n              this.getuserList();\n              this.userTypeSelect.clearModel();\r\n              this.restddl();\r\n            }\n\r\n            this.listFilter = '';\n            this.searchUserType = '';\n            this.refresh();\n          }\n          else {\n            this.toaster.error(res.responseMessage);\n            this.loadSave = false;\n          }\n        });\r\n      }\n\n    }\n    else {\n      this.commonService.validateAllFormFields(this.setPasswordForm);\n      this.loadSave = false;\n    }\n  }\r\n\r\n  onSelect({ selected }) {\r\n    if (this.deleteId == \"\" || this.deleteId == null || this.deleteId == 'undefined') {\r\n      this.selected.splice(0, this.selected.length);\r\n      this.selected.push(...selected);\r\n      this.deleteId = null;\r\n      this.deleteId = \"\";\r\n      for (let i = 0; i < selected.length; i++) {\r\n        this.deleteId += selected[i].Id.toString() + \",\";\r\n      }\r\n\r\n    }\r\n    else {\r\n      this.deleteId = null;\r\n      this.deleteId = \"\";\r\n      for (let i = 0; i < selected.length; i++) {\r\n        this.deleteId += selected[i].Id.toString() + \",\";\r\n      }\r\n    }\r\n  }\r\n  popUpOpen() {\r\n    this.is_filter = '';\r\n    //if (this.listFiltertext != null)\r\n    //  this.is_filter = this.listFiltertext.length;\r\n    this.FilterViewModal.show(this.companyid, this.is_filter);\r\n  }\r\n\r\n  search() {\r\n    this.currentPage = 1;\r\n    this.listFiltertext = '';\r\n    if (this.listFilter.length > 0) {\r\n      this.listFiltertext = \"Name like '%\" + this.listFilter + \"%'\";\r\n    }\r\n    this.refresh();\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddEditUserComponent } from './addedituser.component';\r\nimport { ListUsersComponent } from './listusers.component';\r\nimport { AuthGuard } from '../../auth/auth.guard';\r\n\nconst routes: Routes = [\n  { path: '', component: ListUsersComponent },\n  { path: 'adduser', component: AddEditUserComponent,  canActivate: [AuthGuard], data: { privilegeCode: 'UserAdd' }},\n  { path: 'edituser/:id', component: AddEditUserComponent, canActivate: [AuthGuard], data: { privilegeCode: 'USERUPDATE' }} \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AddEditUserComponent } from './addedituser.component';\n\nimport { ListUsersComponent } from './listusers.component';\n\nimport { ManageUserService } from './addedituser.service';\nimport { UserRoutingModule } from './user-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n@NgModule({\n  declarations: [\n    AddEditUserComponent,\n    ListUsersComponent\n  ],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    SharedModule, ModalModule\n \n  ],\n  providers: [ManageUserService],\n  bootstrap: [AddEditUserComponent]\n})\nexport class UserModule { }\n"],"sourceRoot":"webpack:///"}